var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.549,1,1.016]],["body/components/AppComponent.html",[0,0.981,1,1.868,2,1.64,3,0.243,4,0.212,5,1.394,6,1.394,7,1.394,8,1.394,9,0.212,10,3.036,11,0.456,12,4.922,13,1.145,14,2.334,15,1.978,16,2.938,17,1.872,18,5.438,19,1.872,20,4.816,21,0.496,22,1.35,23,4.522,24,1.252,25,3.036,26,3.005,27,1.037,28,3.586,29,1.872,30,1.872,31,0.882,32,0.026,33,0.871,34,0.666,35,0.772,36,2.593,37,0.942,38,1.492,39,1.492,40,4.078,41,3.591,42,3.586,43,0.56,44,0.456,45,2.674,46,3.036,47,1.6,48,0.243,49,0.496,50,1.073,51,2.188,52,3.586,53,3.036,54,3.586,55,3.036,56,3.586,57,2.188,58,3.586,59,2.188,60,2.674,61,2.674,62,1.394,63,1.872,64,1.872,65,0.942,66,1.739,67,1.394,68,1.394,69,1.073,70,1.394,71,1.005,72,1.394,73,1.073,74,1.394,75,1.005,76,1.394,77,1.005,78,1.394,79,1.073,80,1.394,81,1.073,82,1.394,83,1.394,84,1.005,85,1.394,86,0.942,87,1.221,88,1.394,89,1.005,90,0.721,91,1.394,92,1.145,93,1.145,94,1.394,95,1.145,96,1.304,97,1.394,98,0.017,99,0.017]],["title/modules/AppModule.html",[100,1.756,101,2.277]],["body/modules/AppModule.html",[1,2.013,3,0.24,4,0.209,9,0.209,15,1.285,32,0.026,36,1.576,43,0.796,44,0.449,45,2.635,46,2.992,47,1.576,48,0.24,49,0.488,90,0.71,98,0.017,99,0.017,101,4.651,102,1.576,103,1.984,104,2.992,105,2.992,106,2.992,107,2.992,108,2.992,109,3.481,110,3.793,111,3.793,112,3.681,113,3.481,114,3.681,115,2.67,116,1.979,117,1.827,118,3.533,119,2.909,120,3.556,121,2.67,122,4.038,123,2.67,124,4.769,125,2.992,126,2.369,127,2.992,128,3.533,129,2.156,130,3.533,131,2.286,132,3.533,133,2.369,134,3.533,135,1.374,136,3.556,137,3.556,138,1.694,139,3.533,140,3.533,141,1.827,142,3.533,143,3.533,144,2.992,145,3.533,146,3.533,147,2.635,148,3.533,149,3.533,150,3.533,151,3.533,152,2.635,153,3.533,154,1.827,155,3.533]],["title/modules/AppRoutingModule.html",[100,1.756,109,1.902]],["body/modules/AppRoutingModule.html",[3,0.304,4,0.264,9,0.264,32,0.026,43,0.797,44,0.569,48,0.304,49,0.619,71,1.255,75,1.255,77,1.255,84,1.255,86,1.176,89,1.255,98,0.02,99,0.02,102,1.996,109,3.112,121,2.506,123,3.112,156,3.789,157,4.476,158,3.726,159,3.688,160,1.74,161,4.476,162,4.476,163,2.73,164,3.338,165,4.476,166,3,167,4.476,168,4.476,169,4.476,170,4.476,171,3,172,3.789,173,2.146,174,4.476,175,4.476,176,4.476,177,4.476,178,4.476,179,4.476,180,4.476,181,4.476,182,4.476,183,2.73,184,4.476]],["title/guards/AuthGuard.html",[166,2.277,185,2.277]],["body/guards/AuthGuard.html",[3,0.243,4,0.211,9,0.211,11,0.611,16,2.184,21,0.495,24,1.338,27,1.035,29,1.87,30,1.87,31,1.184,32,0.026,33,0.72,34,0.665,35,1.035,43,0.676,44,0.455,48,0.243,49,0.751,50,1.738,98,0.017,99,0.017,154,1.851,159,2.935,160,1.391,166,4.183,185,3.224,186,3.579,187,3.031,188,4.073,189,6.693,190,1.349,191,1.108,192,1.851,193,1.934,194,3.494,195,3.579,196,3.579,197,5.809,198,5.809,199,5.809,200,3.579,201,4.81,202,4.81,203,4.81,204,4.81,205,5.433,206,1.264,207,5.433,208,4.81,209,4.073,210,1.035,211,2.112,212,3.587,213,3.587,214,5.433,215,1.597,216,1.87,217,1.391,218,2.399,219,2.399,220,0.94,221,3.579,222,3.031,223,1.489,224,2.669,225,3.579,226,3.579,227,1.749,228,3.579,229,3.031,230,1.716,231,3.031,232,3.031,233,2.184]],["title/interfaces/Booking.html",[135,1.32,190,0.952]],["body/interfaces/Booking.html",[3,0.257,4,0.223,9,0.223,11,0.481,21,0.523,22,1.399,32,0.026,34,0.968,35,1.074,37,1.825,48,0.339,87,1.7,98,0.018,99,0.018,135,2.308,190,1.665,234,1.814,235,2.821,236,3.045,237,2.58,238,5.227,239,3.04,240,4.728,241,4.603,242,5.585,243,4.25,244,3.552,245,2.99,246,1.814,247,4.225,248,4.225,249,3.203,250,3.203,251,3.203]],["title/interfaces/BookingDetails.html",[190,0.952,246,1.629]],["body/interfaces/BookingDetails.html",[3,0.282,4,0.245,9,0.245,11,0.527,21,0.573,22,1.486,32,0.026,34,0.952,37,1.758,48,0.36,87,1.413,98,0.019,99,0.019,135,2.269,190,1.725,234,1.989,235,3.094,236,3.233,237,2.739,238,3.513,239,2.54,240,4.847,241,3.094,243,4.357,244,3.52,245,2.947,246,2.54,247,4.486,248,4.486,249,3.513,250,3.513,251,3.513,252,1.989]],["title/modules/BookingModule.html",[100,1.756,110,2.072]],["body/modules/BookingModule.html",[3,0.28,4,0.244,9,0.244,32,0.026,43,0.768,44,0.525,48,0.28,49,0.571,71,1.931,86,1.809,98,0.019,99,0.019,102,1.843,103,2.198,110,4.201,115,2.959,116,2.313,117,2.136,119,3.224,121,2.959,123,2.959,136,3.94,137,3.94,138,1.98,158,3.542,160,1.606,163,2.52,164,3.08,183,3.224,253,3.498,254,3.498,255,3.498,256,3.498,257,3.636,258,4.131,259,3.542,260,2.52,261,3.498,262,4.131,263,3.498]],["title/interfaces/BookingService.html",[190,0.952,264,1.902]],["body/interfaces/BookingService.html",[3,0.275,4,0.239,9,0.239,11,0.515,21,0.56,27,1.358,31,1.5,32,0.025,33,0.913,34,0.843,35,1.313,43,0.607,48,0.275,98,0.019,99,0.019,135,2.453,190,1.619,191,1.404,210,1.358,211,2.655,217,1.575,234,1.943,239,2.924,245,2.97,246,3.097,264,2.923,265,3.431,266,5.22,267,5.22,268,4.42,269,4.42,270,5.163,271,4.42,272,3.893,273,4.42,274,4.053,275,4.42,276,4.053,277,4.053,278,4.42,279,4.053,280,3.431,281,4.053,282,3.022,283,4.053]],["title/interceptors/CacheInterceptor.html",[112,2.072,284,2.533]],["body/interceptors/CacheInterceptor.html",[3,0.238,4,0.207,9,0.207,11,0.445,16,2.136,21,0.484,24,1.237,27,1.02,29,1.842,30,1.842,31,1.166,32,0.026,33,0.71,34,0.655,35,1.02,43,0.67,44,0.445,48,0.238,49,0.484,50,1.607,51,2.136,98,0.017,99,0.017,112,3.512,113,3.008,126,3.177,131,2.272,141,1.81,144,2.965,173,1.679,191,1.091,210,1.02,211,2.338,216,1.842,217,1.361,219,2.347,220,0.92,227,1.954,285,3.501,286,4.549,287,2.965,288,4.013,289,3.501,290,3.501,291,4.739,292,4.739,293,4.874,294,4.293,295,4.874,296,3.501,297,4.013,298,4.739,299,3.859,300,4.739,301,4.739,302,2.965,303,4.739,304,4.549,305,2.347,306,2.965,307,3.501,308,3.501,309,3.501,310,5.093,311,3.501,312,4.739,313,3.501,314,4.739,315,3.501,316,4.739,317,4.032,318,1.81,319,3.501,320,3.501,321,3.501,322,3.501,323,3.501,324,3.501,325,3.501,326,3.501,327,2.965,328,1.81,329,3.501,330,1.562,331,3.501,332,3.501,333,3.501,334,3.501,335,3.501,336,2.965]],["title/directives/CompareDirective.html",[65,0.892,93,1.084]],["body/directives/CompareDirective.html",[3,0.279,4,0.243,9,0.243,11,0.523,13,1.313,14,1.795,24,0.947,32,0.026,37,1.384,43,0.613,44,0.523,48,0.358,49,0.568,50,1.576,65,1.611,66,1.834,92,1.313,93,1.856,98,0.019,99,0.019,120,3.93,138,1.972,152,3.067,154,2.127,173,1.972,206,1.081,210,0.885,227,2.115,237,2.127,337,3.067,338,4.11,339,4.462,340,3.483,341,3.483,342,5.27,343,3.067,344,3.483,345,3.93,346,4.113,347,4.113,348,4.113,349,4.113,350,2.757,351,3.483,352,2.724,353,4.462,354,3.067,355,2.509,356,3.483,357,3.067,358,3.483,359,3.483,360,3.483,361,3.483,362,3.483,363,3.483,364,4.462,365,3.483,366,3.483,367,3.067,368,3.483,369,3.483,370,3.483]],["title/modules/CoreModule.html",[100,1.756,111,2.072]],["body/modules/CoreModule.html",[3,0.267,4,0.232,9,0.232,32,0.026,43,0.77,44,0.5,48,0.267,49,0.544,69,2.046,73,2.046,75,1.918,98,0.018,99,0.018,102,1.756,103,2.131,111,4.257,115,2.869,116,2.205,117,2.035,119,3.125,121,2.869,123,2.869,158,3.434,160,1.53,183,3.125,257,3.589,259,3.434,260,2.402,263,3.333,371,3.333,372,3.333,373,3.333,374,3.333,375,3.589,376,3.937,377,3.937,378,3.937,379,3.937,380,3.333]],["title/components/FooterComponent.html",[0,0.549,69,1.016]],["body/components/FooterComponent.html",[0,0.986,1,1.089,2,1.657,3,0.247,4,0.215,5,1.415,6,1.415,7,1.415,8,1.415,9,0.215,11,0.463,13,1.162,14,2.339,15,1.324,17,1.891,19,1.891,21,0.503,24,1.403,27,1.047,32,0.025,33,0.82,43,0.424,44,0.463,48,0.247,49,0.503,57,2.221,60,2.714,61,3.628,62,1.415,63,1.891,64,1.891,65,0.956,66,1.75,67,1.415,68,1.415,69,1.75,70,1.415,71,1.021,72,1.415,73,1.089,74,1.415,75,1.021,76,1.415,77,1.021,78,1.415,79,1.089,80,1.415,81,1.089,82,1.415,83,1.415,84,1.021,85,1.415,86,0.956,87,1.24,88,1.415,89,1.021,90,0.731,91,1.415,92,1.162,93,1.162,94,1.415,95,1.162,96,1.324,97,1.415,98,0.017,99,0.017,191,1.12,206,1.278,210,0.784,220,1.278,381,3.082,382,5.848,383,2.279,384,5.479,385,4.865,386,2.433,387,3.64,388,3.64,389,3.628,390,1.657,391,4.865,392,3.64,393,2.714,394,3.64,395,3.64,396,2.44,397,4.865,398,2.44,399,2.714,400,2.714,401,3.64,402,3.64,403,3.082,404,3.64,405,3.082,406,2.714,407,3.64,408,3.64,409,3.64,410,3.261,411,3.64,412,2.44,413,3.082,414,2.714,415,3.64]],["title/components/GalleryComponent.html",[0,0.549,71,0.952]],["body/components/GalleryComponent.html",[0,1.011,1,1.178,2,1.745,3,0.267,4,0.232,5,1.53,6,1.53,7,1.53,8,1.53,9,0.232,11,0.5,13,1.257,14,2.361,15,1.432,17,1.991,19,1.991,24,0.907,32,0.026,33,0.853,43,0.458,44,0.5,48,0.267,49,0.544,62,1.53,63,1.991,64,1.991,65,1.034,66,1.804,67,1.53,68,1.53,69,1.178,70,1.53,71,1.691,72,1.53,73,1.178,74,1.53,75,1.104,76,1.53,77,1.104,78,1.53,79,1.178,80,1.53,81,1.178,82,1.53,83,1.53,84,1.104,85,1.53,86,1.034,87,1.341,88,1.53,89,1.104,90,0.791,91,1.53,92,1.257,93,1.257,94,1.53,95,1.257,96,1.432,97,1.53,98,0.018,99,0.018,220,1.346,350,3.434,383,2.369,386,1.638,390,1.341,416,3.937,417,3.333,418,5.107,419,5.695,420,5.123,421,3.937,422,3.937,423,3.937,424,3.937]],["title/components/HeaderComponent.html",[0,0.549,73,1.016]],["body/components/HeaderComponent.html",[0,0.98,1,1.069,2,1.636,3,0.242,4,0.211,5,1.389,6,1.389,7,1.389,8,1.389,9,0.211,11,0.454,13,1.14,14,2.333,15,1.299,17,1.867,19,1.867,21,0.494,23,4.651,24,1.395,27,1.168,32,0.026,33,0.813,34,0.494,37,0.939,38,1.486,39,1.486,40,3.025,41,3.583,43,0.416,44,0.454,48,0.242,49,0.494,62,1.389,63,1.867,64,1.867,65,0.939,66,1.736,67,1.389,68,1.389,69,1.069,70,1.389,71,1.002,72,1.389,73,1.736,74,1.389,75,1.002,76,1.389,77,1.002,78,1.389,79,1.069,80,1.389,81,1.069,82,1.389,83,1.389,84,1.002,85,1.389,86,0.939,87,1.217,88,1.389,89,1.002,90,0.718,91,1.389,92,1.14,93,1.14,94,1.389,95,1.14,96,1.299,97,1.389,98,0.017,99,0.017,191,1.106,206,1.262,210,0.769,220,1.262,244,2.484,383,2.258,386,2.415,389,3.583,390,1.636,418,4.068,425,3.025,426,4.915,427,5.428,428,4.804,429,4.068,430,4.804,431,4.329,432,3.573,433,4.068,434,4.804,435,4.804,436,4.804,437,3.573,438,3.573,439,3.573]],["title/components/HomeComponent.html",[0,0.549,75,0.952]],["body/components/HomeComponent.html",[0,0.929,1,1.042,2,1.608,3,0.236,4,0.206,5,1.354,6,1.354,7,1.354,8,1.354,9,0.206,11,0.443,13,1.111,14,2.326,15,1.267,17,1.836,19,1.836,21,0.481,24,1.234,25,2.949,26,2.77,27,1.016,29,1.836,30,1.836,31,0.857,32,0.026,33,0.86,34,0.481,35,0.75,36,2.678,43,0.549,44,0.443,45,2.597,47,1.553,48,0.236,49,0.481,50,1.042,51,2.125,59,2.125,60,2.597,62,1.354,63,1.836,64,1.836,65,0.915,66,1.718,67,1.354,68,1.354,69,1.042,70,1.354,71,0.976,72,1.354,73,1.042,74,1.354,75,1.736,76,1.354,77,0.976,78,1.354,79,1.042,80,1.354,81,1.042,82,1.354,83,1.354,84,0.976,85,1.354,86,0.915,87,1.186,88,1.354,89,0.976,90,0.7,91,1.354,92,1.111,93,1.111,94,1.354,95,1.111,96,1.267,97,1.354,98,0.017,99,0.017,191,1.087,206,1.241,210,0.75,220,1.241,383,2.229,386,2.39,389,3.521,390,1.608,403,2.949,406,2.597,412,2.334,413,2.949,440,2.949,441,4.722,442,5.357,443,4.722,444,3.482,445,3.482,446,1.95,447,3.482,448,3.482,449,3.482,450,3.482,451,2.597,452,3.482,453,4.722,454,3.482,455,3.482,456,3.482,457,3.482,458,3.482,459,3.482,460,3.482,461,3.482,462,3.482]],["title/injectables/HttpBookingService.html",[133,2.277,216,1.32]],["body/injectables/HttpBookingService.html",[3,0.17,4,0.148,9,0.148,11,0.318,21,0.345,24,1.138,26,2.305,27,1.193,29,1.449,30,1.449,31,1.301,32,0.026,33,0.792,34,0.731,35,1.138,36,2.205,43,0.668,44,0.318,47,1.115,48,0.17,49,0.616,50,1.766,98,0.013,99,0.013,131,2.754,133,3.313,135,2.659,141,1.292,173,1.198,191,0.858,193,1.884,206,1.706,210,1.322,211,2.587,215,1.115,216,1.449,217,0.972,218,1.675,220,0.657,223,1.855,227,1.923,239,2.658,245,2.634,246,2.754,252,2.37,264,2.087,268,3.775,269,3.775,270,4.476,271,3.775,272,3.325,273,3.156,275,3.156,278,3.156,280,3.156,282,1.864,299,4.118,305,1.675,318,1.927,328,3.053,446,1.4,463,1.525,464,4.284,465,1.675,466,3.728,467,2.116,468,3.686,469,2.5,470,4.412,471,2.5,472,4.118,473,3.156,474,3.156,475,2.5,476,3.728,477,4.284,478,3.156,479,2.5,480,3.728,481,2.496,482,2.5,483,3.728,484,3.156,485,3.775,486,2.5,487,3.156,488,3.728,489,1.675,490,2.5,491,2.116,492,2.5,493,1.675,494,5.287,495,2.5,496,2.5,497,2.5,498,2.5,499,2.5,500,2.5]],["title/injectables/HttpCacheService.html",[113,1.902,216,1.32]],["body/injectables/HttpCacheService.html",[3,0.253,4,0.22,9,0.22,16,2.272,21,0.515,22,1.385,24,0.858,27,1.27,31,1.215,32,0.026,33,0.74,34,0.766,35,1.063,37,1.551,38,1.549,39,2.306,43,0.575,44,0.473,48,0.253,49,0.515,50,1.658,98,0.018,99,0.018,113,2.766,141,1.926,191,1.137,210,1.27,216,1.92,219,2.496,223,2.306,227,1.355,304,5.344,310,4.182,317,4.383,318,3.263,350,2.496,390,1.682,463,2.272,470,3.311,487,4.182,501,5.2,502,3.153,503,5.902,504,5.542,505,3.724,506,3.724,507,4.939,508,3.724,509,4.939,510,3.051,511,3.724,512,3.724,513,4.939,514,4.939,515,3.724,516,4.182,517,3.724,518,3.724,519,3.724,520,4.939,521,3.724,522,3.724,523,3.724,524,3.724]],["title/injectables/HttpUserService.html",[129,2.072,216,1.32]],["body/injectables/HttpUserService.html",[3,0.273,4,0.101,9,0.101,11,0.217,21,0.236,22,0.776,24,0.804,26,1.805,27,1.277,29,1.075,30,1.075,31,1.226,32,0.026,33,0.746,34,0.717,35,1.155,36,1.557,37,1.309,38,0.709,39,0.709,41,2.063,43,0.55,44,0.217,47,0.76,48,0.116,49,0.482,50,1.321,51,1.04,55,1.443,66,0.828,90,1.388,98,0.01,99,0.01,129,1.688,131,2.643,141,0.881,173,0.817,191,0.925,193,0.883,206,1.735,210,1.38,211,2.492,216,1.075,217,0.663,220,0.917,223,0.709,227,2.126,230,2.572,233,1.04,252,2.844,299,3.854,305,1.854,317,1.854,318,0.881,327,2.342,328,2.683,330,1.234,336,1.443,390,1.189,426,2.342,446,0.955,463,1.04,465,1.143,467,1.443,468,2.603,470,4.074,472,3.695,473,3.401,477,1.271,478,3.401,489,1.143,516,3.401,525,4.481,526,3.401,527,4.416,528,2.766,529,4.416,530,3.401,531,3.739,532,2.956,533,2.96,534,2.342,535,2.996,536,2.34,537,3.491,538,2.766,539,4.017,540,1.705,541,3.491,542,1.705,543,2.342,544,4.017,545,4.667,546,2.766,547,1.705,548,3.293,549,1.705,550,3.87,551,2.693,552,4.017,553,2.693,554,2.766,555,1.705,556,2.073,557,3.695,558,2.766,559,2.342,560,1.705,561,1.968,562,1.705,563,2.766,564,3.739,565,2.342,566,1.705,567,2.342,568,2.342,569,2.268,570,1.705,571,2.766,572,3.401,573,2.342,574,1.705,575,2.342,576,1.705,577,2.342,578,2.766,579,2.342,580,2.766,581,1.705,582,1.705,583,2.063,584,2.342,585,1.705,586,2.996,587,1.854,588,1.705,589,1.705,590,2.766,591,1.04,592,1.705,593,1.705,594,1.705,595,1.705,596,2.766,597,1.705,598,1.705,599,1.705,600,1.705,601,1.705,602,1.705,603,4.982,604,1.705,605,1.705,606,1.705,607,1.705,608,1.705,609,1.705,610,1.705,611,1.705,612,1.705,613,1.705,614,1.705,615,1.705,616,1.705,617,1.705,618,1.443,619,1.705,620,1.705,621,1.705,622,1.705,623,1.705,624,1.705,625,1.705,626,1.705,627,1.705,628,1.705,629,1.705,630,1.705,631,1.443,632,1.705,633,1.705,634,1.705,635,1.705,636,1.705,637,1.705,638,1.443,639,1.705,640,1.705]],["title/injectables/InterceptorService.html",[114,2.072,216,1.32]],["body/injectables/InterceptorService.html",[3,0.257,4,0.223,9,0.223,11,0.634,16,2.308,21,0.523,24,1.286,27,1.074,29,1.94,30,1.94,31,1.228,32,0.026,33,0.747,34,0.69,35,1.074,43,0.691,44,0.481,48,0.257,49,0.523,50,1.671,98,0.018,99,0.018,114,3.623,131,2.393,141,1.956,188,4.225,191,1.149,192,1.956,193,2.063,206,1.311,210,1.074,211,2.171,215,1.687,216,1.94,217,1.47,218,2.536,219,2.536,227,1.376,284,3.721,288,5.028,293,5.028,294,4.428,295,5.028,299,4.398,302,3.203,328,2.58,463,2.308,470,4.25,472,3.345,579,4.225,641,3.203,642,3.783,643,4.99,644,3.783,645,4.99,646,4.99,647,4.99,648,4.99,649,3.203,650,3.783,651,3.783,652,3.783,653,3.783,654,3.783,655,3.783]],["title/interfaces/LoggedInDetails.html",[190,0.952,556,1.413]],["body/interfaces/LoggedInDetails.html",[3,0.267,4,0.232,9,0.232,11,0.5,21,0.544,22,1.436,32,0.026,33,0.59,34,0.95,37,1.773,48,0.386,90,1.382,98,0.018,99,0.018,190,1.797,234,1.888,236,2.402,237,2.035,244,3.515,245,1.756,352,2.035,355,2.402,551,4.375,556,2.509,561,1.638,569,2.456,656,2.639,657,3.82,658,2.936,659,2.936,660,2.936,661,2.936,662,2.936,663,2.402,664,2.936,665,2.936,666,2.936,667,2.639,668,2.936,669,2.936,670,2.936,671,2.936]],["title/components/LoginComponent.html",[0,0.549,77,0.952]],["body/components/LoginComponent.html",[0,0.899,1,0.753,2,1.276,3,0.304,4,0.149,5,0.978,6,0.978,7,0.978,8,0.978,9,0.149,11,0.32,13,0.803,14,2.214,15,0.915,17,1.456,19,1.456,21,0.348,22,1.05,24,1.031,26,2.314,27,1.196,31,0.619,32,0.026,33,0.743,34,0.883,35,1.239,36,1.996,37,1.46,38,1.047,39,1.047,43,0.647,44,0.32,47,1.122,48,0.171,49,0.348,57,1.535,59,1.535,62,0.978,63,1.456,64,1.456,65,0.661,66,1.483,67,0.978,68,0.978,69,0.753,70,0.978,71,0.705,72,0.978,73,0.753,74,0.978,75,0.705,76,0.978,77,1.39,78,0.978,79,0.753,80,0.978,81,0.753,82,0.978,83,0.978,84,0.705,85,0.978,86,0.661,87,0.857,88,0.978,89,0.705,90,1.236,91,0.978,92,0.803,93,0.803,94,0.978,95,0.803,96,0.915,97,0.978,98,0.013,99,0.013,103,1.047,131,1.796,160,0.978,173,1.206,191,0.863,192,1.301,193,1.774,194,3.224,206,1.303,210,0.542,211,0.978,215,1.671,217,0.978,220,0.984,223,1.862,230,3.139,252,1.206,294,1.876,350,1.686,352,2.564,383,1.862,386,1.047,390,1.276,393,2.794,396,1.686,398,1.686,399,1.876,400,1.876,410,1.686,412,1.686,414,1.876,446,1.409,493,1.686,526,4.198,545,2.13,550,4.145,556,1.047,561,2.312,569,2.665,577,3.172,583,2.794,586,2.794,591,1.535,618,2.13,672,2.13,673,4.476,674,3.746,675,4.198,676,4.958,677,2.516,678,2.516,679,3.746,680,3.746,681,2.516,682,3.726,683,2.516,684,2.516,685,2.516,686,1.876,687,2.13,688,2.516,689,2.516,690,2.516,691,2.516,692,2.13,693,2.516,694,2.13,695,2.516,696,2.516,697,2.516,698,2.516,699,2.516,700,4.476,701,2.516,702,2.516,703,2.516,704,2.516,705,2.516,706,3.789,707,2.516,708,2.516,709,2.516,710,2.516,711,2.516,712,2.516,713,2.13,714,4.958,715,4.198,716,3.172,717,2.516,718,3.746,719,2.516,720,3.172,721,1.876,722,2.13,723,2.13,724,2.13,725,2.13,726,2.13,727,2.13,728,2.516,729,2.516]],["title/interfaces/LoginInfo.html",[190,0.952,569,1.629]],["body/interfaces/LoginInfo.html",[3,0.267,4,0.232,9,0.232,11,0.5,21,0.544,22,1.436,32,0.026,33,0.59,34,0.95,37,1.806,48,0.386,90,1.257,98,0.018,99,0.018,190,1.797,234,1.888,236,2.402,237,2.649,244,3.515,245,1.756,352,3.314,355,2.402,551,3.434,556,2.131,561,2.667,569,2.892,656,2.639,657,2.936,658,2.936,659,2.936,660,2.936,661,2.936,662,2.936,663,2.402,664,2.936,665,2.936,666,2.936,667,2.639,668,2.936,669,2.936,670,2.936,671,2.936]],["title/components/MembershipComponent.html",[0,0.549,79,1.016]],["body/components/MembershipComponent.html",[0,0.988,1,0.843,2,1.386,3,0.191,4,0.166,5,1.095,6,1.095,7,1.095,8,1.095,9,0.166,11,0.358,13,0.899,14,2.256,15,1.024,17,1.582,19,1.582,21,0.389,22,1.141,24,1.1,27,1.245,29,1.582,30,1.582,31,1.001,32,0.026,33,0.831,34,0.66,35,1.127,43,0.556,44,0.358,48,0.191,49,0.389,50,1.429,57,1.718,59,1.718,61,2.101,62,1.095,63,1.582,64,1.582,65,0.74,66,1.661,67,1.095,68,1.095,69,0.843,70,1.095,71,0.79,72,1.095,73,0.843,74,1.095,75,0.79,76,1.095,77,0.79,78,1.095,79,1.566,80,1.095,81,0.843,82,1.095,83,1.095,84,0.79,85,1.095,86,0.74,87,0.959,88,1.095,89,0.79,90,1.199,91,1.095,92,0.899,93,0.899,94,1.095,95,0.899,96,1.024,97,1.095,98,0.015,99,0.015,160,1.095,191,0.937,192,1.456,193,1.949,194,3.24,206,1.66,210,1.127,215,1.256,220,1.069,223,1.172,224,2.101,230,2.509,252,2.291,383,1.988,386,2.177,390,1.971,405,2.385,410,1.888,451,2.101,481,2.279,510,2.104,533,3.203,535,3.903,536,2.728,543,3.446,557,2.728,586,3.035,649,2.385,730,2.385,731,5.786,732,4.778,733,4.07,734,4.778,735,5.234,736,4.432,737,3.446,738,4.07,739,2.817,740,4.07,741,3.035,742,3.035,743,2.817,744,3.446,745,2.817,746,4.07,747,2.385,748,2.817,749,3.446,750,2.385,751,2.817,752,2.817,753,4.07,754,4.07,755,2.817,756,2.817,757,2.385,758,2.385,759,2.817,760,2.817,761,2.817,762,2.817,763,2.817,764,2.817,765,2.817,766,2.817,767,4.07,768,2.817,769,2.817]],["title/components/PopUpComponent.html",[0,0.549,81,1.016]],["body/components/PopUpComponent.html",[0,0.855,1,0.748,2,1.27,3,0.17,4,0.148,5,0.972,6,0.972,7,0.972,8,0.972,9,0.148,11,0.318,13,0.798,14,2.212,15,0.909,17,1.449,19,1.449,21,0.345,22,1.045,23,4.403,24,1.027,27,1.359,31,0.615,32,0.026,33,0.74,34,0.816,35,0.538,37,1.171,38,2.2,39,2.511,43,0.291,44,0.318,48,0.17,49,0.345,50,0.748,62,0.972,63,1.449,64,1.449,65,0.657,66,1.479,67,0.972,68,0.972,69,0.748,70,0.972,71,0.701,72,0.972,73,0.748,74,0.972,75,0.701,76,0.972,77,0.701,78,0.972,79,0.748,80,0.972,81,1.479,82,2.481,83,0.972,84,0.701,85,0.972,86,0.657,87,0.851,88,0.972,89,0.701,90,0.502,91,0.972,92,0.798,93,0.798,94,0.972,95,0.798,96,0.909,97,0.972,98,0.013,99,0.013,154,1.927,191,0.858,206,1.614,210,1.064,213,3.686,220,0.979,233,3.226,244,2.555,317,2.499,383,1.855,386,2.056,390,1.801,398,3.313,429,3.156,431,4.581,472,3.313,510,1.927,587,1.675,770,5.404,771,4.759,772,2.116,773,3.156,774,5.202,775,4.458,776,3.728,777,4.185,778,4.942,779,5.904,780,5.545,781,5.545,782,4.942,783,4.185,784,3.728,785,4.942,786,5.287,787,2.5,788,3.156,789,2.5,790,3.728,791,2.5,792,2.5,793,2.5,794,2.5,795,5.745,796,5.287,797,2.5,798,2.5,799,2.5,800,2.5,801,2.5,802,2.5,803,3.728,804,3.728,805,3.156,806,2.5,807,2.5,808,2.5,809,2.5,810,2.5,811,2.5,812,2.5,813,2.5,814,2.5,815,2.5,816,2.5,817,2.5,818,2.5,819,2.5]],["title/components/RegisterComponent.html",[0,0.549,84,0.952]],["body/components/RegisterComponent.html",[0,0.811,1,0.581,2,1.046,3,0.132,4,0.115,5,0.755,6,0.755,7,0.755,8,0.755,9,0.115,11,0.247,13,0.62,14,2.107,15,0.706,17,1.193,19,1.193,21,0.268,22,0.861,24,0.707,26,1.969,27,1.13,31,0.478,32,0.026,33,0.706,34,0.774,35,0.82,36,1.698,37,1.137,38,1.277,39,1.277,43,0.681,44,0.39,47,0.866,48,0.132,49,0.268,51,1.184,57,1.184,59,1.873,62,0.755,63,1.193,64,1.193,65,0.51,66,1.295,67,0.755,68,0.755,69,0.581,70,0.755,71,0.544,72,0.755,73,0.581,74,0.755,75,0.544,76,0.755,77,0.544,78,0.755,79,0.581,80,0.755,81,0.581,82,0.755,83,0.755,84,1.213,85,0.755,86,0.51,87,0.661,88,0.755,89,0.544,90,1.255,91,0.755,92,0.62,93,0.62,94,0.755,95,0.62,96,0.706,97,0.755,98,0.011,99,0.011,103,0.808,131,1.472,138,0.931,160,0.755,173,1.826,191,0.707,193,1.6,194,2.639,206,1.137,210,0.661,211,0.755,215,1.369,217,0.755,220,0.807,222,1.644,223,1.584,224,1.448,227,0.706,230,1.472,232,1.644,239,0.931,245,0.866,305,1.301,318,1.587,330,0.866,338,1.301,345,1.448,352,1.004,383,1.584,386,1.8,390,1.297,393,3.227,396,2.058,398,2.901,399,1.448,400,1.448,410,2.058,412,1.301,414,2.289,446,1.087,451,1.448,493,1.301,510,2.237,536,3.648,550,3.914,561,1.584,573,5.289,591,1.184,663,1.184,675,3.664,682,2.552,686,1.448,687,1.644,694,1.644,706,4.244,713,3.664,715,5.681,716,4.608,720,5.289,721,4.059,722,1.644,723,2.599,724,1.644,725,1.644,726,1.644,727,1.644,741,2.289,757,3.664,820,1.644,821,3.808,822,3.07,823,5.012,824,1.941,825,3.664,826,3.07,827,3.224,828,1.941,829,3.07,830,3.07,831,3.07,832,3.07,833,2.599,834,3.07,835,3.07,836,3.07,837,5.012,838,1.941,839,3.664,840,1.941,841,2.599,842,1.941,843,1.941,844,3.664,845,1.941,846,1.941,847,1.301,848,1.301,849,1.941,850,1.941,851,1.941,852,1.941,853,1.941,854,5.012,855,1.941,856,1.941,857,1.941,858,1.941,859,1.941,860,1.644,861,1.941,862,1.941,863,1.941,864,1.941,865,1.941,866,1.941,867,1.941,868,1.941,869,1.941,870,1.941,871,1.941,872,1.941,873,1.941,874,1.941,875,1.941,876,1.941,877,1.941,878,2.289,879,1.941,880,1.941,881,1.941,882,1.941,883,1.941,884,1.941,885,1.941,886,1.941,887,1.941,888,1.941,889,1.941,890,1.941,891,5.442,892,1.941,893,1.941,894,1.941,895,1.941,896,1.941,897,1.941,898,1.941,899,1.941,900,1.941,901,1.941,902,1.941,903,1.941,904,1.941,905,1.941,906,1.941,907,1.941,908,1.941,909,1.941,910,1.941,911,1.941,912,1.941,913,1.941,914,1.941,915,1.941,916,1.941,917,1.941,918,1.941,919,1.941,920,1.941,921,1.941,922,1.941,923,1.941,924,1.941,925,1.941,926,1.941,927,1.941]],["title/components/RoomBookingComponent.html",[0,0.549,86,0.892]],["body/components/RoomBookingComponent.html",[0,0.892,1,0.664,2,1.16,3,0.151,4,0.131,5,0.862,6,0.862,7,0.862,8,0.862,9,0.131,11,0.433,13,0.708,14,2.164,15,0.807,17,1.324,19,1.324,21,0.307,22,0.955,24,1.071,26,2.143,27,1.225,29,1.324,30,1.324,31,1.144,32,0.026,33,0.751,34,0.762,35,1.001,36,2.362,38,0.923,39,0.923,43,0.642,44,0.282,47,0.989,48,0.151,49,0.307,50,1.584,62,0.862,63,1.324,64,1.324,65,0.583,66,1.501,67,0.862,68,0.862,69,0.664,70,0.862,71,0.622,72,0.862,73,0.664,74,0.862,75,0.622,76,0.862,77,0.622,78,0.862,79,0.664,80,0.862,81,0.664,82,0.862,83,0.862,84,0.622,85,0.862,86,1.222,87,2.144,88,0.862,89,0.622,90,1.265,91,1.612,92,0.708,93,0.708,94,0.862,95,0.708,96,0.807,97,0.862,98,0.012,99,0.012,135,2.421,138,1.063,160,0.862,163,3.561,191,0.784,192,1.147,193,1.863,194,3.336,206,1.089,210,1.001,215,0.989,220,0.895,223,2.087,240,2.54,243,2.283,246,2.406,252,2.856,264,3.336,282,1.654,383,1.725,386,1.935,390,1.878,431,1.654,446,1.242,481,1.242,510,1.761,533,1.487,553,1.487,557,2.779,572,2.884,682,3.55,692,1.878,721,2.54,736,3.938,737,2.884,742,3.091,744,2.884,747,2.884,750,1.878,758,1.878,825,3.938,827,2.884,839,1.878,844,1.878,878,3.091,928,4.941,929,1.878,930,4.146,931,4.146,932,3.406,933,4.146,934,5.018,935,4.651,936,2.218,937,3.406,938,5.958,939,5.958,940,2.218,941,3.406,942,3.406,943,2.218,944,4.651,945,2.218,946,3.406,947,2.218,948,2.54,949,2.218,950,2.218,951,2.218,952,2.218,953,2.218,954,2.218,955,3.406,956,2.218,957,2.218,958,2.218,959,2.218,960,2.218,961,2.218,962,2.218,963,2.218,964,2.218,965,2.218,966,2.218,967,2.218,968,2.218,969,2.218,970,2.218,971,2.218,972,2.218,973,3.406]],["title/pipes/SearchPipe.html",[330,1.515,974,2.072]],["body/pipes/SearchPipe.html",[3,0.294,4,0.255,9,0.255,11,0.55,13,1.38,27,0.931,31,1.064,32,0.026,33,0.891,34,0.598,35,0.931,37,1.429,43,0.633,44,0.55,48,0.294,49,0.598,50,1.781,98,0.02,99,0.02,135,2.592,191,0.996,206,1.429,210,1.171,220,1.136,227,1.573,330,2.786,481,3.046,553,3.647,974,3.319,975,4.325,976,3.662,977,5.646,978,5.952,979,5.44,980,6.246,981,4.325,982,4.606,983,5.44,984,4.325,985,4.325,986,4.325,987,4.325]],["title/modules/SharedModule.html",[100,1.756,375,1.902]],["body/modules/SharedModule.html",[3,0.289,4,0.251,9,0.251,32,0.026,43,0.746,44,0.541,48,0.289,49,0.589,81,2.069,98,0.019,99,0.019,102,1.9,103,2.241,109,3.664,115,3.017,116,2.384,117,2.202,119,3.287,121,3.017,123,3.017,127,3.606,156,3.606,183,3.287,259,3.611,260,2.598,375,3.872,771,3.176,974,4.219,988,3.606,989,4.258,990,3.606,991,3.606,992,4.258,993,4.258,994,4.258,995,4.258]],["title/directives/UniqueEmailDirective.html",[65,0.892,95,1.084]],["body/directives/UniqueEmailDirective.html",[3,0.218,4,0.19,9,0.19,11,0.408,13,1.025,14,1.521,21,0.444,24,1.182,27,1.105,29,1.736,30,1.736,31,1.263,32,0.026,33,0.769,34,0.806,35,1.256,43,0.646,44,0.408,48,0.303,49,0.444,50,1.536,65,1.533,66,0.96,92,1.025,95,1.927,96,1.624,98,0.016,99,0.016,120,3.33,138,1.539,152,3.33,154,2.309,173,1.539,191,1.028,192,1.66,193,2.095,206,1.173,210,1.195,211,2.348,212,4.35,215,1.432,217,1.248,218,2.152,220,1.173,223,1.336,227,2.196,239,1.539,330,1.432,339,2.718,340,3.781,341,3.781,343,4.35,344,4.939,345,2.394,354,3.33,357,3.829,367,4.35,390,1.89,489,2.993,561,2.136,567,4.699,847,2.993,848,3.72,996,2.394,997,4.465,998,5.134,999,5.134,1000,4.465,1001,3.21,1002,3.21,1003,3.21,1004,3.21,1005,4.465,1006,3.21,1007,4.347,1008,3.21,1009,3.21,1010,3.21,1011,3.21,1012,3.781,1013,2.718,1014,2.718,1015,2.718,1016,2.718,1017,2.718]],["title/interfaces/User.html",[90,0.683,190,0.952]],["body/interfaces/User.html",[3,0.248,4,0.216,9,0.216,11,0.465,21,0.506,22,1.369,32,0.026,33,0.914,34,0.962,35,1.262,37,1.829,48,0.373,90,1.289,98,0.018,99,0.018,190,1.761,234,1.755,236,2.979,237,2.525,244,3.537,245,2.178,352,1.893,355,2.233,551,3.273,556,2.032,561,1.523,569,2.634,656,2.454,657,2.73,658,2.73,659,3.641,660,2.73,661,4.554,662,2.73,663,2.979,664,2.73,665,4.554,666,2.73,667,4.093,668,3.641,669,2.73,670,2.73,671,2.73,1018,5.495]],["title/components/UserProfileComponent.html",[0,0.549,89,0.952]],["body/components/UserProfileComponent.html",[0,0.817,1,0.476,2,0.89,3,0.108,4,0.094,5,0.618,6,0.618,7,0.618,8,0.618,9,0.094,11,0.202,13,0.507,14,1.985,15,0.578,17,0.618,19,0.618,21,0.22,22,0.733,24,0.766,27,1.314,29,0.618,30,0.618,31,1.047,32,0.026,33,0.807,34,0.876,35,1.188,37,1.271,38,1.904,39,2.488,43,0.533,44,0.202,48,0.108,49,0.22,50,1.152,62,0.618,63,1.016,64,1.016,65,0.418,66,1.152,67,0.618,68,0.618,69,0.476,70,0.618,71,0.446,72,0.618,73,0.476,74,0.618,75,0.446,76,0.618,77,0.446,78,0.618,79,0.476,80,0.618,81,0.476,82,1.498,83,0.618,84,0.446,85,0.618,86,0.418,87,1.133,88,0.618,89,1.08,90,1.273,91,1.779,92,0.507,93,0.507,94,0.618,95,0.507,96,0.578,97,0.618,98,0.009,99,0.009,135,2.534,154,2.201,160,0.618,171,4.129,191,0.602,192,0.822,193,1.461,194,2.708,206,1.589,209,4.934,210,1.041,213,3.767,215,0.709,220,0.686,223,1.603,227,0.578,233,2.35,239,2.977,241,1.948,243,1.751,245,2.462,246,1.253,252,2.319,264,2.708,272,2.873,383,1.384,386,1.603,390,1.72,481,1.463,484,3.262,485,2.212,493,1.066,510,3.013,556,1.771,557,1.751,561,1.087,583,1.948,584,3.262,591,0.97,663,1.594,667,2.582,682,1.751,686,1.185,749,2.817,773,3.875,774,2.817,777,2.212,783,3.604,788,4.43,805,4.095,841,2.212,860,2.212,878,2.481,948,1.185,977,4.095,1019,5.216,1020,1.346,1021,3.326,1022,2.613,1023,3.853,1024,2.613,1025,2.613,1026,3.853,1027,2.613,1028,4.836,1029,2.613,1030,1.59,1031,2.613,1032,1.59,1033,3.853,1034,3.853,1035,2.613,1036,1.59,1037,5.232,1038,2.613,1039,1.59,1040,1.59,1041,2.613,1042,2.613,1043,1.59,1044,1.59,1045,1.59,1046,1.59,1047,1.59,1048,1.59,1049,1.59,1050,2.613,1051,1.59,1052,1.59,1053,1.59,1054,1.59,1055,1.59,1056,1.59,1057,1.59,1058,1.59,1059,1.59,1060,1.59,1061,1.59,1062,1.59,1063,1.59,1064,1.59,1065,1.59,1066,3.326,1067,3.326,1068,3.326,1069,1.59,1070,2.613,1071,1.59,1072,1.59,1073,1.59,1074,1.59,1075,1.59,1076,1.59,1077,1.59,1078,1.59,1079,1.59,1080,1.59,1081,2.613,1082,1.59,1083,2.613,1084,1.59,1085,1.59,1086,1.59,1087,1.59,1088,1.59,1089,1.59,1090,1.59,1091,1.59,1092,2.613,1093,2.613,1094,2.613,1095,2.613,1096,2.613,1097,2.613,1098,3.853,1099,2.613,1100,2.613,1101,2.613,1102,2.613,1103,2.613,1104,2.613,1105,1.59,1106,1.59,1107,1.59]],["title/interfaces/UserService.html",[190,0.952,193,1.084]],["body/interfaces/UserService.html",[3,0.266,4,0.231,9,0.231,11,0.498,21,0.542,27,1.423,31,1.482,32,0.025,33,0.902,34,0.832,35,1.296,37,1.582,43,0.595,48,0.266,90,1.287,98,0.018,99,0.018,190,1.594,191,1.387,193,1.631,210,1.423,211,2.489,217,1.524,230,2.45,234,1.88,530,4.812,531,4.812,532,4.326,533,3.81,534,4.326,535,4.238,536,3.425,553,2.628,556,2.126,559,3.32,561,2.126,564,4.326,565,3.32,568,3.32,569,2.887,575,3.32,591,2.392,638,3.32,1108,3.32,1109,5.109,1110,3.921,1111,3.921,1112,3.921,1113,3.921,1114,3.921,1115,3.921,1116,3.921,1117,3.921,1118,3.921,1119,3.921,1120,3.921,1121,3.921,1122,3.921,1123,3.921,1124,3.921]],["title/modules/UsersModule.html",[100,1.756,257,1.902]],["body/modules/UsersModule.html",[2,1.62,3,0.239,4,0.208,9,0.208,11,0.447,32,0.026,43,0.783,44,0.447,48,0.366,49,0.487,77,1.885,79,2.012,84,1.885,86,0.925,89,1.885,90,0.707,98,0.017,99,0.017,100,2.459,102,2.403,103,1.979,115,2.664,116,1.971,117,1.82,119,3.52,121,2.664,123,2.664,129,2.148,131,1.688,136,3.547,137,3.547,138,1.688,141,1.82,158,3.188,160,1.369,163,2.148,164,2.625,171,2.36,172,2.981,183,2.902,257,3.872,259,3.188,260,2.148,261,2.981,306,2.981,375,3.478,380,2.981,468,2.625,548,3.547,1125,2.981,1126,2.981,1127,2.981,1128,3.521,1129,3.521,1130,4.757,1131,3.521,1132,3.521,1133,4.757,1134,3.521,1135,3.521]],["title/coverage.html",[1136,3.931]],["body/coverage.html",[0,1.051,1,0.912,9,0.18,10,2.581,32,0.026,34,0.421,65,1.131,69,0.912,71,0.855,73,0.912,75,0.855,77,0.855,79,0.912,81,0.912,84,0.855,86,0.801,89,0.855,90,1.003,93,0.973,95,0.973,98,0.015,99,0.015,112,1.86,113,1.707,114,1.86,129,1.86,133,2.043,135,1.941,147,3.211,163,1.86,166,2.043,171,2.043,185,2.043,187,2.581,190,1.712,193,0.973,216,2.109,230,1.461,235,3.211,246,1.461,264,1.707,265,2.581,284,2.273,286,2.581,287,2.581,318,1.576,328,3.071,330,1.36,337,3.211,338,2.043,381,2.581,406,5.244,417,2.581,425,2.581,440,2.581,464,3.211,465,3.637,501,2.581,502,2.581,510,3.444,525,3.211,556,1.791,569,1.461,587,2.043,641,2.581,656,3.347,672,2.581,730,2.581,770,2.581,771,2.273,772,2.581,820,2.581,847,2.043,848,2.886,928,2.581,929,2.581,974,1.86,976,2.581,996,3.211,1019,2.581,1020,2.581,1108,2.581,1136,2.581,1137,3.048,1138,3.048,1139,3.048,1140,5.029,1141,5.029,1142,2.581,1143,6.771,1144,2.581,1145,2.581,1146,2.581,1147,6.341,1148,3.048,1149,4.993,1150,3.048,1151,3.048,1152,3.048,1153,3.048,1154,3.048,1155,3.048,1156,3.048,1157,4.306,1158,3.048,1159,3.048,1160,3.048,1161,3.048,1162,3.048,1163,3.048,1164,3.048,1165,3.048,1166,2.581,1167,2.273,1168,3.048,1169,2.581,1170,2.581,1171,3.646,1172,2.581,1173,2.581,1174,3.048,1175,3.048]],["title/dependencies.html",[103,1.7,1176,2.113]],["body/dependencies.html",[32,0.026,36,2.073,44,0.591,47,2.073,98,0.02,99,0.02,103,1.934,122,3.935,125,4.817,126,3.813,138,2.228,160,1.807,217,1.807,260,2.836,396,3.116,1177,4.648,1178,6.838,1179,4.648,1180,4.648,1181,4.648,1182,4.648,1183,5.689,1184,4.648,1185,3.935,1186,4.648,1187,4.648,1188,4.648,1189,4.648,1190,4.648,1191,4.648,1192,4.648,1193,4.648,1194,4.648,1195,4.648,1196,4.648,1197,4.648,1198,4.648,1199,4.648,1200,4.648,1201,4.648,1202,4.648]],["title/index.html",[21,0.392,53,2.399,1203,2.833]],["body/index.html",[0,0.959,4,0.253,12,3.63,32,0.019,33,0.642,98,0.019,99,0.019,117,2.216,220,1.126,229,3.63,231,3.63,297,3.63,328,2.797,433,5.019,474,3.63,587,2.873,631,3.63,741,3.197,742,3.197,1176,3.197,1204,4.287,1205,5.41,1206,4.287,1207,5.928,1208,3.63,1209,4.287,1210,4.287,1211,6.419,1212,6.656,1213,4.287,1214,4.287,1215,4.287,1216,4.287,1217,4.287,1218,4.287,1219,4.287,1220,4.287,1221,4.287,1222,5.928,1223,5.928,1224,4.287,1225,6.226,1226,4.287,1227,4.287,1228,4.287,1229,4.287,1230,5.41,1231,4.581,1232,6.226,1233,4.287,1234,5.41,1235,5.41,1236,4.287,1237,6.555,1238,4.287,1239,4.287,1240,4.287,1241,5.41,1242,3.63,1243,4.287,1244,4.287,1245,5.928,1246,4.287,1247,3.197,1248,4.287]],["title/modules.html",[102,2.071]],["body/modules.html",[32,0.022,98,0.022,99,0.022,101,3.42,102,2.276,109,2.857,110,3.113,111,3.113,126,4.519,257,2.857,375,2.857,1185,5.708,1249,6.742,1250,6.833,1251,5.103,1252,5.103]],["title/overview.html",[1247,3.462]],["body/overview.html",[1,1.857,2,1.103,32,0.025,69,1.857,71,1.741,73,1.857,75,1.741,77,1.741,79,1.857,81,1.857,84,1.741,86,1.631,89,1.741,92,1.033,98,0.016,99,0.016,101,4.574,102,1.444,103,1.868,104,2.741,105,2.741,106,2.741,107,2.741,108,2.741,109,3.119,110,4.011,111,4.145,112,3.146,113,2.888,114,3.146,115,2.515,116,1.813,117,1.674,159,1.975,185,2.17,234,1.552,253,2.741,254,2.741,255,2.741,256,2.741,257,3.835,330,1.444,371,2.741,372,2.741,373,2.741,374,2.741,375,3.714,463,1.975,948,3.349,974,3.788,988,2.741,990,2.741,991,2.741,1125,2.741,1126,2.741,1127,2.741,1167,2.414,1247,2.414,1253,3.237,1254,3.237,1255,3.237,1256,4.491]],["title/properties.html",[22,1.146,1176,2.113]],["body/properties.html",[22,1.536,32,0.024,98,0.023,99,0.023,1208,4.639,1257,5.479]],["title/routes.html",[159,2.832]],["body/routes.html",[32,0.023,98,0.023,99,0.023,159,3.371]],["title/miscellaneous/variables.html",[1258,2.399,1259,3.461]],["body/miscellaneous/variables.html",[21,0.387,32,0.026,34,0.893,37,1.065,38,2.712,39,2.712,65,0.736,66,1.657,90,1.113,98,0.015,99,0.015,135,1.575,147,4.306,154,2.095,193,1.52,206,0.736,211,1.089,212,2.088,227,2.218,230,2.283,233,2.906,237,1.448,239,1.343,252,2.283,318,2.699,328,3.079,330,1.249,337,2.088,338,3.192,343,2.088,351,2.371,352,1.448,353,2.371,354,2.088,355,1.709,356,2.371,357,3.022,358,2.371,359,2.371,360,2.371,361,2.371,362,2.371,363,2.371,364,3.431,365,2.371,366,2.371,367,3.022,368,2.371,369,2.371,370,2.371,464,2.088,465,3.499,477,3.022,481,1.568,489,1.877,491,2.371,525,2.088,548,2.088,556,1.981,561,1.165,833,4.889,847,3.192,848,1.877,982,2.371,996,3.022,1007,3.431,1012,3.431,1013,2.371,1014,2.371,1015,2.371,1016,2.371,1017,2.371,1140,2.371,1141,5.042,1142,4.033,1144,4.033,1145,3.431,1146,4.033,1166,3.431,1167,3.552,1169,2.371,1170,2.371,1171,2.371,1172,4.033,1173,4.033,1231,3.431,1242,3.431,1258,2.371,1259,2.371,1260,4.053,1261,2.8,1262,4.053,1263,5.774,1264,2.8,1265,2.8,1266,2.8,1267,2.8,1268,2.8,1269,2.8,1270,4.053,1271,2.8,1272,2.8,1273,4.053,1274,2.8,1275,2.8,1276,2.8,1277,4.053,1278,4.053,1279,4.053,1280,4.053,1281,5.22,1282,5.22,1283,5.22,1284,2.8,1285,2.8,1286,2.8,1287,5.22,1288,5.22,1289,4.053,1290,4.053,1291,4.053,1292,4.053,1293,4.053,1294,4.053,1295,4.053]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"modules/BookingModule.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"modules/SharedModule.html":{},"directives/UniqueEmailDirective.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":404,"title":{},"body":{"components/FooterComponent.html":{}}}],["0.0.0",{"_index":1257,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":1202,"title":{},"body":{"dependencies.html":{}}}],["0px",{"_index":411,"title":{},"body":{"components/FooterComponent.html":{}}}],["1",{"_index":948,"title":{},"body":{"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["1/1",{"_index":1143,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1168,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":406,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["100px",{"_index":462,"title":{},"body":{"components/HomeComponent.html":{}}}],["10px",{"_index":726,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["11",{"_index":1167,"title":{},"body":{"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["13.0.4",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["14.0.0",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["14.2.1",{"_index":1209,"title":{},"body":{"index.html":{}}}],["14.3.2",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["14t00:00:00",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15/15",{"_index":1165,"title":{},"body":{"coverage.html":{}}}],["15px",{"_index":725,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["16",{"_index":1150,"title":{},"body":{"coverage.html":{}}}],["16t00:00:00",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17/19",{"_index":1163,"title":{},"body":{"coverage.html":{}}}],["1px",{"_index":722,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["2",{"_index":1254,"title":{},"body":{"overview.html":{}}}],["2.11.6",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["3.6.1",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1158,"title":{},"body":{"coverage.html":{}}}],["3px",{"_index":909,"title":{},"body":{"components/RegisterComponent.html":{}}}],["4",{"_index":1255,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":1152,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1154,"title":{},"body":{"coverage.html":{}}}],["404",{"_index":629,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["40px",{"_index":768,"title":{},"body":{"components/MembershipComponent.html":{}}}],["5.0.11",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["5.2.2",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":908,"title":{},"body":{"components/RegisterComponent.html":{}}}],["500px",{"_index":456,"title":{},"body":{"components/HomeComponent.html":{}}}],["50px",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/MembershipComponent.html":{}}}],["53",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":410,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/RegisterComponent.html":{}}}],["6",{"_index":1253,"title":{},"body":{"overview.html":{}}}],["6.2.0",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1164,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1160,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":1161,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1256,"title":{},"body":{"overview.html":{}}}],["7.5.0",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["7/13",{"_index":1156,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":1149,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1157,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1153,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1159,"title":{},"body":{"coverage.html":{}}}],["89",{"_index":1162,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1148,"title":{},"body":{"coverage.html":{}}}],["_handleerror",{"_index":528,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["_handleerror(error",{"_index":540,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["_handleerror(error:httperrorresponse",{"_index":627,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["aadhaar",{"_index":860,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["aadhaarid",{"_index":665,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["aadhaarid:\"234786345612",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aadhaarid:['',aadhaaridvalidators",{"_index":872,"title":{},"body":{"components/RegisterComponent.html":{}}}],["aadhaarid:string",{"_index":666,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["aadhaaridvalidators",{"_index":861,"title":{},"body":{"components/RegisterComponent.html":{}}}],["abstractcontrol",{"_index":343,"title":{},"body":{"directives/CompareDirective.html":{},"directives/UniqueEmailDirective.html":{},"miscellaneous/variables.html":{}}}],["action",{"_index":1099,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["activate",{"_index":201,"title":{},"body":{"guards/AuthGuard.html":{}}}],["activated",{"_index":205,"title":{},"body":{"guards/AuthGuard.html":{}}}],["activatedroute",{"_index":1028,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["activatedroutesnapshot",{"_index":197,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_component",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["actualvalidator",{"_index":1012,"title":{},"body":{"directives/UniqueEmailDirective.html":{},"miscellaneous/variables.html":{}}}],["add",{"_index":474,"title":{},"body":{"injectables/HttpBookingService.html":{},"index.html":{}}}],["addbooking",{"_index":268,"title":{},"body":{"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{}}}],["addbooking(booking",{"_index":273,"title":{},"body":{"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{}}}],["addbooking(this.booking",{"_index":966,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["adds",{"_index":941,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["alert(\"you",{"_index":228,"title":{},"body":{"guards/AuthGuard.html":{}}}],["align",{"_index":399,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["allows",{"_index":202,"title":{},"body":{"guards/AuthGuard.html":{}}}],["along",{"_index":578,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["angular",{"_index":433,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":260,"title":{},"body":{"modules/BookingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"interceptors/CacheInterceptor.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"modules/UsersModule.html":{}}}],["angular/compiler",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/BookingModule.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"modules/SharedModule.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"directives/CompareDirective.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/BookingModule.html":{},"modules/CoreModule.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["announcemnet",{"_index":563,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["api",{"_index":477,"title":{},"body":{"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["app.component",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["appmodule",{"_index":101,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":109,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":980,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["arguments",{"_index":646,"title":{},"body":{"injectables/InterceptorService.html":{}}}],["array",{"_index":982,"title":{},"body":{"pipes/SearchPipe.html":{},"miscellaneous/variables.html":{}}}],["artifacts",{"_index":1226,"title":{},"body":{"index.html":{}}}],["async",{"_index":734,"title":{},"body":{"components/MembershipComponent.html":{}}}],["asyncvalidator",{"_index":998,"title":{},"body":{"directives/UniqueEmailDirective.html":{}}}],["asyncvalidatorfn",{"_index":1007,"title":{},"body":{"directives/UniqueEmailDirective.html":{},"miscellaneous/variables.html":{}}}],["asyncvalidatorfunction",{"_index":1011,"title":{},"body":{"directives/UniqueEmailDirective.html":{}}}],["authentication",{"_index":657,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["authguard",{"_index":166,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authorization",{"_index":552,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["authorization:`bearer",{"_index":608,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["automatically",{"_index":1216,"title":{},"body":{"index.html":{}}}],["available",{"_index":1252,"title":{},"body":{"modules.html":{}}}],["await",{"_index":761,"title":{},"body":{"components/MembershipComponent.html":{}}}],["awesomehotel.com",{"_index":391,"title":{},"body":{"components/FooterComponent.html":{}}}],["background",{"_index":412,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["based",{"_index":584,"title":{},"body":{"injectables/HttpUserService.html":{},"components/UserProfileComponent.html":{}}}],["baseurl",{"_index":1166,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["baseurl='https://localhost:5000/api/users",{"_index":593,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["below",{"_index":937,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["black",{"_index":414,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["block",{"_index":458,"title":{},"body":{"components/HomeComponent.html":{}}}],["body",{"_index":449,"title":{},"body":{"components/HomeComponent.html":{}}}],["book",{"_index":973,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["booking",{"_index":135,"title":{"interfaces/Booking.html":{}},"body":{"modules/AppModule.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["booking's",{"_index":438,"title":{},"body":{"components/HeaderComponent.html":{}}}],["booking'},{'name",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["booking.component",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BookingModule.html":{},"modules/UsersModule.html":{}}}],["booking.component.css",{"_index":931,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["booking.component.html",{"_index":932,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["booking.component.ts",{"_index":929,"title":{},"body":{"components/RoomBookingComponent.html":{},"coverage.html":{}}}],["booking.component.ts:22",{"_index":951,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["booking.component.ts:26",{"_index":949,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["booking.component.ts:29",{"_index":936,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["booking.component.ts:52",{"_index":947,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["booking.component.ts:59",{"_index":950,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["booking.component.ts:64",{"_index":945,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["booking.component.ts:75",{"_index":943,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["booking.component.ts:82",{"_index":940,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["booking.service",{"_index":490,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["booking/models/booking",{"_index":984,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["booking/room",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BookingModule.html":{},"components/RoomBookingComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["booking[]|undefined,search:string",{"_index":985,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["booking\\'s",{"_index":439,"title":{},"body":{"components/HeaderComponent.html":{}}}],["bookingdate",{"_index":238,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{}}}],["bookingdate:string",{"_index":251,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{}}}],["bookingdetails",{"_index":246,"title":{"interfaces/BookingDetails.html":{}},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["bookingid",{"_index":485,"title":{},"body":{"injectables/HttpBookingService.html":{},"components/UserProfileComponent.html":{}}}],["bookingid:number",{"_index":499,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["bookingid:number=1",{"_index":1072,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["bookingmodule",{"_index":110,"title":{"modules/BookingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules.html":{},"overview.html":{}}}],["bookings",{"_index":481,"title":{},"body":{"injectables/HttpBookingService.html":{},"components/MembershipComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["bookings!.filter(booking=>booking.bookingdate.includes(search",{"_index":987,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["bookings.bookingdate",{"_index":1102,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["bookings.id",{"_index":1100,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["bookings.numberofdaysstay",{"_index":1101,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["bookings.price",{"_index":1104,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["bookingservice",{"_index":264,"title":{"interfaces/BookingService.html":{}},"body":{"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["bookroom",{"_index":934,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["boolean",{"_index":213,"title":{},"body":{"guards/AuthGuard.html":{},"components/PopUpComponent.html":{},"components/UserProfileComponent.html":{}}}],["bootstrap",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":393,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["bottom",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["box",{"_index":408,"title":{},"body":{"components/FooterComponent.html":{}}}],["browse",{"_index":1250,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"interceptors/CacheInterceptor.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1225,"title":{},"body":{"index.html":{}}}],["builder",{"_index":827,"title":{},"body":{"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{}}}],["burlywood",{"_index":450,"title":{},"body":{"components/HomeComponent.html":{}}}],["c1",{"_index":358,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["c1!.value",{"_index":363,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["c2",{"_index":360,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["c2!.value",{"_index":365,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["cache",{"_index":310,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/HttpCacheService.html":{}}}],["cache.service",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"interceptors/CacheInterceptor.html":{}}}],["cache.service.ts",{"_index":502,"title":{},"body":{"injectables/HttpCacheService.html":{},"coverage.html":{}}}],["cache.service.ts:12",{"_index":515,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["cache.service.ts:22",{"_index":512,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["cache.service.ts:32",{"_index":506,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["cache.service.ts:39",{"_index":508,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["cached",{"_index":316,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["cachedresponse",{"_index":319,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["cachedresponse.url",{"_index":324,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["cacheinterceptor",{"_index":112,"title":{"interceptors/CacheInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/CacheInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["cacheservice",{"_index":291,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["cacheservice:httpcacheservice",{"_index":307,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["call",{"_index":1034,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["called",{"_index":1041,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["calls",{"_index":679,"title":{},"body":{"components/LoginComponent.html":{}}}],["canactivate",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate:[authguard],component:roombookingcomponent",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["cancel",{"_index":788,"title":{},"body":{"components/PopUpComponent.html":{},"components/UserProfileComponent.html":{}}}],["cancelbooking",{"_index":269,"title":{},"body":{"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{}}}],["cancelbooking(id",{"_index":275,"title":{},"body":{"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{}}}],["cancelled",{"_index":1084,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["canceltext",{"_index":780,"title":{},"body":{"components/PopUpComponent.html":{}}}],["canceltext:string=\"pop",{"_index":809,"title":{},"body":{"components/PopUpComponent.html":{}}}],["capabilities",{"_index":1243,"title":{},"body":{"index.html":{}}}],["caption",{"_index":461,"title":{},"body":{"components/HomeComponent.html":{}}}],["carousel",{"_index":453,"title":{},"body":{"components/HomeComponent.html":{}}}],["case",{"_index":636,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["catcherror",{"_index":589,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["catcherror(this._handleerror",{"_index":635,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["center",{"_index":400,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["change",{"_index":1218,"title":{},"body":{"index.html":{}}}],["characters",{"_index":718,"title":{},"body":{"components/LoginComponent.html":{}}}],["chars",{"_index":720,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["check",{"_index":297,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"index.html":{}}}],["checks",{"_index":544,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["choice",{"_index":1240,"title":{},"body":{"index.html":{}}}],["class",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/BookingModule.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"modules/SharedModule.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"modules/UsersModule.html":{}}}],["cli",{"_index":1207,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":1075,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["client",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpUserService.html":{}}}],["cluster_appmodule",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_bookingmodule",{"_index":253,"title":{},"body":{"modules/BookingModule.html":{},"overview.html":{}}}],["cluster_bookingmodule_declarations",{"_index":254,"title":{},"body":{"modules/BookingModule.html":{},"overview.html":{}}}],["cluster_bookingmodule_exports",{"_index":255,"title":{},"body":{"modules/BookingModule.html":{},"overview.html":{}}}],["cluster_bookingmodule_imports",{"_index":256,"title":{},"body":{"modules/BookingModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":371,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declarations",{"_index":373,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":372,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":374,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":988,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":991,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":990,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":989,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_usersmodule",{"_index":1125,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_declarations",{"_index":1127,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1126,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":1128,"title":{},"body":{"modules/UsersModule.html":{}}}],["code",{"_index":1220,"title":{},"body":{"index.html":{}}}],["color",{"_index":413,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["color:honeydew",{"_index":724,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["color:white",{"_index":407,"title":{},"body":{"components/FooterComponent.html":{}}}],["coming",{"_index":554,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["command",{"_index":1241,"title":{},"body":{"index.html":{}}}],["comment",{"_index":804,"title":{},"body":{"components/PopUpComponent.html":{}}}],["commonmodule",{"_index":259,"title":{},"body":{"modules/BookingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{}}}],["compare",{"_index":338,"title":{},"body":{"directives/CompareDirective.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["compare('password','confirmpassword",{"_index":873,"title":{},"body":{"components/RegisterComponent.html":{}}}],["compare:{message:`the",{"_index":368,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["comparedirective",{"_index":93,"title":{"directives/CompareDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/CompareDirective.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["compareto",{"_index":342,"title":{},"body":{"directives/CompareDirective.html":{}}}],["compareto]'},{'name",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["completed",{"_index":970,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["components/footer/footer.component",{"_index":378,"title":{},"body":{"modules/CoreModule.html":{}}}],["components/gallery/gallery.component",{"_index":262,"title":{},"body":{"modules/BookingModule.html":{}}}],["components/header/header.component",{"_index":377,"title":{},"body":{"modules/CoreModule.html":{}}}],["components/home/home.component",{"_index":379,"title":{},"body":{"modules/CoreModule.html":{}}}],["components/login/login.component",{"_index":1131,"title":{},"body":{"modules/UsersModule.html":{}}}],["components/membership/membership.component",{"_index":1134,"title":{},"body":{"modules/UsersModule.html":{}}}],["components/pop",{"_index":993,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/register/register.component",{"_index":1132,"title":{},"body":{"modules/UsersModule.html":{}}}],["components/room",{"_index":261,"title":{},"body":{"modules/BookingModule.html":{},"modules/UsersModule.html":{}}}],["components/user",{"_index":1135,"title":{},"body":{"modules/UsersModule.html":{}}}],["confirm",{"_index":790,"title":{},"body":{"components/PopUpComponent.html":{}}}],["confirmation",{"_index":1037,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["confirmpassword",{"_index":353,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["confirmpassword:['',passwordvalidators",{"_index":870,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword:string):validatorfn",{"_index":356,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["confirmtext",{"_index":781,"title":{},"body":{"components/PopUpComponent.html":{}}}],["confirmtext:string=\"pop",{"_index":808,"title":{},"body":{"components/PopUpComponent.html":{}}}],["console.log(\"booking",{"_index":1083,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["console.log(\"cancel",{"_index":1074,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["console.log(\"form",{"_index":876,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(\"guard",{"_index":225,"title":{},"body":{"guards/AuthGuard.html":{}}}],["console.log('error',error",{"_index":886,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log('getting",{"_index":956,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["console.log('membership",{"_index":756,"title":{},"body":{"components/MembershipComponent.html":{}}}],["console.log('registered",{"_index":884,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log('registering",{"_index":880,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log('user",{"_index":619,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["console.log('user',user",{"_index":697,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(`adding",{"_index":334,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["console.log(`invalidating",{"_index":309,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["console.log(`returning",{"_index":323,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["console.log(cachedresponse",{"_index":325,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["console.log(confirmation",{"_index":1080,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["console.log(id",{"_index":1076,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["console.log(info",{"_index":695,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(request",{"_index":650,"title":{},"body":{"injectables/InterceptorService.html":{}}}],["console.log(this.booking",{"_index":962,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["console.log(this.form",{"_index":874,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(this.user",{"_index":1067,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["console.log(x",{"_index":968,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["const",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"directives/UniqueEmailDirective.html":{}}}],["constant",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{}}}],["constructor(@inject(\"userservice",{"_index":1008,"title":{},"body":{"directives/UniqueEmailDirective.html":{}}}],["constructor(@inject(\"userservice\")private",{"_index":649,"title":{},"body":{"injectables/InterceptorService.html":{},"components/MembershipComponent.html":{}}}],["constructor(builder",{"_index":824,"title":{},"body":{"components/RegisterComponent.html":{}}}],["constructor(cacheservice",{"_index":289,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["constructor(http",{"_index":467,"title":{},"body":{"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{}}}],["constructor(logger",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["constructor(private",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"interceptors/CacheInterceptor.html":{},"components/HomeComponent.html":{},"injectables/HttpUserService.html":{},"components/RegisterComponent.html":{}}}],["constructor(userservice",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{}}}],["content",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"injectables/HttpUserService.html":{}}}],["context",{"_index":1172,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":357,"title":{},"body":{"directives/CompareDirective.html":{},"directives/UniqueEmailDirective.html":{},"miscellaneous/variables.html":{}}}],["control.get(confirmpassword",{"_index":361,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["control.get(password",{"_index":359,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["coremodule",{"_index":111,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coverage",{"_index":1136,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":208,"title":{},"body":{"guards/AuthGuard.html":{}}}],["created",{"_index":448,"title":{},"body":{"components/HomeComponent.html":{}}}],["creating",{"_index":864,"title":{},"body":{"components/RegisterComponent.html":{}}}],["credentials",{"_index":707,"title":{},"body":{"components/LoginComponent.html":{}}}],["crud",{"_index":267,"title":{},"body":{"interfaces/BookingService.html":{}}}],["currency:'inr",{"_index":1105,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["currency:\\'inr",{"_index":1107,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["current",{"_index":573,"title":{},"body":{"injectables/HttpUserService.html":{},"components/RegisterComponent.html":{}}}],["cycle",{"_index":435,"title":{},"body":{"components/HeaderComponent.html":{}}}],["d",{"_index":457,"title":{},"body":{"components/HomeComponent.html":{}}}],["danger",{"_index":710,"title":{},"body":{"components/LoginComponent.html":{}}}],["data",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.ts",{"_index":1141,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["data/.../db",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data/db",{"_index":1140,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":1098,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["days",{"_index":1096,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["decide",{"_index":203,"title":{},"body":{"guards/AuthGuard.html":{}}}],["declaration",{"_index":586,"title":{},"body":{"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{}}}],["declarations",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{}}}],["declaring",{"_index":682,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["default",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{}}}],["delete",{"_index":476,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["delete(`${url}/${id",{"_index":498,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["dependencies",{"_index":103,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/CoreModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/CacheInterceptor.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/MembershipComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"directives/UniqueEmailDirective.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"modules/UsersModule.html":{}}}],["destroy",{"_index":509,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["details",{"_index":252,"title":{},"body":{"interfaces/BookingDetails.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["details.user",{"_index":955,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["dev",{"_index":1214,"title":{},"body":{"index.html":{}}}],["development",{"_index":1210,"title":{},"body":{"index.html":{}}}],["directive",{"_index":65,"title":{"directives/CompareDirective.html":{},"directives/UniqueEmailDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/CompareDirective.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["directives",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"directives/CompareDirective.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1224,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1229,"title":{},"body":{"index.html":{}}}],["disableconsolelogging",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist",{"_index":1228,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1137,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["don't",{"_index":369,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["done",{"_index":785,"title":{},"body":{"components/PopUpComponent.html":{}}}],["done=new",{"_index":812,"title":{},"body":{"components/PopUpComponent.html":{}}}],["dummybookings",{"_index":1142,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dummybookingsmock",{"_index":1144,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dummyuser",{"_index":1145,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1238,"title":{},"body":{"index.html":{}}}],["each",{"_index":298,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["edit",{"_index":209,"title":{},"body":{"guards/AuthGuard.html":{},"components/UserProfileComponent.html":{}}}],["element",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["email",{"_index":561,"title":{},"body":{"injectables/HttpUserService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/RegisterComponent.html":{},"directives/UniqueEmailDirective.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"miscellaneous/variables.html":{}}}],["email.directive",{"_index":849,"title":{},"body":{"components/RegisterComponent.html":{}}}],["email.directive.ts",{"_index":996,"title":{},"body":{"directives/UniqueEmailDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["email.directive.ts:19",{"_index":1001,"title":{},"body":{"directives/UniqueEmailDirective.html":{}}}],["email.directive.ts:31",{"_index":1006,"title":{},"body":{"directives/UniqueEmailDirective.html":{}}}],["email.directive.ts:35",{"_index":1003,"title":{},"body":{"directives/UniqueEmailDirective.html":{}}}],["email:\"srilakshmi27272@gmail.com",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email:string",{"_index":658,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["empty",{"_index":841,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["end",{"_index":1237,"title":{},"body":{"index.html":{}}}],["entered",{"_index":577,"title":{},"body":{"injectables/HttpUserService.html":{},"components/LoginComponent.html":{}}}],["environment",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":545,"title":{},"body":{"injectables/HttpUserService.html":{},"components/LoginComponent.html":{}}}],["error.status",{"_index":709,"title":{},"body":{"components/LoginComponent.html":{}}}],["error:any",{"_index":703,"title":{},"body":{"components/LoginComponent.html":{}}}],["error:error",{"_index":885,"title":{},"body":{"components/RegisterComponent.html":{}}}],["essential",{"_index":1109,"title":{},"body":{"interfaces/UserService.html":{}}}],["event",{"_index":301,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["eventemitter",{"_index":796,"title":{},"body":{"components/PopUpComponent.html":{}}}],["example",{"_index":421,"title":{},"body":{"components/GalleryComponent.html":{}}}],["examples",{"_index":416,"title":{},"body":{"components/GalleryComponent.html":{}}}],["execute",{"_index":1234,"title":{},"body":{"index.html":{}}}],["export",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"modules/BookingModule.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"modules/SharedModule.html":{},"directives/UniqueEmailDirective.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"modules/UsersModule.html":{}}}],["exported",{"_index":351,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["exports",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BookingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{}}}],["extends",{"_index":659,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["false",{"_index":233,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/HttpUserService.html":{},"components/PopUpComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":935,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["field",{"_index":714,"title":{},"body":{"components/LoginComponent.html":{}}}],["fields",{"_index":237,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"directives/CompareDirective.html":{},"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"modules/BookingModule.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"modules/SharedModule.html":{},"directives/UniqueEmailDirective.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["files",{"_index":1219,"title":{},"body":{"index.html":{}}}],["first",{"_index":231,"title":{},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["fixed",{"_index":402,"title":{},"body":{"components/FooterComponent.html":{}}}],["fn",{"_index":1004,"title":{},"body":{"directives/UniqueEmailDirective.html":{}}}],["footer",{"_index":382,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["footer.component.css",{"_index":384,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":385,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":69,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":721,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{}}}],["form.controls!['aadhaarid'].errors!['maxlength']!.actuallength",{"_index":906,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['aadhaarid'].errors!['maxlength']!.requiredlength",{"_index":905,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['aadhaarid'].errors!['minlength']!.actuallength",{"_index":904,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['aadhaarid'].errors!['minlength']!.requiredlength",{"_index":903,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['confirmpassword'].errors!['maxlength']!.actuallength",{"_index":897,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['confirmpassword'].errors!['maxlength']!.requiredlength",{"_index":896,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['confirmpassword'].errors!['minlength']!.actuallength",{"_index":895,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['confirmpassword'].errors!['minlength']!.requiredlength",{"_index":894,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['email'].errors!['uniqueemail'].message",{"_index":888,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['password'].errors!['maxlength']!.actuallength",{"_index":893,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['password'].errors!['maxlength']!.requiredlength",{"_index":892,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['password'].errors!['minlength']!.actuallength",{"_index":890,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['password'].errors!['minlength']!.requiredlength",{"_index":889,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['phonenumber'].errors!['maxlength']!.actuallength",{"_index":902,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['phonenumber'].errors!['maxlength']!.requiredlength",{"_index":901,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['phonenumber'].errors!['minlength']!.actuallength",{"_index":900,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['phonenumber'].errors!['minlength']!.requiredlength",{"_index":899,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'aadhaarid\\'].errors![\\'maxlength\\']!.actuallength",{"_index":927,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'aadhaarid\\'].errors![\\'maxlength\\']!.requiredlength",{"_index":926,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'aadhaarid\\'].errors![\\'minlength\\']!.actuallength",{"_index":925,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'aadhaarid\\'].errors![\\'minlength\\']!.requiredlength",{"_index":924,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'confirmpassword\\'].errors![\\'maxlength\\']!.actuallength",{"_index":918,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'confirmpassword\\'].errors![\\'maxlength\\']!.requiredlength",{"_index":917,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'confirmpassword\\'].errors![\\'minlength\\']!.actuallength",{"_index":916,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'confirmpassword\\'].errors![\\'minlength\\']!.requiredlength",{"_index":915,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'email\\'].errors![\\'uniqueemail\\'].message",{"_index":910,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'password\\'].errors![\\'maxlength\\']!.actuallength",{"_index":914,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'password\\'].errors![\\'maxlength\\']!.requiredlength",{"_index":913,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'password\\'].errors![\\'minlength\\']!.actuallength",{"_index":912,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'password\\'].errors![\\'minlength\\']!.requiredlength",{"_index":911,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'phonenumber\\'].errors![\\'maxlength\\']!.actuallength",{"_index":923,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'phonenumber\\'].errors![\\'maxlength\\']!.requiredlength",{"_index":922,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'phonenumber\\'].errors![\\'minlength\\']!.actuallength",{"_index":921,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'phonenumber\\'].errors![\\'minlength\\']!.requiredlength",{"_index":920,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.errors!['compare'].message",{"_index":898,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.errors![\\'compare\\'].message",{"_index":919,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form:formgroup",{"_index":852,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formbuilder",{"_index":825,"title":{},"body":{"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{}}}],["formgroup",{"_index":839,"title":{},"body":{"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{}}}],["formsmodule",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/UsersModule.html":{}}}],["fortawesome/fontawesome",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/free",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["free",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["function",{"_index":354,"title":{},"body":{"directives/CompareDirective.html":{},"directives/UniqueEmailDirective.html":{},"miscellaneous/variables.html":{}}}],["further",{"_index":1244,"title":{},"body":{"index.html":{}}}],["gallery",{"_index":418,"title":{},"body":{"components/GalleryComponent.html":{},"components/HeaderComponent.html":{}}}],["gallery'},{'name",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["gallery.component.css",{"_index":419,"title":{},"body":{"components/GalleryComponent.html":{}}}],["gallery.component.html",{"_index":420,"title":{},"body":{"components/GalleryComponent.html":{}}}],["gallerycomponent",{"_index":71,"title":{"components/GalleryComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/BookingModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["generate",{"_index":1222,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1206,"title":{},"body":{"index.html":{}}}],["get(`${baseurl}/validate/${email",{"_index":632,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["get(`${url}/${id",{"_index":496,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["get(baseurl",{"_index":607,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["get(url",{"_index":505,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["get(url:string):httpresponse",{"_index":522,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["getallbookings",{"_index":270,"title":{},"body":{"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{}}}],["getallusers",{"_index":529,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["getauthenticationheader",{"_index":530,"title":{},"body":{"injectables/HttpUserService.html":{},"interfaces/UserService.html":{}}}],["getauthenticationheader():any",{"_index":1122,"title":{},"body":{"interfaces/UserService.html":{}}}],["getbookingbyid",{"_index":271,"title":{},"body":{"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{}}}],["getbookingbyid(id",{"_index":278,"title":{},"body":{"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{}}}],["getloggedinuser",{"_index":531,"title":{},"body":{"injectables/HttpUserService.html":{},"interfaces/UserService.html":{}}}],["getloggedinuser():loggedindetails|undefined",{"_index":1123,"title":{},"body":{"interfaces/UserService.html":{}}}],["gets",{"_index":1033,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["getting",{"_index":1203,"title":{"index.html":{}},"body":{}}],["getuserbyemail",{"_index":532,"title":{},"body":{"injectables/HttpUserService.html":{},"interfaces/UserService.html":{}}}],["getuserbyemail(email",{"_index":559,"title":{},"body":{"injectables/HttpUserService.html":{},"interfaces/UserService.html":{}}}],["getuserbyemail(email:string):observable",{"_index":1124,"title":{},"body":{"interfaces/UserService.html":{}}}],["getuserstatusannouncement",{"_index":533,"title":{},"body":{"injectables/HttpUserService.html":{},"components/MembershipComponent.html":{},"components/RoomBookingComponent.html":{},"interfaces/UserService.html":{}}}],["getuserstatusannouncement():subject",{"_index":1121,"title":{},"body":{"interfaces/UserService.html":{}}}],["go",{"_index":631,"title":{},"body":{"injectables/HttpUserService.html":{},"index.html":{}}}],["graph",{"_index":1251,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":397,"title":{},"body":{"components/FooterComponent.html":{}}}],["guard",{"_index":185,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":186,"title":{},"body":{"guards/AuthGuard.html":{}}}],["h3,button",{"_index":727,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["handle",{"_index":740,"title":{},"body":{"components/MembershipComponent.html":{}}}],["handlecancel",{"_index":777,"title":{},"body":{"components/PopUpComponent.html":{},"components/UserProfileComponent.html":{}}}],["handlecancel(id",{"_index":1031,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["handleclick",{"_index":1024,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["handleclick(confirmation",{"_index":1035,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["handleconfirm",{"_index":778,"title":{},"body":{"components/PopUpComponent.html":{}}}],["handledone",{"_index":779,"title":{},"body":{"components/PopUpComponent.html":{}}}],["handledone(response",{"_index":801,"title":{},"body":{"components/PopUpComponent.html":{}}}],["handledone(response:boolean",{"_index":813,"title":{},"body":{"components/PopUpComponent.html":{}}}],["handleedit",{"_index":1025,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["handleedit(id",{"_index":1038,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["handlelogin",{"_index":676,"title":{},"body":{"components/LoginComponent.html":{}}}],["handlelogout",{"_index":735,"title":{},"body":{"components/MembershipComponent.html":{}}}],["handler",{"_index":647,"title":{},"body":{"injectables/InterceptorService.html":{}}}],["handleregistration",{"_index":823,"title":{},"body":{"components/RegisterComponent.html":{}}}],["handling",{"_index":803,"title":{},"body":{"components/PopUpComponent.html":{}}}],["header",{"_index":426,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/HttpUserService.html":{}}}],["header'},{'name",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["header.component.css",{"_index":427,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":428,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":73,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headers",{"_index":579,"title":{},"body":{"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{}}}],["height",{"_index":403,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["height:100px",{"_index":460,"title":{},"body":{"components/HomeComponent.html":{}}}],["help",{"_index":1245,"title":{},"body":{"index.html":{}}}],["helper",{"_index":543,"title":{},"body":{"injectables/HttpUserService.html":{},"components/MembershipComponent.html":{}}}],["home",{"_index":441,"title":{},"body":{"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["home.component.css",{"_index":442,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":443,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":75,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hook",{"_index":436,"title":{},"body":{"components/HeaderComponent.html":{}}}],["hotelmanagement",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["hotelmanagementclient",{"_index":1204,"title":{},"body":{"index.html":{}}}],["html",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["http",{"_index":470,"title":{},"body":{"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{}}}],["http://localhost:4200",{"_index":1215,"title":{},"body":{"index.html":{}}}],["http://localhost:4200/booking/gallery",{"_index":423,"title":{},"body":{"components/GalleryComponent.html":{}}}],["http:httpclient",{"_index":595,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["http_interceptors",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["http_interceptors,useclass:interceptorservice,multi",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["httpbookingservice",{"_index":133,"title":{"injectables/HttpBookingService.html":{}},"body":{"modules/AppModule.html":{},"injectables/HttpBookingService.html":{},"coverage.html":{}}}],["httpcacheservice",{"_index":113,"title":{"injectables/HttpCacheService.html":{}},"body":{"modules/AppModule.html":{},"interceptors/CacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"coverage.html":{},"overview.html":{}}}],["httpclient",{"_index":468,"title":{},"body":{"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"modules/UsersModule.html":{}}}],["httpclientmodule",{"_index":1133,"title":{},"body":{"modules/UsersModule.html":{}}}],["httperrorresponse",{"_index":541,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["httpevent",{"_index":302,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/InterceptorService.html":{}}}],["httphandler",{"_index":295,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/InterceptorService.html":{}}}],["httpinterceptor",{"_index":303,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["httprequest",{"_index":293,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/InterceptorService.html":{}}}],["httpresponse",{"_index":304,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/HttpCacheService.html":{}}}],["https://localhost:5000/api/bookings",{"_index":491,"title":{},"body":{"injectables/HttpBookingService.html":{},"miscellaneous/variables.html":{}}}],["https://localhost:5000/api/logs",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://localhost:5000/api/users",{"_index":1267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpuserservice",{"_index":129,"title":{"injectables/HttpUserService.html":{}},"body":{"modules/AppModule.html":{},"injectables/HttpUserService.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["icons",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":239,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{},"components/RegisterComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["id\":1,\"userid\":\"srilakshmi27272@gmail.com\",\"numberofdaysstay\":2,\"price\":1000,\"bookingdate\":\"2022",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id\":1,\"userid\":\"srilakshmi27272@gmail.com\",\"numberofdaysstay\":3,\"price\":1500,\"bookingdate\":\"2022",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id\":1,\"userid\":\"srilakshmi27272@gmail.com\",\"numberofdaysstay\":7,\"price\":1000,\"bookingdate\":\"2022",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identifier",{"_index":1138,"title":{},"body":{"coverage.html":{}}}],["if(!this.loggedinuser",{"_index":596,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["if(!this.preventdefault",{"_index":815,"title":{},"body":{"components/PopUpComponent.html":{}}}],["if(cachedresponse",{"_index":322,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["if(confirmation",{"_index":1081,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["if(details",{"_index":753,"title":{},"body":{"components/MembershipComponent.html":{}}}],["if(error.status",{"_index":628,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["if(jsonstring",{"_index":599,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["if(registered",{"_index":1015,"title":{},"body":{"directives/UniqueEmailDirective.html":{},"miscellaneous/variables.html":{}}}],["if(req.method",{"_index":308,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["if(result",{"_index":332,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["if(this.form.invalid",{"_index":875,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.loggedinuser",{"_index":613,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["if(this.userservice.getloggedinuser",{"_index":226,"title":{},"body":{"guards/AuthGuard.html":{}}}],["if(v1",{"_index":366,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["iframes",{"_index":424,"title":{},"body":{"components/GalleryComponent.html":{}}}],["ignore",{"_index":350,"title":{},"body":{"directives/CompareDirective.html":{},"components/GalleryComponent.html":{},"injectables/HttpCacheService.html":{},"components/LoginComponent.html":{}}}],["img",{"_index":451,"title":{},"body":{"components/HomeComponent.html":{},"components/MembershipComponent.html":{},"components/RegisterComponent.html":{}}}],["implementing",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/InterceptorService.html":{}}}],["implements",{"_index":220,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/CacheInterceptor.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["import",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/BookingModule.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"modules/SharedModule.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"modules/UsersModule.html":{}}}],["importing",{"_index":1130,"title":{},"body":{"modules/UsersModule.html":{}}}],["imports",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BookingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{}}}],["incase",{"_index":634,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"modules/BookingModule.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"modules/SharedModule.html":{},"directives/UniqueEmailDirective.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"modules/UsersModule.html":{}}}],["info:loggedindetails",{"_index":618,"title":{},"body":{"injectables/HttpUserService.html":{},"components/LoginComponent.html":{}}}],["information",{"_index":580,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["initialization",{"_index":389,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["initialized",{"_index":757,"title":{},"body":{"components/MembershipComponent.html":{},"components/RegisterComponent.html":{}}}],["initializes",{"_index":1042,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["initializing",{"_index":946,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["inject",{"_index":215,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/HttpBookingService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{}}}],["inject(\"bookingservice",{"_index":1061,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["inject(\"userservice",{"_index":493,"title":{},"body":{"injectables/HttpBookingService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["inject(\"userservice\")private",{"_index":221,"title":{},"body":{"guards/AuthGuard.html":{}}}],["inject('bookingservice",{"_index":954,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["inject('userservice",{"_index":953,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["injectable",{"_index":216,"title":{"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/CacheInterceptor.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"coverage.html":{}}}],["injectables",{"_index":463,"title":{},"body":{"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"overview.html":{}}}],["injection",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/CacheInterceptor.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/MembershipComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{}}}],["inner",{"_index":454,"title":{},"body":{"components/HomeComponent.html":{}}}],["input",{"_index":431,"title":{},"body":{"components/HeaderComponent.html":{},"components/PopUpComponent.html":{},"components/RoomBookingComponent.html":{}}}],["inputs",{"_index":429,"title":{},"body":{"components/HeaderComponent.html":{},"components/PopUpComponent.html":{}}}],["instance",{"_index":938,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["instanceof",{"_index":333,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["intercept",{"_index":288,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/InterceptorService.html":{}}}],["intercept(req",{"_index":292,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["intercept(request",{"_index":643,"title":{},"body":{"injectables/InterceptorService.html":{}}}],["interceptor",{"_index":284,"title":{"interceptors/CacheInterceptor.html":{}},"body":{"injectables/InterceptorService.html":{},"coverage.html":{}}}],["interceptor.service",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptor.service.ts",{"_index":287,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"coverage.html":{}}}],["interceptor.service.ts:12",{"_index":290,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["interceptor.service.ts:25",{"_index":296,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["interceptors",{"_index":285,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["interceptorservice",{"_index":114,"title":{"injectables/InterceptorService.html":{}},"body":{"modules/AppModule.html":{},"injectables/InterceptorService.html":{},"coverage.html":{},"overview.html":{}}}],["interface",{"_index":190,"title":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"interfaces/BookingService.html":{},"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{},"interfaces/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"interfaces/BookingService.html":{},"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{},"interfaces/UserService.html":{},"coverage.html":{}}}],["interfaces",{"_index":234,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"interfaces/BookingService.html":{},"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{},"interfaces/UserService.html":{},"overview.html":{}}}],["internal",{"_index":887,"title":{},"body":{"components/RegisterComponent.html":{}}}],["intializes",{"_index":746,"title":{},"body":{"components/MembershipComponent.html":{}}}],["invalid",{"_index":706,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["invalidatecache",{"_index":504,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["invalidatecache():void",{"_index":523,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["invokes",{"_index":831,"title":{},"body":{"components/RegisterComponent.html":{}}}],["isemailregistered",{"_index":534,"title":{},"body":{"injectables/HttpUserService.html":{},"interfaces/UserService.html":{}}}],["isemailregistered(control.value",{"_index":1013,"title":{},"body":{"directives/UniqueEmailDirective.html":{},"miscellaneous/variables.html":{}}}],["isemailregistered(email",{"_index":565,"title":{},"body":{"injectables/HttpUserService.html":{},"interfaces/UserService.html":{}}}],["isemailregistered(email:string):observable",{"_index":1120,"title":{},"body":{"interfaces/UserService.html":{}}}],["jquery",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["json.parse(jsonstring",{"_index":600,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["json.stringify(this.loggedinuser",{"_index":615,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["jsonstring",{"_index":597,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["karma",{"_index":1236,"title":{},"body":{"index.html":{}}}],["legend",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["level:ngxloggerlevel.trace",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["life",{"_index":434,"title":{},"body":{"components/HeaderComponent.html":{}}}],["lint",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["list",{"_index":480,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["literal",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local",{"_index":516,"title":{},"body":{"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{}}}],["localstorage.getitem(\"user",{"_index":598,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["localstorage.removeitem(\"user",{"_index":616,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["localstorage.setitem(\"user",{"_index":614,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["localstorage.setitem(url,json.stringify(response",{"_index":521,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["logged",{"_index":557,"title":{},"body":{"injectables/HttpUserService.html":{},"components/MembershipComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["loggedin",{"_index":1146,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loggedindetails",{"_index":556,"title":{"interfaces/LoggedInDetails.html":{}},"body":{"injectables/HttpUserService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loggedindetails|undefined",{"_index":605,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["loggedinuser",{"_index":526,"title":{},"body":{"injectables/HttpUserService.html":{},"components/LoginComponent.html":{}}}],["loggedinuser?:loggedindetails",{"_index":594,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["loggedinuser?:user",{"_index":689,"title":{},"body":{"components/LoginComponent.html":{}}}],["loggedinuserannouncement",{"_index":527,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["logger",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"dependencies.html":{}}}],["logger:ngxlogger",{"_index":446,"title":{},"body":{"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{}}}],["loggermodule",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{}}}],["loggermodule.forroot(environment.logging",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["logging",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":230,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["login(logininfo",{"_index":568,"title":{},"body":{"injectables/HttpUserService.html":{},"interfaces/UserService.html":{}}}],["login(logininfo:logininfo):observable",{"_index":1118,"title":{},"body":{"interfaces/UserService.html":{}}}],["login(this.logininfo",{"_index":693,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.css",{"_index":673,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":674,"title":{},"body":{"components/LoginComponent.html":{}}}],["login:',info",{"_index":621,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["logincomponent",{"_index":77,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["logininfo",{"_index":569,"title":{"interfaces/LoginInfo.html":{}},"body":{"injectables/HttpUserService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{},"interfaces/UserService.html":{},"coverage.html":{}}}],["logininfo:logininfo",{"_index":688,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":535,"title":{},"body":{"injectables/HttpUserService.html":{},"components/MembershipComponent.html":{},"interfaces/UserService.html":{}}}],["logout():observable",{"_index":638,"title":{},"body":{"injectables/HttpUserService.html":{},"interfaces/UserService.html":{}}}],["longdate",{"_index":1103,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["main",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["map",{"_index":489,"title":{},"body":{"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"directives/UniqueEmailDirective.html":{},"miscellaneous/variables.html":{}}}],["map(response=>true",{"_index":633,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["margin",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/RegisterComponent.html":{}}}],["margin:10px",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["margin:50px",{"_index":907,"title":{},"body":{"components/RegisterComponent.html":{}}}],["match",{"_index":370,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"modules/BookingModule.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"modules/SharedModule.html":{},"directives/UniqueEmailDirective.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":891,"title":{},"body":{"components/RegisterComponent.html":{}}}],["membership",{"_index":731,"title":{},"body":{"components/MembershipComponent.html":{}}}],["membership'},{'name",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["membership.component.css",{"_index":732,"title":{},"body":{"components/MembershipComponent.html":{}}}],["membership.component.html",{"_index":733,"title":{},"body":{"components/MembershipComponent.html":{}}}],["membershipcomponent",{"_index":79,"title":{"components/MembershipComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"directives/CompareDirective.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{}}}],["method",{"_index":206,"title":{},"body":{"guards/AuthGuard.html":{},"directives/CompareDirective.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":191,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{}}}],["min",{"_index":716,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["miscellaneous",{"_index":1258,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mock",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["models/booking",{"_index":282,"title":{},"body":{"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{},"components/RoomBookingComponent.html":{}}}],["models/user",{"_index":591,"title":{},"body":{"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{}}}],["modified",{"_index":648,"title":{},"body":{"injectables/InterceptorService.html":{}}}],["modifiedrequest",{"_index":652,"title":{},"body":{"injectables/InterceptorService.html":{}}}],["module",{"_index":100,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BookingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/UsersModule.html":{}}}],["modules",{"_index":102,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BookingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/booking/booking.module",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/booking/components/gallery/gallery.component",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/booking/components/room",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/booking/services/http",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/core/components/home/home.component",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/core/core.module",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/core/guards/auth.guard",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/core/interceptors/cache",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/core/interceptors/interceptor.service",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/core/services/http",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/users/components/login/login.component",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/users/components/register/register.component",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/users/components/user",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/users/services/http",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":1246,"title":{},"body":{"index.html":{}}}],["multi",{"_index":341,"title":{},"body":{"directives/CompareDirective.html":{},"directives/UniqueEmailDirective.html":{}}}],["multi:true",{"_index":349,"title":{},"body":{"directives/CompareDirective.html":{}}}],["name",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"directives/UniqueEmailDirective.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"index.html":{}}}],["name:\"srilakshmi",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:string",{"_index":660,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["nav",{"_index":766,"title":{},"body":{"components/MembershipComponent.html":{}}}],["navbar",{"_index":765,"title":{},"body":{"components/MembershipComponent.html":{}}}],["navigate",{"_index":741,"title":{},"body":{"components/MembershipComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["nbsp;&nbsp",{"_index":1106,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["necessary",{"_index":236,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["need",{"_index":229,"title":{},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["new",{"_index":587,"title":{},"body":{"injectables/HttpUserService.html":{},"components/PopUpComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":294,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{}}}],["next.handle(modifiedrequest",{"_index":655,"title":{},"body":{"injectables/InterceptorService.html":{}}}],["next.handle(req",{"_index":314,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["next:(user:any",{"_index":883,"title":{},"body":{"components/RegisterComponent.html":{}}}],["ng",{"_index":1212,"title":{},"body":{"index.html":{}}}],["ng_async_validators",{"_index":999,"title":{},"body":{"directives/UniqueEmailDirective.html":{}}}],["ng_validators",{"_index":339,"title":{},"body":{"directives/CompareDirective.html":{},"directives/UniqueEmailDirective.html":{}}}],["ngmodule",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BookingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{}}}],["ngondestroy",{"_index":736,"title":{},"body":{"components/MembershipComponent.html":{},"components/RoomBookingComponent.html":{}}}],["ngoninit",{"_index":386,"title":{},"body":{"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["ngrx/store",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["ngx",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"dependencies.html":{}}}],["ngxlogger",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{}}}],["ngxloggerlevel",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["nothing",{"_index":478,"title":{},"body":{"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{}}}],["null",{"_index":367,"title":{},"body":{"directives/CompareDirective.html":{},"directives/UniqueEmailDirective.html":{},"miscellaneous/variables.html":{}}}],["nullable",{"_index":668,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["number",{"_index":245,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{},"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["numberofdaysstay",{"_index":240,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"components/RoomBookingComponent.html":{}}}],["numberofdaysstay:1",{"_index":1050,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["numberofdaysstay:number",{"_index":248,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{}}}],["object",{"_index":833,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":211,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"directives/UniqueEmailDirective.html":{},"interfaces/UserService.html":{},"miscellaneous/variables.html":{}}}],["of(cachedresponse",{"_index":326,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["of(false",{"_index":630,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["of(null",{"_index":1017,"title":{},"body":{"directives/UniqueEmailDirective.html":{},"miscellaneous/variables.html":{}}}],["of(undefined",{"_index":640,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["ondestroy",{"_index":930,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["oninit",{"_index":383,"title":{},"body":{"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["optional",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Booking.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"directives/UniqueEmailDirective.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{}}}],["otherwise",{"_index":558,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["out",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":795,"title":{},"body":{"components/PopUpComponent.html":{}}}],["outputs",{"_index":784,"title":{},"body":{"components/PopUpComponent.html":{}}}],["overview",{"_index":1247,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":392,"title":{},"body":{"components/FooterComponent.html":{}}}],["package",{"_index":1176,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/RegisterComponent.html":{}}}],["page",{"_index":742,"title":{},"body":{"components/MembershipComponent.html":{},"components/RoomBookingComponent.html":{},"index.html":{}}}],["param",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{}}}],["paramater",{"_index":939,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["parameters",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{}}}],["params[\"id",{"_index":1065,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["param{string",{"_index":602,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["particular",{"_index":483,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["passed",{"_index":484,"title":{},"body":{"injectables/HttpBookingService.html":{},"components/UserProfileComponent.html":{}}}],["password",{"_index":352,"title":{},"body":{"directives/CompareDirective.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["password:\"1234",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["password:['',passwordvalidators",{"_index":869,"title":{},"body":{"components/RegisterComponent.html":{}}}],["password:string",{"_index":355,"title":{},"body":{"directives/CompareDirective.html":{},"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["passwordfield.errors!['minlength']!.actuallength",{"_index":719,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordfield.errors!['minlength']!.requiredlength",{"_index":717,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordfield.errors![\\'minlength\\']!.actuallength",{"_index":729,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordfield.errors![\\'minlength\\']!.requiredlength",{"_index":728,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordvalidators",{"_index":853,"title":{},"body":{"components/RegisterComponent.html":{}}}],["path:\"\",component:homecomponent",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"booking/gallery\",component:gallerycomponent",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"user/login\",component:logincomponent",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"user/register\",component:registercomponent",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:'booking",{"_index":179,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:'home',component:homecomponent",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:'user/profile/:id',canactivate:[authguard],component:userprofilecomponent",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["phone",{"_index":663,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["phonenumber",{"_index":1018,"title":{},"body":{"interfaces/User.html":{}}}],["phonenumber:\"9137846733",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phonenumber:['',phonenumbervalidators",{"_index":871,"title":{},"body":{"components/RegisterComponent.html":{}}}],["phonenumber:string",{"_index":664,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["phonenumbervalidators",{"_index":857,"title":{},"body":{"components/RegisterComponent.html":{}}}],["pipe",{"_index":330,"title":{"pipes/SearchPipe.html":{}},"body":{"interceptors/CacheInterceptor.html":{},"injectables/HttpUserService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"directives/UniqueEmailDirective.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["pipes",{"_index":975,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["pipes/search.pipe",{"_index":995,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipetransform",{"_index":983,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["platform",{"_index":1239,"title":{},"body":{"index.html":{}}}],["pop",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["popperjs/core",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["popup",{"_index":773,"title":{},"body":{"components/PopUpComponent.html":{},"components/UserProfileComponent.html":{}}}],["popupcomponent",{"_index":81,"title":{"components/PopUpComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"modules/SharedModule.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["position",{"_index":401,"title":{},"body":{"components/FooterComponent.html":{}}}],["post",{"_index":473,"title":{},"body":{"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{}}}],["post(`${baseurl}/login`,logininfo",{"_index":617,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["post(url,booking",{"_index":497,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["preventdefault",{"_index":782,"title":{},"body":{"components/PopUpComponent.html":{}}}],["preventdefault:boolean=false",{"_index":810,"title":{},"body":{"components/PopUpComponent.html":{}}}],["price",{"_index":241,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"components/UserProfileComponent.html":{}}}],["price:string",{"_index":250,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{}}}],["primary",{"_index":713,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["private",{"_index":223,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{}}}],["production",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["profile.component",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UsersModule.html":{}}}],["profile.component.css",{"_index":1021,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.html",{"_index":1022,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts",{"_index":1020,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:105",{"_index":1039,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:116",{"_index":1036,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:145",{"_index":1051,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:155",{"_index":1045,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:20",{"_index":1029,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:34",{"_index":1047,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:38",{"_index":1053,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:42",{"_index":1048,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:46",{"_index":1049,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:50",{"_index":1054,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:55",{"_index":1040,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:70",{"_index":1055,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:74",{"_index":1052,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:76",{"_index":1043,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:82",{"_index":1030,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:88",{"_index":1046,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:93",{"_index":1032,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile/user",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/UserProfileComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["profilepic",{"_index":661,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["profilepic:\"https://www.bing.com/th?id=oip.4lvhdgxwrykur9z5jeia7ahafg&w=150&h=112&c=8&rs=1&qlt=90&o=6&dpr=1.5&pid=3.1&rm=2",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profilepic?:string",{"_index":662,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["profileurl",{"_index":868,"title":{},"body":{"components/RegisterComponent.html":{}}}],["project",{"_index":1205,"title":{},"body":{"index.html":{}}}],["promise",{"_index":212,"title":{},"body":{"guards/AuthGuard.html":{},"directives/UniqueEmailDirective.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":22,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"properties.html":{}}}],["property",{"_index":244,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"components/HeaderComponent.html":{},"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"components/PopUpComponent.html":{},"interfaces/User.html":{}}}],["provide",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"directives/CompareDirective.html":{},"directives/UniqueEmailDirective.html":{}}}],["provide:\"bookingservice\",useclass:httpbookingservice",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["provide:\"userservice\",useclass:httpuserservice",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["provide:http_interceptors,useclass:cacheinterceptor,multi:true",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["provide:ng_validators",{"_index":347,"title":{},"body":{"directives/CompareDirective.html":{}}}],["providedin",{"_index":219,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/CacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/InterceptorService.html":{}}}],["providedin:\"root",{"_index":492,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["providers",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"directives/CompareDirective.html":{},"directives/UniqueEmailDirective.html":{}}}],["providers:[authguard",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["put",{"_index":487,"title":{},"body":{"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{}}}],["put(`${url}/${bookingid}`,booking",{"_index":500,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["put(url",{"_index":511,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["put(url:string",{"_index":518,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["px",{"_index":395,"title":{},"body":{"components/FooterComponent.html":{}}}],["radius",{"_index":723,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["reactiveformsmodule",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/UsersModule.html":{}}}],["received",{"_index":620,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["redirect",{"_index":834,"title":{},"body":{"components/RegisterComponent.html":{}}}],["redirected",{"_index":971,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["redirecting",{"_index":942,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["reference",{"_index":1248,"title":{},"body":{"index.html":{}}}],["register",{"_index":536,"title":{},"body":{"injectables/HttpUserService.html":{},"components/MembershipComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserService.html":{}}}],["register'},{'name",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["register(this.user",{"_index":881,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register(user",{"_index":575,"title":{},"body":{"injectables/HttpUserService.html":{},"interfaces/UserService.html":{}}}],["register(user:user):observable",{"_index":1119,"title":{},"body":{"interfaces/UserService.html":{}}}],["register.component.css",{"_index":821,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":822,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":84,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":466,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["registered:boolean",{"_index":1014,"title":{},"body":{"directives/UniqueEmailDirective.html":{},"miscellaneous/variables.html":{}}}],["registeronvalidatorchange",{"_index":1000,"title":{},"body":{"directives/UniqueEmailDirective.html":{}}}],["registeronvalidatorchange(fn",{"_index":1002,"title":{},"body":{"directives/UniqueEmailDirective.html":{}}}],["registeronvalidatorchange?(fn",{"_index":1010,"title":{},"body":{"directives/UniqueEmailDirective.html":{}}}],["registration",{"_index":837,"title":{},"body":{"components/RegisterComponent.html":{}}}],["related",{"_index":266,"title":{},"body":{"interfaces/BookingService.html":{}}}],["reload",{"_index":1217,"title":{},"body":{"index.html":{}}}],["req",{"_index":300,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["req.method",{"_index":311,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["req.url",{"_index":312,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["request",{"_index":299,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{}}}],["request.clone",{"_index":653,"title":{},"body":{"injectables/InterceptorService.html":{}}}],["requested",{"_index":514,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["requests",{"_index":503,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["requests:any",{"_index":517,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["require",{"_index":1173,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":715,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["requires",{"_index":832,"title":{},"body":{"components/RegisterComponent.html":{}}}],["reset",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":317,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"components/PopUpComponent.html":{}}}],["response:httpresponse):void",{"_index":519,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["result",{"_index":336,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/HttpUserService.html":{}}}],["results",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"modules/BookingModule.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"modules/SharedModule.html":{},"directives/UniqueEmailDirective.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":507,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["retrieving",{"_index":315,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["return",{"_index":227,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":210,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{}}}],["right",{"_index":767,"title":{},"body":{"components/MembershipComponent.html":{}}}],["room",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["roombookingcomponent",{"_index":86,"title":{"components/RoomBookingComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/BookingModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["roomno",{"_index":242,"title":{},"body":{"interfaces/Booking.html":{}}}],["roomno?:string",{"_index":249,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/CacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/InterceptorService.html":{}}}],["root'},{'name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["route",{"_index":207,"title":{},"body":{"guards/AuthGuard.html":{}}}],["router",{"_index":194,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["router:router",{"_index":224,"title":{},"body":{"guards/AuthGuard.html":{},"components/MembershipComponent.html":{},"components/RegisterComponent.html":{}}}],["routermodule",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BookingModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{}}}],["routermodule.forroot(routes",{"_index":182,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":199,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":159,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["routing.module.ts",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1211,"title":{},"body":{"index.html":{}}}],["running",{"_index":1230,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":217,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"directives/UniqueEmailDirective.html":{},"interfaces/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":845,"title":{},"body":{"components/RegisterComponent.html":{}}}],["save",{"_index":329,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["scaffolding",{"_index":1221,"title":{},"body":{"index.html":{}}}],["search",{"_index":977,"title":{},"body":{"pipes/SearchPipe.html":{},"components/UserProfileComponent.html":{}}}],["searchpipe",{"_index":974,"title":{"pipes/SearchPipe.html":{}},"body":{"pipes/SearchPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"directives/CompareDirective.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{}}}],["selector:\"user",{"_index":1058,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["send",{"_index":327,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/HttpUserService.html":{}}}],["sends",{"_index":472,"title":{},"body":{"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/PopUpComponent.html":{}}}],["serve",{"_index":1213,"title":{},"body":{"index.html":{}}}],["server",{"_index":328,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serverloggingurl",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverloglevel:ngxloggerlevel.trace",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"interceptors/CacheInterceptor.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/UsersModule.html":{}}}],["service.ts",{"_index":465,"title":{},"body":{"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["service.ts:110",{"_index":570,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["service.ts:130",{"_index":576,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["service.ts:142",{"_index":542,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["service.ts:155",{"_index":566,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["service.ts:170",{"_index":562,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["service.ts:179",{"_index":574,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["service.ts:20",{"_index":469,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["service.ts:22",{"_index":588,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["service.ts:26",{"_index":538,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["service.ts:36",{"_index":479,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["service.ts:46",{"_index":482,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["service.ts:49",{"_index":560,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["service.ts:58",{"_index":555,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["service.ts:60",{"_index":471,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["service.ts:67",{"_index":547,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["service.ts:72",{"_index":475,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["service.ts:80",{"_index":549,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["service.ts:85",{"_index":486,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["service.ts:94",{"_index":582,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["services/booking.service",{"_index":952,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["services/http",{"_index":306,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"modules/UsersModule.html":{}}}],["services/user.service",{"_index":686,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["setheaders",{"_index":654,"title":{},"body":{"injectables/InterceptorService.html":{}}}],["sets",{"_index":749,"title":{},"body":{"components/MembershipComponent.html":{},"components/UserProfileComponent.html":{}}}],["settings",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shadow",{"_index":409,"title":{},"body":{"components/FooterComponent.html":{}}}],["shared/shared.module",{"_index":380,"title":{},"body":{"modules/CoreModule.html":{},"modules/UsersModule.html":{}}}],["sharedmodule",{"_index":375,"title":{"modules/SharedModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["showpopup",{"_index":1026,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["solid",{"_index":396,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"modules/BookingModule.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"modules/SharedModule.html":{},"directives/UniqueEmailDirective.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["spec\\.ts",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../compare.directive.ts",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../http",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../unique",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/modules/booking/booking.module.ts",{"_index":258,"title":{},"body":{"modules/BookingModule.html":{}}}],["src/app/modules/booking/components/gallery/gallery.component.ts",{"_index":417,"title":{},"body":{"components/GalleryComponent.html":{},"coverage.html":{}}}],["src/app/modules/booking/components/room",{"_index":928,"title":{},"body":{"components/RoomBookingComponent.html":{},"coverage.html":{}}}],["src/app/modules/booking/models/booking",{"_index":1056,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["src/app/modules/booking/models/booking.ts",{"_index":235,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"coverage.html":{}}}],["src/app/modules/booking/services/booking.service",{"_index":1057,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["src/app/modules/booking/services/booking.service.ts",{"_index":265,"title":{},"body":{"interfaces/BookingService.html":{},"coverage.html":{}}}],["src/app/modules/booking/services/booking.service.ts:11",{"_index":279,"title":{},"body":{"interfaces/BookingService.html":{}}}],["src/app/modules/booking/services/booking.service.ts:13",{"_index":274,"title":{},"body":{"interfaces/BookingService.html":{}}}],["src/app/modules/booking/services/booking.service.ts:15",{"_index":276,"title":{},"body":{"interfaces/BookingService.html":{}}}],["src/app/modules/booking/services/booking.service.ts:17",{"_index":281,"title":{},"body":{"interfaces/BookingService.html":{}}}],["src/app/modules/booking/services/booking.service.ts:9",{"_index":277,"title":{},"body":{"interfaces/BookingService.html":{}}}],["src/app/modules/booking/services/http",{"_index":464,"title":{},"body":{"injectables/HttpBookingService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/core/components/footer/footer.component.ts",{"_index":381,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/modules/core/components/footer/footer.component.ts:11",{"_index":387,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/modules/core/components/footer/footer.component.ts:21",{"_index":388,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/modules/core/components/header/header.component.ts",{"_index":425,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/modules/core/components/header/header.component.ts:16",{"_index":430,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/modules/core/components/header/header.component.ts:25",{"_index":432,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/modules/core/components/home/home.component.ts",{"_index":440,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/modules/core/components/home/home.component.ts:12",{"_index":444,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/modules/core/components/home/home.component.ts:25",{"_index":445,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/modules/core/core.module.ts",{"_index":376,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/modules/core/guards/auth.guard.ts",{"_index":187,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/modules/core/guards/auth.guard.ts:12",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/modules/core/guards/auth.guard.ts:31",{"_index":200,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/modules/core/interceptors/cache",{"_index":286,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"coverage.html":{}}}],["src/app/modules/core/interceptors/interceptor.service.ts",{"_index":641,"title":{},"body":{"injectables/InterceptorService.html":{},"coverage.html":{}}}],["src/app/modules/core/interceptors/interceptor.service.ts:12",{"_index":642,"title":{},"body":{"injectables/InterceptorService.html":{}}}],["src/app/modules/core/interceptors/interceptor.service.ts:24",{"_index":644,"title":{},"body":{"injectables/InterceptorService.html":{}}}],["src/app/modules/core/services/http",{"_index":501,"title":{},"body":{"injectables/HttpCacheService.html":{},"coverage.html":{}}}],["src/app/modules/shared/components/pop",{"_index":770,"title":{},"body":{"components/PopUpComponent.html":{},"coverage.html":{}}}],["src/app/modules/shared/directives/compare.directive",{"_index":846,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/shared/directives/compare.directive.ts",{"_index":337,"title":{},"body":{"directives/CompareDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/shared/directives/unique",{"_index":848,"title":{},"body":{"components/RegisterComponent.html":{},"directives/UniqueEmailDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/shared/pipes/search.pipe.ts",{"_index":976,"title":{},"body":{"pipes/SearchPipe.html":{},"coverage.html":{}}}],["src/app/modules/shared/pipes/search.pipe.ts:18",{"_index":981,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["src/app/modules/shared/shared.module.ts",{"_index":992,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/modules/users/components/login/login.component.ts",{"_index":672,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/modules/users/components/login/login.component.ts:16",{"_index":677,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/users/components/login/login.component.ts:27",{"_index":683,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/users/components/login/login.component.ts:34",{"_index":681,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/users/components/login/login.component.ts:38",{"_index":684,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/users/components/login/login.component.ts:42",{"_index":685,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/users/components/login/login.component.ts:46",{"_index":678,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/users/components/membership/membership.component.ts",{"_index":730,"title":{},"body":{"components/MembershipComponent.html":{},"coverage.html":{}}}],["src/app/modules/users/components/membership/membership.component.ts:18",{"_index":738,"title":{},"body":{"components/MembershipComponent.html":{}}}],["src/app/modules/users/components/membership/membership.component.ts:29",{"_index":748,"title":{},"body":{"components/MembershipComponent.html":{}}}],["src/app/modules/users/components/membership/membership.component.ts:40",{"_index":745,"title":{},"body":{"components/MembershipComponent.html":{}}}],["src/app/modules/users/components/membership/membership.component.ts:56",{"_index":743,"title":{},"body":{"components/MembershipComponent.html":{}}}],["src/app/modules/users/components/membership/membership.component.ts:65",{"_index":739,"title":{},"body":{"components/MembershipComponent.html":{}}}],["src/app/modules/users/components/register/register.component.ts",{"_index":820,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/modules/users/components/register/register.component.ts:108",{"_index":828,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/users/components/register/register.component.ts:141",{"_index":838,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/users/components/register/register.component.ts:26",{"_index":843,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/users/components/register/register.component.ts:30",{"_index":840,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/users/components/register/register.component.ts:34",{"_index":842,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/users/components/register/register.component.ts:38",{"_index":826,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/users/components/user",{"_index":1019,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["src/app/modules/users/models/user.ts",{"_index":656,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/modules/users/services/http",{"_index":525,"title":{},"body":{"injectables/HttpUserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/users/services/user.service",{"_index":750,"title":{},"body":{"components/MembershipComponent.html":{},"components/RoomBookingComponent.html":{}}}],["src/app/modules/users/services/user.service.ts",{"_index":1108,"title":{},"body":{"interfaces/UserService.html":{},"coverage.html":{}}}],["src/app/modules/users/services/user.service.ts:10",{"_index":1115,"title":{},"body":{"interfaces/UserService.html":{}}}],["src/app/modules/users/services/user.service.ts:12",{"_index":1117,"title":{},"body":{"interfaces/UserService.html":{}}}],["src/app/modules/users/services/user.service.ts:14",{"_index":1114,"title":{},"body":{"interfaces/UserService.html":{}}}],["src/app/modules/users/services/user.service.ts:16",{"_index":1113,"title":{},"body":{"interfaces/UserService.html":{}}}],["src/app/modules/users/services/user.service.ts:18",{"_index":1116,"title":{},"body":{"interfaces/UserService.html":{}}}],["src/app/modules/users/services/user.service.ts:20",{"_index":1110,"title":{},"body":{"interfaces/UserService.html":{}}}],["src/app/modules/users/services/user.service.ts:22",{"_index":1111,"title":{},"body":{"interfaces/UserService.html":{}}}],["src/app/modules/users/services/user.service.ts:24",{"_index":1112,"title":{},"body":{"interfaces/UserService.html":{}}}],["src/app/modules/users/users.module.ts",{"_index":1129,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/environments/environment",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":1169,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1170,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1171,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["staged",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["started",{"_index":53,"title":{"index.html":{}},"body":{"components/AppComponent.html":{}}}],["state",{"_index":198,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":550,"title":{},"body":{"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["status?:string",{"_index":690,"title":{},"body":{"components/LoginComponent.html":{}}}],["statusstyle",{"_index":675,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["statusstyle='text",{"_index":851,"title":{},"body":{"components/RegisterComponent.html":{}}}],["statusstyle?:string",{"_index":691,"title":{},"body":{"components/LoginComponent.html":{}}}],["stay",{"_index":1097,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["storage",{"_index":539,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["stored",{"_index":1227,"title":{},"body":{"index.html":{}}}],["storing",{"_index":513,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["string",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"directives/CompareDirective.html":{},"components/HeaderComponent.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["styleurls:['./user",{"_index":1060,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["subject",{"_index":564,"title":{},"body":{"injectables/HttpUserService.html":{},"interfaces/UserService.html":{}}}],["subsciption",{"_index":933,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["subscribe",{"_index":694,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe((details",{"_index":958,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["subscribe((x",{"_index":967,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["subscribe(details=>this.updateuserstatus(details",{"_index":759,"title":{},"body":{"components/MembershipComponent.html":{}}}],["subscribes",{"_index":680,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscription",{"_index":944,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["success",{"_index":701,"title":{},"body":{"components/LoginComponent.html":{}}}],["successful",{"_index":836,"title":{},"body":{"components/RegisterComponent.html":{}}}],["support",{"_index":1249,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1185,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["table",{"_index":1175,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1174,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":321,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["taken",{"_index":571,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["takes",{"_index":829,"title":{},"body":{"components/RegisterComponent.html":{}}}],["tap",{"_index":305,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"components/RegisterComponent.html":{}}}],["tap((response:any)=>console.log('response',response",{"_index":882,"title":{},"body":{"components/RegisterComponent.html":{}}}],["tap(result",{"_index":331,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["templateurl:\"./user",{"_index":1059,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["test",{"_index":1233,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1242,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["tests",{"_index":1232,"title":{},"body":{"index.html":{}}}],["text",{"_index":398,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{}}}],["this.activatedroute.params.subscribe(params",{"_index":1063,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.booking.userid",{"_index":963,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["this.bookingid",{"_index":1077,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.bookingid=id",{"_index":1079,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.bookingservice",{"_index":965,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["this.bookingservice.cancelbooking(this.bookingid).subscribe",{"_index":1082,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.bookingservice.updatebooking(this.updatebooking,this.bookingid).subscribe(x",{"_index":1089,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.cacheservice.get(req.url",{"_index":320,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.cacheservice.invalidatecache",{"_index":313,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.cacheservice.put(req.url",{"_index":335,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.done.emit(response",{"_index":814,"title":{},"body":{"components/PopUpComponent.html":{}}}],["this.edit",{"_index":1078,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.form.value",{"_index":879,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.form=this.builder.group",{"_index":865,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.handledone(false",{"_index":819,"title":{},"body":{"components/PopUpComponent.html":{}}}],["this.handledone(true",{"_index":818,"title":{},"body":{"components/PopUpComponent.html":{}}}],["this.http.get(baseurl+'/'+email",{"_index":604,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["this.http.get(url",{"_index":495,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["this.http.post(baseurl",{"_index":624,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["this.id",{"_index":1064,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.loggedinuser",{"_index":606,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["this.loggedinuser.token",{"_index":609,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["this.loggedinuser=user",{"_index":611,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["this.loggedinuserannouncement",{"_index":637,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["this.loggedinuserannouncement.next(user",{"_index":612,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["this.logger.error('error",{"_index":704,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logger.info(\"application",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["this.logger.info(\"entering",{"_index":961,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["this.logger.info(\"home",{"_index":447,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.logger.info('entering",{"_index":494,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["this.logger.trace(\"booking",{"_index":969,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["this.logger.trace('entering",{"_index":603,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["this.logger.trace('inside",{"_index":622,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["this.logger.warn('form",{"_index":877,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.requests",{"_index":524,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["this.requests[url",{"_index":520,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["this.router.navigate(['/user/login",{"_index":232,"title":{},"body":{"guards/AuthGuard.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate(['home",{"_index":702,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['user/login",{"_index":763,"title":{},"body":{"components/MembershipComponent.html":{}}}],["this.router.navigate(['user/profile',this.user.email",{"_index":972,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["this.showpopup",{"_index":1073,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.status='please",{"_index":711,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.status=`error",{"_index":708,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.status=`welcome",{"_index":698,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.statusstyle='text",{"_index":700,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.subsciption",{"_index":957,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["this.subsciption.unsubscribe",{"_index":960,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["this.updatebooking.userid",{"_index":1087,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.updatecurrentuser",{"_index":639,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["this.updatecurrentuser(info",{"_index":623,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["this.updatecurrentuser(user",{"_index":601,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["this.updateuserstatus(details",{"_index":959,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["this.updatevisible=true",{"_index":1071,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.user",{"_index":878,"title":{},"body":{"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.user!.email",{"_index":1088,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.user.email",{"_index":964,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["this.user=details.user",{"_index":754,"title":{},"body":{"components/MembershipComponent.html":{}}}],["this.user=undefined",{"_index":755,"title":{},"body":{"components/MembershipComponent.html":{}}}],["this.userbookings=this.user.userbookings",{"_index":1068,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.userservice",{"_index":692,"title":{},"body":{"components/LoginComponent.html":{},"components/RoomBookingComponent.html":{}}}],["this.userservice.getauthenticationheader",{"_index":651,"title":{},"body":{"injectables/InterceptorService.html":{}}}],["this.userservice.getloggedinuser",{"_index":758,"title":{},"body":{"components/MembershipComponent.html":{},"components/RoomBookingComponent.html":{}}}],["this.userservice.getuserbyemail(this.id).subscribe(user",{"_index":1066,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.userservice.getuserstatusannouncement().unsubscribe",{"_index":760,"title":{},"body":{"components/MembershipComponent.html":{}}}],["this.userservice.logout",{"_index":762,"title":{},"body":{"components/MembershipComponent.html":{}}}],["this.visible",{"_index":1070,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.visible=false",{"_index":816,"title":{},"body":{"components/PopUpComponent.html":{}}}],["this.visiblechange.emit(false",{"_index":817,"title":{},"body":{"components/PopUpComponent.html":{}}}],["throwerror",{"_index":590,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["throws",{"_index":546,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["title",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/PopUpComponent.html":{}}}],["title:string=\"pop",{"_index":807,"title":{},"body":{"components/PopUpComponent.html":{}}}],["title:string='hotelmanagement",{"_index":437,"title":{},"body":{"components/HeaderComponent.html":{}}}],["token",{"_index":551,"title":{},"body":{"injectables/HttpUserService.html":{},"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["token:\"asdfghjkl",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token:\"qwertyui",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token:string",{"_index":671,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["top",{"_index":415,"title":{},"body":{"components/FooterComponent.html":{}}}],["top:1",{"_index":394,"title":{},"body":{"components/FooterComponent.html":{}}}],["top:90px",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["transform",{"_index":978,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["transform(bookings",{"_index":979,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["true",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"directives/CompareDirective.html":{},"components/PopUpComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["trying",{"_index":705,"title":{},"body":{"components/LoginComponent.html":{}}}],["tslib",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":645,"title":{},"body":{"injectables/InterceptorService.html":{}}}],["type",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"directives/UniqueEmailDirective.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type\":\"application/json",{"_index":626,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["undefined",{"_index":553,"title":{},"body":{"injectables/HttpUserService.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/UserService.html":{}}}],["unique",{"_index":997,"title":{},"body":{"directives/UniqueEmailDirective.html":{}}}],["uniqueemail",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{}}}],["uniqueemail:{message:`duplicate",{"_index":1016,"title":{},"body":{"directives/UniqueEmailDirective.html":{},"miscellaneous/variables.html":{}}}],["uniqueemaildirective",{"_index":95,"title":{"directives/UniqueEmailDirective.html":{}},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["uniqueemailvalidator",{"_index":847,"title":{},"body":{"components/RegisterComponent.html":{},"directives/UniqueEmailDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uniqueemailvalidator(this.userservice",{"_index":867,"title":{},"body":{"components/RegisterComponent.html":{}}}],["uniqueemailvalidator(this.userservice)(control",{"_index":1009,"title":{},"body":{"directives/UniqueEmailDirective.html":{}}}],["unit",{"_index":1231,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["unknown",{"_index":986,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["unsubscribe",{"_index":744,"title":{},"body":{"components/MembershipComponent.html":{},"components/RoomBookingComponent.html":{}}}],["up",{"_index":774,"title":{},"body":{"components/PopUpComponent.html":{},"components/UserProfileComponent.html":{}}}],["up'},{'name",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["up.component",{"_index":994,"title":{},"body":{"modules/SharedModule.html":{}}}],["up.component.css",{"_index":775,"title":{},"body":{"components/PopUpComponent.html":{}}}],["up.component.html",{"_index":776,"title":{},"body":{"components/PopUpComponent.html":{}}}],["up.component.ts",{"_index":772,"title":{},"body":{"components/PopUpComponent.html":{},"coverage.html":{}}}],["up.component.ts:11",{"_index":787,"title":{},"body":{"components/PopUpComponent.html":{}}}],["up.component.ts:16",{"_index":806,"title":{},"body":{"components/PopUpComponent.html":{}}}],["up.component.ts:22",{"_index":793,"title":{},"body":{"components/PopUpComponent.html":{}}}],["up.component.ts:23",{"_index":791,"title":{},"body":{"components/PopUpComponent.html":{}}}],["up.component.ts:24",{"_index":789,"title":{},"body":{"components/PopUpComponent.html":{}}}],["up.component.ts:25",{"_index":792,"title":{},"body":{"components/PopUpComponent.html":{}}}],["up.component.ts:30",{"_index":794,"title":{},"body":{"components/PopUpComponent.html":{}}}],["up.component.ts:31",{"_index":798,"title":{},"body":{"components/PopUpComponent.html":{}}}],["up.component.ts:36",{"_index":797,"title":{},"body":{"components/PopUpComponent.html":{}}}],["up.component.ts:42",{"_index":802,"title":{},"body":{"components/PopUpComponent.html":{}}}],["up.component.ts:53",{"_index":800,"title":{},"body":{"components/PopUpComponent.html":{}}}],["up.component.ts:60",{"_index":799,"title":{},"body":{"components/PopUpComponent.html":{}}}],["up/pop",{"_index":771,"title":{},"body":{"components/PopUpComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["update",{"_index":583,"title":{},"body":{"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{}}}],["updatebooking",{"_index":272,"title":{},"body":{"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{},"components/UserProfileComponent.html":{}}}],["updatebooking(booking",{"_index":280,"title":{},"body":{"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{}}}],["updatebooking(booking:bookingdetails,id:number",{"_index":283,"title":{},"body":{"interfaces/BookingService.html":{}}}],["updatebooking:bookingdetails",{"_index":1085,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updatebookings",{"_index":1027,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updatebookings(confirmation",{"_index":1044,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updatebookings(confirmation:boolean",{"_index":1086,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updatecurrentuser",{"_index":537,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["updatecurrentuser(user",{"_index":581,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["updatecurrentuser(user?:loggedindetails",{"_index":610,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["updated",{"_index":1090,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updates",{"_index":572,"title":{},"body":{"injectables/HttpUserService.html":{},"components/RoomBookingComponent.html":{}}}],["updateuserstatus",{"_index":737,"title":{},"body":{"components/MembershipComponent.html":{},"components/RoomBookingComponent.html":{}}}],["updateuserstatus(details",{"_index":747,"title":{},"body":{"components/MembershipComponent.html":{},"components/RoomBookingComponent.html":{}}}],["updateuserstatus(details:any",{"_index":752,"title":{},"body":{"components/MembershipComponent.html":{}}}],["updatevisible",{"_index":1023,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updatevisible:boolean=false",{"_index":1069,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updating",{"_index":488,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["upon",{"_index":835,"title":{},"body":{"components/RegisterComponent.html":{}}}],["url",{"_index":318,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["urltree",{"_index":214,"title":{},"body":{"guards/AuthGuard.html":{}}}],["usage",{"_index":422,"title":{},"body":{"components/GalleryComponent.html":{}}}],["use",{"_index":1223,"title":{},"body":{"index.html":{}}}],["used",{"_index":687,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["useexisting",{"_index":340,"title":{},"body":{"directives/CompareDirective.html":{},"directives/UniqueEmailDirective.html":{}}}],["useexisting:comparedirective",{"_index":348,"title":{},"body":{"directives/CompareDirective.html":{}}}],["user",{"_index":90,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpUserService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user!.aadhaarid",{"_index":1095,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user!.email",{"_index":1093,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user!.name",{"_index":1092,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user!.phonenumber",{"_index":1094,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user,{headers",{"_index":625,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["user.name",{"_index":699,"title":{},"body":{"components/LoginComponent.html":{}}}],["user.service",{"_index":592,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["user:user",{"_index":670,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["user=info.user",{"_index":696,"title":{},"body":{"components/LoginComponent.html":{}}}],["user?:any",{"_index":751,"title":{},"body":{"components/MembershipComponent.html":{}}}],["user?:user",{"_index":850,"title":{},"body":{"components/RegisterComponent.html":{}}}],["user?user.name:'guest",{"_index":764,"title":{},"body":{"components/MembershipComponent.html":{}}}],["user?user.name:\\'guest",{"_index":769,"title":{},"body":{"components/MembershipComponent.html":{}}}],["userbookings",{"_index":667,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["userbookings?:any",{"_index":669,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["userbookings?:booking",{"_index":1062,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["userid",{"_index":243,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["userid:string",{"_index":247,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{}}}],["userprofilecomponent",{"_index":89,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":548,"title":{},"body":{"injectables/HttpUserService.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["users/services/user.service",{"_index":218,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/HttpBookingService.html":{},"injectables/InterceptorService.html":{},"directives/UniqueEmailDirective.html":{}}}],["users/users.module",{"_index":263,"title":{},"body":{"modules/BookingModule.html":{},"modules/CoreModule.html":{}}}],["userservice",{"_index":193,"title":{"interfaces/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice:userservice",{"_index":222,"title":{},"body":{"guards/AuthGuard.html":{},"components/RegisterComponent.html":{}}}],["usersmodule",{"_index":257,"title":{"modules/UsersModule.html":{}},"body":{"modules/BookingModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["v1",{"_index":362,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["v2",{"_index":364,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["validate",{"_index":567,"title":{},"body":{"injectables/HttpUserService.html":{},"directives/UniqueEmailDirective.html":{}}}],["validate(control",{"_index":1005,"title":{},"body":{"directives/UniqueEmailDirective.html":{}}}],["validationerrors",{"_index":344,"title":{},"body":{"directives/CompareDirective.html":{},"directives/UniqueEmailDirective.html":{}}}],["validator",{"_index":345,"title":{},"body":{"directives/CompareDirective.html":{},"components/RegisterComponent.html":{},"directives/UniqueEmailDirective.html":{}}}],["validatorfn",{"_index":346,"title":{},"body":{"directives/CompareDirective.html":{}}}],["validators",{"_index":844,"title":{},"body":{"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{}}}],["validators.email",{"_index":866,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.maxlength(10",{"_index":859,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.maxlength(12",{"_index":863,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.maxlength(15",{"_index":856,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(10",{"_index":858,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(12",{"_index":862,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(4",{"_index":855,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":854,"title":{},"body":{"components/RegisterComponent.html":{}}}],["value",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":830,"title":{},"body":{"components/RegisterComponent.html":{}}}],["var",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"directives/CompareDirective.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":510,"title":{},"body":{"injectables/HttpCacheService.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1259,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1208,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1235,"title":{},"body":{"index.html":{}}}],["visibility",{"_index":805,"title":{},"body":{"components/PopUpComponent.html":{},"components/UserProfileComponent.html":{}}}],["visible",{"_index":783,"title":{},"body":{"components/PopUpComponent.html":{},"components/UserProfileComponent.html":{}}}],["visible:boolean",{"_index":811,"title":{},"body":{"components/PopUpComponent.html":{}}}],["visiblechange",{"_index":786,"title":{},"body":{"components/PopUpComponent.html":{}}}],["void",{"_index":390,"title":{},"body":{"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{}}}],["w",{"_index":459,"title":{},"body":{"components/HomeComponent.html":{}}}],["wait",{"_index":712,"title":{},"body":{"components/LoginComponent.html":{}}}],["way",{"_index":204,"title":{},"body":{"guards/AuthGuard.html":{}}}],["width",{"_index":405,"title":{},"body":{"components/FooterComponent.html":{},"components/MembershipComponent.html":{}}}],["width:250px",{"_index":452,"title":{},"body":{"components/HomeComponent.html":{}}}],["width:auto",{"_index":455,"title":{},"body":{"components/HomeComponent.html":{}}}],["x",{"_index":1091,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["yes",{"_index":585,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["zone.js",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Application component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: NGXLogger)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            constructor of AppComponent with dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'HotelManagement-Client'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:24\n                        \n                    \n\n            \n                \n                    application title\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { LoggerModule, NGXLogger, NgxLoggerLevel } from 'ngx-logger';\n\n/**\n * Application component\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  /**\n   * constructor of AppComponent with dependency injection\n   * @param logger \n   */\n  constructor(private logger: NGXLogger)\n  {\n    this.logger.info(\"Application started\");\n  }\n  /**\n   * application title\n   */\n  title = 'HotelManagement-Client';\n \n}\n\n    \n\n    \n        \n\n\n\n\n    \n\n\n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .main-content{\n\n\n    margin:10px;\n\n    margin-top:90px;\n\n    padding-bottom: 50px;\n\n\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'footer'},{'name': 'GalleryComponent', 'selector': 'gallery'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'MembershipComponent', 'selector': 'membership'},{'name': 'PopUpComponent', 'selector': 'pop-up'},{'name': 'RegisterComponent', 'selector': 'register'},{'name': 'RoomBookingComponent', 'selector': 'room-booking'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [{'name': 'CompareDirective', 'selector': '[compareTo]'},{'name': 'UniqueEmailDirective', 'selector': '[uniqueEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nBookingModule\n\nBookingModule\n\nAppModule -->\n\nBookingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nCacheInterceptor\n\nCacheInterceptor\n\nAppModule -->\n\nCacheInterceptor->AppModule\n\n\n\n\n\nHttpCacheService\n\nHttpCacheService\n\nAppModule -->\n\nHttpCacheService->AppModule\n\n\n\n\n\nInterceptorService\n\nInterceptorService\n\nAppModule -->\n\nInterceptorService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            CacheInterceptor\n                        \n                        \n                            HttpCacheService\n                        \n                        \n                            InterceptorService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            BookingModule\n                        \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpUserService } from './modules/users/services/http-user-service';\nimport { CoreModule } from './modules/core/core.module';\nimport { HttpBookingService } from './modules/booking/services/http-booking-service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {BookingModule } from './modules/booking/booking.module'\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { InterceptorService } from './modules/core/interceptors/interceptor.service';\nimport { LoggerModule, NgxLoggerLevel } from 'ngx-logger';\nimport { HttpCacheService } from './modules/core/services/http-cache.service';\nimport { CacheInterceptor } from './modules/core/interceptors/cache-interceptor.service';\nimport { environment } from 'src/environments/environment';\n@NgModule({\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CoreModule ,\n    FormsModule,\n    ReactiveFormsModule,\n    BookingModule,\n    LoggerModule.forRoot(environment.logging) \n  ],\n  declarations: [\n    AppComponent,\n],\n  providers: [\n    {provide:\"UserService\",useClass:HttpUserService},\n    {provide:\"BookingService\",useClass:HttpBookingService},\n    {provide: HTTP_INTERCEPTORS,useClass:InterceptorService,multi: true},\n    {provide:HTTP_INTERCEPTORS,useClass:CacheInterceptor,multi:true},\n    HttpCacheService\n\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        \nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GalleryComponent } from './modules/booking/components/gallery/gallery.component';\nimport { RoomBookingComponent } from './modules/booking/components/room-booking/room-booking.component';\n\nimport { HomeComponent } from './modules/core/components/home/home.component';\nimport { AuthGuard } from './modules/core/guards/auth.guard';\n\nimport { LoginComponent } from './modules/users/components/login/login.component';\nimport { RegisterComponent } from './modules/users/components/register/register.component';\nimport { UserProfileComponent } from './modules/users/components/user-profile/user-profile.component';\n\nconst routes: Routes = [\n  {path:\"user/register\",component:RegisterComponent},\n  {path:\"user/login\",component:LoginComponent},\n  {path:\"\",component:HomeComponent},\n  {path:\"booking/gallery\",component:GalleryComponent},\n\n  {path:'home',component:HomeComponent},\n  {path:'booking', canActivate:[AuthGuard],component:RoomBookingComponent},\n  {path:'user/profile/:id',canActivate:[AuthGuard],component:UserProfileComponent}\n\n]\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers:[AuthGuard]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/core/guards/auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Authguard class implementing CanActivate Interface\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/core/guards/auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            constructor of Authguard with dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/core/guards/auth.guard.ts:31\n                \n            \n\n\n            \n                \n                    Activate allows the guard to decide if a way can be activated with the “CanActivate ()” method or not.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        canActivate to “create” and “edit” routes\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Inject, Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../../users/services/user.service';\n\n/**\n * Authguard class implementing CanActivate Interface\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  /**\n   * constructor of Authguard with dependency injection\n   * @param userService \n   * @param router \n   */\n  constructor( @Inject(\"UserService\")private userService:UserService,\n     private router:Router,\n    )\n  {\n\n  }\n  /**\n   * Activate allows the guard to decide if a way can be activated with the “CanActivate ()” method or not.\n   * @param route canActivate to “create” and “edit” routes\n   * @param state \n   * @returns \n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n  \n    console.log(\"guard activated\");\n\n      if(this.userService.getLoggedInUser()){\n        return true;\n      }else{\n        alert(\"you need to login first\");\n        this.router.navigate(['/user/login']);\n\n        return false;\n      }\n\n  \n  }\n  \n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Booking.html":{"url":"interfaces/Booking.html","title":"interface - Booking","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Booking\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/booking/models/booking.ts\n        \n\n\n            \n                Description\n            \n            \n                Booking interface with necessary fields\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bookingDate\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            numberOfDaysStay\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roomNo\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bookingDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bookingDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    bookingDate property of type string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    id property of type number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfDaysStay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfDaysStay:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    numberOfDaysStay property of type number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    price property of type string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roomNo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roomNo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    room No property of type string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    userId property of type string\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface BookingDetails{\n    /**\n     * userId property of type string\n     */\n    userId:string;\n    /**\n     * numberOfDaysStay property of type number \n     */\n    numberOfDaysStay:number;\n}\n/**\n * Booking interface with necessary fields\n */\nexport interface Booking{\n    /**\n     * id property of type number \n     */\n    id: number;\n    /**\n     * room No property of type string\n     */\n    roomNo?:string;\n    /**\n     * price property of type string\n     */\n    price:string;\n    /**\n     * bookingDate property of type string\n     */\n    bookingDate:string;\n    /**\n     * numberOfDaysStay property of type number \n     */\n    numberOfDaysStay:number;\n    /**\n     * userId property of type string\n     */\n    userId:string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BookingDetails.html":{"url":"interfaces/BookingDetails.html","title":"interface - BookingDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BookingDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/booking/models/booking.ts\n        \n\n\n            \n                Description\n            \n            \n                Booking Details interface with necessary fields\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            numberOfDaysStay\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfDaysStay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfDaysStay:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    numberOfDaysStay property of type number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    userId property of type string\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface BookingDetails{\n    /**\n     * userId property of type string\n     */\n    userId:string;\n    /**\n     * numberOfDaysStay property of type number \n     */\n    numberOfDaysStay:number;\n}\n/**\n * Booking interface with necessary fields\n */\nexport interface Booking{\n    /**\n     * id property of type number \n     */\n    id: number;\n    /**\n     * room No property of type string\n     */\n    roomNo?:string;\n    /**\n     * price property of type string\n     */\n    price:string;\n    /**\n     * bookingDate property of type string\n     */\n    bookingDate:string;\n    /**\n     * numberOfDaysStay property of type number \n     */\n    numberOfDaysStay:number;\n    /**\n     * userId property of type string\n     */\n    userId:string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BookingModule.html":{"url":"modules/BookingModule.html","title":"module - BookingModule","body":"\n                   \n\n\n\n\n    Modules\n    BookingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BookingModule\n\n\n\ncluster_BookingModule_declarations\n\n\n\ncluster_BookingModule_exports\n\n\n\ncluster_BookingModule_imports\n\n\n\n\nGalleryComponent\n\nGalleryComponent\n\n\n\nBookingModule\n\nBookingModule\n\nBookingModule -->\n\nGalleryComponent->BookingModule\n\n\n\n\n\nRoomBookingComponent\n\nRoomBookingComponent\n\nBookingModule -->\n\nRoomBookingComponent->BookingModule\n\n\n\n\n\nGalleryComponent \n\nGalleryComponent \n\nGalleryComponent  -->\n\nBookingModule->GalleryComponent \n\n\n\n\n\nRoomBookingComponent \n\nRoomBookingComponent \n\nRoomBookingComponent  -->\n\nBookingModule->RoomBookingComponent \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nBookingModule -->\n\nUsersModule->BookingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/booking/booking.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GalleryComponent\n                        \n                        \n                            RoomBookingComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GalleryComponent\n                        \n                        \n                            RoomBookingComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RoomBookingComponent } from './components/room-booking/room-booking.component';\nimport { GalleryComponent } from './components/gallery/gallery.component';\nimport { UsersModule } from '../users/users.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    UsersModule,\n    ReactiveFormsModule,\n    RouterModule,\n    FormsModule\n  ],\n  declarations: [\n    RoomBookingComponent,\n    GalleryComponent\n  ],\n  exports:[\n   GalleryComponent ,\n   RoomBookingComponent\n  ]\n})\nexport class BookingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BookingService.html":{"url":"interfaces/BookingService.html","title":"interface - BookingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BookingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/booking/services/booking.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface with booking related CRUD methods\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        addBooking\n                                    \n                                \n                                \n                                    \n                                        cancelBooking\n                                    \n                                \n                                \n                                    \n                                        getAllBookings\n                                    \n                                \n                                \n                                    \n                                        getBookingById\n                                    \n                                \n                                \n                                    \n                                        updateBooking\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addBooking\n                        \n                    \n                \n            \n            \n                \naddBooking(booking: BookingDetails)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/booking/services/booking.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    booking\n                                    \n                                                BookingDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancelBooking\n                        \n                    \n                \n            \n            \n                \ncancelBooking(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/booking/services/booking.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllBookings\n                        \n                    \n                \n            \n            \n                \ngetAllBookings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/booking/services/booking.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBookingById\n                        \n                    \n                \n            \n            \n                \ngetBookingById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/booking/services/booking.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBooking\n                        \n                    \n                \n            \n            \n                \nupdateBooking(booking: BookingDetails, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/booking/services/booking.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    booking\n                                    \n                                                BookingDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\nimport { Booking, BookingDetails } from \"../models/booking\";\n\n/**\n * Interface with booking related CRUD methods \n */\nexport interface BookingService\n{\n    getAllBookings(): Observable;\n\n    getBookingById(id: number): Observable;\n\n    addBooking(booking: BookingDetails): Observable;\n   \n    cancelBooking(id: number): Observable;\n   \n    updateBooking(booking:BookingDetails,id:number): Observable;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/CacheInterceptor.html":{"url":"interceptors/CacheInterceptor.html","title":"interceptor - CacheInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  CacheInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/core/interceptors/cache-interceptor.service.ts\n        \n\n\n            \n                Description\n            \n            \n                CacheInterceptor service\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cacheService: HttpCacheService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/core/interceptors/cache-interceptor.service.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor with dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        HttpCacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/core/interceptors/cache-interceptor.service.ts:25\n                \n            \n\n\n            \n                \n                    check each request from browser\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        Observable of Event\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of, tap } from 'rxjs';\nimport { HttpCacheService } from '../services/http-cache.service';\n\n/**\n * CacheInterceptor service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CacheInterceptor implements HttpInterceptor {\n\n  /**\n   * Constructor with dependency injection\n   * @param cacheService \n   */\n  constructor(private cacheService:HttpCacheService){}\n  /**\n   * check each request from browser\n   * @param req \n   * @param next \n   * @returns Observable of Event\n   */\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    if(req.method !== 'GET')\n    {\n      console.log(`Invalidating cache : ${req.method} ${req.url}`);\n      this.cacheService.invalidateCache();\n      return next.handle(req);\n    }\n    /**\n     * Retrieving cached response for the request url\n     */\n    const cachedResponse: HttpResponse = this.cacheService.get(req.url);\n    /**\n     * If cache has response then take cached response \n     */\n    if(cachedResponse)\n    {\n      console.log(`Returning from cache : ${cachedResponse.url}`);\n      console.log(cachedResponse);\n      return of(cachedResponse);\n    }\n    /**\n     * send request to the server and save the response in cache\n     */\n    return next.handle(req)\n      .pipe(\n        tap(result =>{\n          if(result instanceof HttpResponse)\n          {\n            console.log(`Adding response to cache: ${req.url}`);\n            this.cacheService.put(req.url, result);\n          }\n        })\n      );\n    \n  }\n\n     \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/CompareDirective.html":{"url":"directives/CompareDirective.html","title":"directive - CompareDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  CompareDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/shared/directives/compare.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Compare directive\n\n            \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                {\n    provide: NG_VALIDATORS, useExisting: CompareDirective, multi: true\n}\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [compareTo]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn } \nfrom '@angular/forms';\n\n/**\n * Compare directive\n */\n@Directive({\n  selector: '[compareTo]',\n  providers:[\n    {\n      provide:NG_VALIDATORS,\n      useExisting:CompareDirective,\n      multi:true\n    }\n  ]\n})\nexport class CompareDirective  {\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n \n\n}\n/**\n * compare method which can be exported\n * @param {string} password \n * @param {string} confirmPassword \n * @returns Validator function\n */\nexport const compare = (password:string, confirmPassword:string):ValidatorFn =>{\n\n  return control =>{\n    var c1 = control.get(password);\n    var c2 = control.get(confirmPassword);\n    var v1 = c1!.value;\n    var v2 = c2!.value;\n\n    if(v1 === v2)\n      return null;\n    else\n      return {compare:{message:`The fields ${password} and ${confirmPassword} don't match`}};\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nFooterComponent->CoreModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nCoreModule -->\n\nHeaderComponent->CoreModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nCoreModule -->\n\nHomeComponent->CoreModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nCoreModule->FooterComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nCoreModule->HeaderComponent \n\n\n\n\n\nHomeComponent \n\nHomeComponent \n\nHomeComponent  -->\n\nCoreModule->HomeComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nCoreModule -->\n\nSharedModule->CoreModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nCoreModule -->\n\nUsersModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            HomeComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\n\nimport { HomeComponent } from './components/home/home.component';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { UsersModule } from '../users/users.module';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  declarations: [\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    UsersModule,\n    RouterModule\n  \n  ],\n  exports:[\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n  ]\n})\nexport class CoreModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/core/components/footer/footer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Footer Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                footer\n            \n\n            \n                styleUrls\n                ./footer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/core/components/footer/footer.component.ts:11\n                            \n                        \n\n                \n                    \n                            constructor\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/core/components/footer/footer.component.ts:21\n                \n            \n\n\n            \n                \n                    Initialization method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Footer Component\n */\n@Component({\n  selector: 'footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  /**\n   * constructor\n   */\n\n  constructor() { }\n  /**\n   * Initialization method\n   */\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        @Awesomehotel.com\n\n    \n\n    \n                \n                    ./footer.component.css\n                \n                p{\n    border-top:1 px solid gray;\n    text-align: center;\n    position: fixed;\n    height: 50px;\n    bottom: 0;\n    width: 100%;\n    color:white;\n    box-shadow: -5px 0px 5px gray;\n    background-color: black;\n    margin-top: 50px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@Awesomehotel.com'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'footer'},{'name': 'GalleryComponent', 'selector': 'gallery'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'MembershipComponent', 'selector': 'membership'},{'name': 'PopUpComponent', 'selector': 'pop-up'},{'name': 'RegisterComponent', 'selector': 'register'},{'name': 'RoomBookingComponent', 'selector': 'room-booking'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [{'name': 'CompareDirective', 'selector': '[compareTo]'},{'name': 'UniqueEmailDirective', 'selector': '[uniqueEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GalleryComponent.html":{"url":"components/GalleryComponent.html","title":"component - GalleryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GalleryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/booking/components/gallery/gallery.component.ts\n\n\n\n    \n        Description\n    \n    \n        Gallery component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                gallery\n            \n\n            \n                styleUrls\n                ./gallery.component.css\n            \n\n\n\n            \n                templateUrl\n                ./gallery.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Gallery component\n */\n@Component({\n  selector: 'gallery',\n  templateUrl: './gallery.component.html',\n  styleUrls: ['./gallery.component.css']\n})\nexport class GalleryComponent implements OnInit {\n  /**\n  * Example of usage:\n  * http://localhost:4200/booking/gallery\n  * \n  */\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n      \n  \n      \n    \n  \n    \n      \n  \n      \n    \n  \n    \n      \n  \n      \n    \n\n  \n\n\n\n\n\n    \n\n    \n                \n                    ./gallery.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'footer'},{'name': 'GalleryComponent', 'selector': 'gallery'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'MembershipComponent', 'selector': 'membership'},{'name': 'PopUpComponent', 'selector': 'pop-up'},{'name': 'RegisterComponent', 'selector': 'register'},{'name': 'RoomBookingComponent', 'selector': 'room-booking'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [{'name': 'CompareDirective', 'selector': '[compareTo]'},{'name': 'UniqueEmailDirective', 'selector': '[uniqueEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'GalleryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/core/components/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        Header component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                header\n            \n\n            \n                styleUrls\n                ./header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/core/components/header/header.component.ts:16\n                            \n                        \n\n                \n                    \n                            constructor\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'HotelManagement-Client'\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/core/components/header/header.component.ts:16\n                            \n                        \n                \n                    \n                        title input property\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/core/components/header/header.component.ts:25\n                \n            \n\n\n            \n                \n                    Initialization method angular life cycle hook\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\n/**\n * Header component\n */\n@Component({\n  selector: 'header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  /**\n   * title input property\n   */\n  @Input() title:string='HotelManagement-Client';\n  \n  /**\n   * constructor\n   */\n  constructor() { }\n  /**\n   * Initialization method angular life cycle hook\n   */\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n      {{title}}\n      \n        \n      \n      \n        \n          \n             Gallery\n          \n          \n            Booking's\n          \n          \n        \n        \n\n      \n   \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./header.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{title}}                                                         Gallery                                Booking\\'s                                                     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'footer'},{'name': 'GalleryComponent', 'selector': 'gallery'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'MembershipComponent', 'selector': 'membership'},{'name': 'PopUpComponent', 'selector': 'pop-up'},{'name': 'RegisterComponent', 'selector': 'register'},{'name': 'RoomBookingComponent', 'selector': 'room-booking'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [{'name': 'CompareDirective', 'selector': '[compareTo]'},{'name': 'UniqueEmailDirective', 'selector': '[uniqueEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/core/components/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        HomeComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: NGXLogger)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/core/components/home/home.component.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor with logger dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/core/components/home/home.component.ts:25\n                \n            \n\n\n            \n                \n                    Initialization method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { LoggerModule, NGXLogger } from 'ngx-logger';\n\n/**\n * HomeComponent\n */\n@Component({\n  selector: 'home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  /**\n   * Constructor with logger dependency injection\n   * @param logger \n   */\n  constructor(private logger:NGXLogger) { \n    this.logger.info(\"Home component created\")\n  }\n\n  /**\n   * Initialization method\n   */\n  ngOnInit(): void {\n \n  }\n\n}\n\n    \n\n    \n        \n\n    \n      \n        \n       \n    \n      \n        \n        \n    \n       \n        \n         \n    \n    \n   \n  \n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                \n\nbody {\n    background-color: burlywood;\n}\nimg{\n    width:250px;\n}\n\n.carousel-inner\n{\n    width:auto;\n    height: 500px;\n}\n\n.d-block w-100\n{\n height:100px;\n}\n.carousel-caption{\n    padding-bottom: 100px;\n\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'footer'},{'name': 'GalleryComponent', 'selector': 'gallery'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'MembershipComponent', 'selector': 'membership'},{'name': 'PopUpComponent', 'selector': 'pop-up'},{'name': 'RegisterComponent', 'selector': 'register'},{'name': 'RoomBookingComponent', 'selector': 'room-booking'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [{'name': 'CompareDirective', 'selector': '[compareTo]'},{'name': 'UniqueEmailDirective', 'selector': '[uniqueEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpBookingService.html":{"url":"injectables/HttpBookingService.html","title":"injectable - HttpBookingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpBookingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/booking/services/http-booking-service.ts\n        \n\n\n            \n                Description\n            \n            \n                HttpBookingService class registered as a service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addBooking\n                            \n                            \n                                cancelBooking\n                            \n                            \n                                getAllBookings\n                            \n                            \n                                getBookingById\n                            \n                            \n                                updateBooking\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logger: NGXLogger, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/booking/services/http-booking-service.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor with dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addBooking\n                        \n                    \n                \n            \n            \n                \naddBooking(booking: BookingDetails)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/booking/services/http-booking-service.ts:60\n                \n            \n\n\n            \n                \n                    This method sends the http post request to server to add booking details\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    booking\n                                    \n                                                BookingDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Observable of booking\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancelBooking\n                        \n                    \n                \n            \n            \n                \ncancelBooking(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/booking/services/http-booking-service.ts:72\n                \n            \n\n\n            \n                \n                    This method sends http delete request to api server\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        nothing\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllBookings\n                        \n                    \n                \n            \n            \n                \ngetAllBookings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/booking/services/http-booking-service.ts:36\n                \n            \n\n\n            \n                \n                    This method sends the http get request to the api server\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Observable of list of bookings\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBookingById\n                        \n                    \n                \n            \n            \n                \ngetBookingById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/booking/services/http-booking-service.ts:46\n                \n            \n\n\n            \n                \n                    This method sends the http get request for particular id passed\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        booking observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBooking\n                        \n                    \n                \n            \n            \n                \nupdateBooking(booking: BookingDetails, bookingId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/booking/services/http-booking-service.ts:85\n                \n            \n\n\n            \n                \n                    This method sends the http put request to api server for updating booking details\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    booking\n                                    \n                                                BookingDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bookingId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Observable of booking\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { NGXLogger } from \"ngx-logger\";\nimport { from, map, Observable, tap } from \"rxjs\";\nimport { UserService } from \"../../users/services/user.service\";\nimport { Booking, BookingDetails } from \"../models/booking\";\nimport { BookingService } from \"./booking.service\";\n\n/**\n * API url for bookings\n */\nconst url = \"https://localhost:5000/api/bookings\";\n\n/**\n * HttpBookingService class registered as a service \n */\n@Injectable({\n    providedIn:\"root\"    \n})\nexport class HttpBookingService implements BookingService {\n    /**\n     * Constructor with dependency injection\n     * @param http \n     * @param logger \n     * @param userService \n     */\n    constructor(\n        private http: HttpClient, private logger:NGXLogger,\n        @Inject(\"UserService\") private userService: UserService,\n    ){  }\n   \n    /**\n     * This method sends the http get request to the api server \n     * @returns Observable of list of bookings\n     */\n    getAllBookings(): Observable {\n       this.logger.info('Entering into getAllBookings method of booking service');\n        return this.http.get(url);\n    }\n    \n    /**\n     * This method sends the http get request for particular id passed\n     * @param id \n     * @returns booking observable\n     */\n    getBookingById(id: number): Observable {\n        this.logger.info('Entering into getBookingById method of booking service');\n        return this\n                    .http\n                    .get(`${url}/${id}`);\n    }\n\n    \n\n    /**\n     * This method sends the http post request to server to add booking details\n     * @param booking \n     * @returns Observable of booking\n     */\n    addBooking(booking: BookingDetails): Observable {\n        this.logger.info('Entering into addBooking method of booking service');\n        return this\n        .http\n        .post(url,booking);\n    }\n\n    /**\n     * This method sends http delete request to api server\n     * @param id \n     * @returns nothing\n     */\n    cancelBooking(id: number): Observable {\n        this.logger.info('Entering into cancelBooking method of booking service');\n        return this\n        .http\n        .delete(`${url}/${id}`);\n    }\n\n    /**\n     * This method sends the http put request to api server for updating booking details\n     * @param booking \n     * @param bookingId \n     * @returns Observable of booking\n     */\n    updateBooking(booking: BookingDetails , bookingId:number): Observable {\n        this.logger.info('Entering into updateBooking method of booking service');\n        return this\n        .http\n        .put(`${url}/${bookingId}`,booking);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpCacheService.html":{"url":"injectables/HttpCacheService.html","title":"injectable - HttpCacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpCacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/core/services/http-cache.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                requests\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                invalidateCache\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/core/services/http-cache.service.ts:32\n                \n            \n\n\n            \n                \n                    Retrieve the response\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpResponse\n\n                    \n                    \n                        HttpResponse\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidateCache\n                        \n                    \n                \n            \n            \n                \ninvalidateCache()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/core/services/http-cache.service.ts:39\n                \n            \n\n\n            \n                \n                    Destroy the cache value from variable\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(url: string, response: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/core/services/http-cache.service.ts:22\n                \n            \n\n\n            \n                \n                    Storing the http response for the requested url\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        requests\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/core/services/http-cache.service.ts:12\n                        \n                    \n\n            \n                \n                    local variable - requests\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpCacheService  {\n\n  /**\n   * local variable - requests\n   */\n  private requests:any = {};\n  /**\n   * @ignore\n   */\n  constructor() { }\n  /**\n   * Storing the http response for the requested url\n   * @param url \n   * @param response \n   */\n  put(url:string, response:HttpResponse):void{\n    this.requests[url] = response;\n    localStorage.setItem(url,JSON.stringify(response));\n  }\n  \n  /**\n   * Retrieve the response \n   * @param url \n   * @returns HttpResponse\n   */\n  get(url:string):HttpResponse{\n    return this.requests[url];    \n  }\n  \n  /**\n   * Destroy the cache value from variable\n   */\n  invalidateCache():void{\n    this.requests = { };\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpUserService.html":{"url":"injectables/HttpUserService.html","title":"injectable - HttpUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/users/services/http-user-service.ts\n        \n\n\n            \n                Description\n            \n            \n                This class implements the User Service methods\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                loggedInUser\n                            \n                            \n                                loggedInUserAnnouncement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _handleError\n                            \n                            \n                                getAllUsers\n                            \n                            \n                                getAuthenticationHeader\n                            \n                            \n                                getLoggedInUser\n                            \n                            \n                                getUserByEmail\n                            \n                            \n                                getUserStatusAnnouncement\n                            \n                            \n                                isEmailRegistered\n                            \n                            \n                                login\n                            \n                            \n                                logOut\n                            \n                            \n                                register\n                            \n                            \n                                updateCurrentUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logger: NGXLogger)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/users/services/http-user-service.ts:26\n                            \n                        \n\n                \n                    \n                            The constructor with dependency injection and get the user details from local storage\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        _handleError\n                        \n                    \n                \n            \n            \n                \n_handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/http-user-service.ts:142\n                \n            \n\n\n            \n                \n                    This helper method checks the http error response and throws error\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \ngetAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/http-user-service.ts:67\n                \n            \n\n\n            \n                \n                    This method sends the http get request to get all users\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        all users\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthenticationHeader\n                        \n                    \n                \n            \n            \n                \ngetAuthenticationHeader()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/http-user-service.ts:80\n                \n            \n\n\n            \n                \n                    This method checks the user login status and send token as a request header\n\n\n                    \n                    \n                    \n                        Returns :     { Authorization?: undefined; } | { Authorization: string; }\n\n                    \n                    \n                        Authorization token coming from server\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoggedInUser\n                        \n                    \n                \n            \n            \n                \ngetLoggedInUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/http-user-service.ts:58\n                \n            \n\n\n            \n                \n                    This method\n\n\n                    \n                    \n                    \n                        Returns :         LoggedInDetails | undefined\n\n                    \n                    \n                        logged in user details if logged in otherwise nothing.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserByEmail\n                        \n                    \n                \n            \n            \n                \ngetUserByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/http-user-service.ts:49\n                \n            \n\n\n            \n                \n                    This method sends http get request to the server\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Observable of user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserStatusAnnouncement\n                        \n                    \n                \n            \n            \n                \ngetUserStatusAnnouncement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/http-user-service.ts:170\n                \n            \n\n\n            \n                \n                    This method returns the logged in user announcemnet details\n\n\n                    \n                    \n                    \n                        Returns :         Subject\n\n                    \n                    \n                        Logged in details if user logged in or nothing\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEmailRegistered\n                        \n                    \n                \n            \n            \n                \nisEmailRegistered(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/http-user-service.ts:155\n                \n            \n\n\n            \n                \n                    This method sends the http get request to the server to validate email\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginInfo: LoginInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/http-user-service.ts:110\n                \n            \n\n\n            \n                \n                    This method sends http post request to the server with login Info taken from client\nand updates the current user status\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginInfo\n                                    \n                                                LoginInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Observable of LoggedInDetails\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/http-user-service.ts:179\n                \n            \n\n\n            \n                \n                    This method updates the user status as undefined\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        observable of void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/http-user-service.ts:130\n                \n            \n\n\n            \n                \n                    This method sends the http post request with the entered details along with headers information\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Observable of user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCurrentUser\n                        \n                    \n                \n            \n            \n                \nupdateCurrentUser(user?: LoggedInDetails)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/http-user-service.ts:94\n                \n            \n\n\n            \n                \n                    This method update the details of user in local storage based on login status\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                LoggedInDetails\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        loggedInUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggedInDetails\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/services/http-user-service.ts:26\n                        \n                    \n\n            \n                \n                    Declaration of loggedInUser details\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggedInUserAnnouncement\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/services/http-user-service.ts:22\n                        \n                    \n\n            \n                \n                    Declaration of loggedInUserAnnouncement\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { NGXLogger } from \"ngx-logger\";\nimport { catchError, map, Observable, of, Subject, tap, throwError } from \"rxjs\";\nimport { LoggedInDetails, LoginInfo, User } from \"../models/user\";\nimport { UserService } from \"./user.service\";\n\n/**\n * API url for users\n */\nconst baseUrl='https://localhost:5000/api/users';\n\n/**\n * This class implements the User Service methods\n */\n@Injectable()\nexport class HttpUserService implements UserService{\n\n    /**\n     * Declaration of loggedInUserAnnouncement\n     */\n    loggedInUserAnnouncement = new Subject();\n    /**\n     * Declaration of loggedInUser details\n     */\n    loggedInUser?:LoggedInDetails;\n    /**\n     * \n     * The constructor with dependency injection and get the user details from local storage \n     *\n     */\n    constructor(private http:HttpClient, private logger:NGXLogger){\n        if(!this.loggedInUser)\n        {\n            var jsonString = localStorage.getItem(\"user\");\n            if(jsonString)\n            {\n                var user = JSON.parse(jsonString);\n                this.updateCurrentUser(user);\n            }\n        }\n    }\n\n    /**\n     * This method sends http get request to the server\n     * @param{string} email \n     * @returns Observable of user\n     */\n    getUserByEmail(email: string): Observable {\n        this.logger.trace('Entering into getUserByEmail method of user service');\n        return this.http.get(baseUrl+'/'+email);\n    }\n\n    /**\n     * This method\n     * @returns logged in user details if logged in otherwise nothing.\n     */\n    getLoggedInUser(): LoggedInDetails|undefined {\n        this.logger.trace('Entering into getLoggedInUser method of user service');\n        return this.loggedInUser;\n    }\n\n     /**\n     * This method sends the http get request to get all users\n     * @returns all users\n     */\n    getAllUsers(): Observable {\n        this.logger.trace('Entering into getAllUsers method of user service');\n        return this\n                    .http\n                    .get(baseUrl);\n    }\n   \n   \n    /**\n     * This method checks the user login status and send token as a request header\n     * \n     * @returns Authorization token coming from server\n     */\n    getAuthenticationHeader()\n    {\n        if(!this.loggedInUser)\n            return {};\n        else\n            return{\n                Authorization:`BEARER ${this.loggedInUser.token}`\n            }\n    }\n\n    /**\n     * This method update the details of user in local storage based on login status\n     * @param user \n     */\n    updateCurrentUser(user?:LoggedInDetails){\n        this.logger.trace('Entering into updateCurrentUser method of user service');\n        this.loggedInUser=user;\n        this.loggedInUserAnnouncement.next(user);\n        if(this.loggedInUser)\n            localStorage.setItem(\"user\", JSON.stringify(this.loggedInUser));\n        else    \n            localStorage.removeItem(\"user\");\n    }\n\n    /**\n     * This method sends http post request to the server with login Info taken from client\n     * and updates the current user status \n     * @param loginInfo \n     * @returns Observable of LoggedInDetails \n     */\n    login(loginInfo: LoginInfo): Observable {\n        return this\n                    .http\n                    .post(`${baseUrl}/login`,loginInfo)\n                    .pipe(\n                        tap( (info:LoggedInDetails)=>{\n                            console.log('user info received on login:',info);\n                            this.logger.trace('Inside login method of user service');\n                            this.updateCurrentUser(info);\n                        })\n                    );\n\n\n    }\n\n    /**\n     * This method sends the http post request with the entered details along with headers information\n     * @param user \n     * @returns Observable of user\n     */\n    register(user: User):  Observable {\n        this.logger.trace('Entering into register method of user service');\n        return this.http.post(baseUrl , user,{headers:{\n            \"content-type\":\"application/json\"\n        }});\n    }\n\n    /**\n     * This helper method checks the http error response and throws error\n     * @param error \n     * @returns observable\n     */\n    _handleError(error:HttpErrorResponse){\n        if(error.status === 404){\n            return of(false);  //return false as an observable result\n        } else{\n            return throwError(()=> error); //else let the error go\n        }\n    }\n\n    /**\n     * This method sends the http get request to the server to validate email\n     * @param email \n     * @returns \n     */\n    isEmailRegistered(email: string): Observable {\n\n        return this\n                    .http\n                    .get(`${baseUrl}/validate/${email}`)\n                    .pipe(\n                        map(response=>true), //incase of no error\n                        catchError(this._handleError) //in case of error\n                    );\n       \n    }\n    /**\n     * This method returns the logged in user announcemnet details\n     * @returns Logged in details if user logged in or nothing\n     */\n    getUserStatusAnnouncement(): Subject {\n    this.logger.trace('Entering into getUserStatusAnnouncement method of user service');\n    return this.loggedInUserAnnouncement;\n    }\n\n    /**\n     * This method updates the user status as undefined \n     * @returns observable of void\n     */\n    logOut():Observable {\n        this.logger.trace('Entering into logOut method of user service');\n        this.updateCurrentUser();\n        return of(undefined);\n    }\n    \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InterceptorService.html":{"url":"injectables/InterceptorService.html","title":"injectable - InterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/core/interceptors/interceptor.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interceptor Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/core/interceptors/interceptor.service.ts:12\n                            \n                        \n\n                \n                    \n                            constructor of InterceptorService for dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/core/interceptors/interceptor.service.ts:24\n                \n            \n\n\n            \n                \n                    Implementing intercept method with two arguments the HTTP request and the HTTP handler\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        sends the HTTP request to the server\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        modified request\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../../users/services/user.service';\n\n/**\n * Interceptor Service \n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterceptorService {\n    /**\n     * constructor of InterceptorService for dependency injection\n     * @param userService \n     */\n    constructor(@Inject(\"UserService\")private userService: UserService) { }\n    /**\n     * Implementing intercept method with two arguments the HTTP request and the HTTP handler\n     * @param request sends the HTTP request to the server\n     * @param next \n     * @returns modified request\n     */\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n  \n      console.log(request);\n\n      let headers = this.userService.getAuthenticationHeader();\n      let modifiedRequest = request.clone({\n        setHeaders:{\n          ...headers\n        }\n      })\n      \n      return next.handle(modifiedRequest);\n    }\n    }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoggedInDetails.html":{"url":"interfaces/LoggedInDetails.html","title":"interface - LoggedInDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoggedInDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/users/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                LoggedInDetails interface with user and token for authentication\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    token property of type string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    user property of type User\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface LoginInfo\n{\n    /**\n     * email property of type string\n     */\n    email:string;\n    /**\n     * password property of type string\n     */\n    password:string;\n}\n/**\n * User interface with necessary fields\n */\nexport interface User extends LoginInfo\n{\n    /**\n     * name property of type string\n     */\n    name:string;\n    /**\n     * profilePic property of type string\n     */\n    profilePic?:string;\n    /**\n     * phone Number property of type string\n     */\n    phoneNumber:string;\n    /**\n     * aadhaarId property of type string\n     */\n    aadhaarId:string;\n    /**\n     * userBookings property of any type which can be nullable\n     */\n    userBookings?:any;\n}\n\n/**\n * LoggedInDetails interface with user and token for authentication\n */\nexport interface LoggedInDetails\n{\n    /**\n     * user property of type User\n     */\n    user:User;\n    /**\n     * token property of type string\n     */\n    token:string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/users/components/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Login component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                loggedInUser\n                            \n                            \n                                loginInfo\n                            \n                            \n                                    Optional\n                                status\n                            \n                            \n                                    Optional\n                                statusStyle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router, logger: NGXLogger)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/users/components/login/login.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleLogin\n                        \n                    \n                \n            \n            \n                \nhandleLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/components/login/login.component.ts:46\n                \n            \n\n\n            \n                \n                    This method calls the login method of user service and subscribes to the update\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        loggedInUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/login/login.component.ts:34\n                        \n                    \n\n            \n                \n                    Declaring loggedInUser of type User\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoginInfo\n\n                    \n                \n                \n                    \n                        Default value : {\n    email: '',\n    password:''\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/login/login.component.ts:27\n                        \n                    \n\n            \n                \n                    Declaration of login info of type LoginInfo\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/login/login.component.ts:38\n                        \n                    \n\n            \n                \n                    Declaring status of type string\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        statusStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/login/login.component.ts:42\n                        \n                    \n\n            \n                \n                    Declaring statusStyle of type string\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NGXLogger } from 'ngx-logger';\nimport { Observable } from 'rxjs';\nimport { LoggedInDetails, LoginInfo, User } from '../../models/user';\nimport { UserService } from '../../services/user.service';\n\n/**\n * Login component\n */\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n \n  /*\n  * Constructor for Login Component used to inject dependencies \n  */\n  constructor(\n    @Inject(\"UserService\") private userService: UserService, private router: Router, private logger:NGXLogger\n  ) { }\n  /**\n   * Declaration of login info of type LoginInfo \n   */\n  loginInfo:LoginInfo={\n    email: '',\n    password:''\n  };  \n  /**\n   * Declaring loggedInUser of type User \n   */\n  loggedInUser?:User;\n  /**\n   * Declaring status of type string\n   */\n  status?:string;\n  /**\n   * Declaring statusStyle of type string\n   */\n  statusStyle?:string;\n  /**\n   * This method calls the login method of user service and subscribes to the update\n   */\n   handleLogin(){\n        (>(this.userService\n        .login(this.loginInfo)))\n        .subscribe({\n          next: (info:LoggedInDetails)=>{ \n            console.log(info);\n            const user=info.user;\n            console.log('user',user);\n            this.status=`Welcome ${user.name}`;\n            this.statusStyle='text-success';\n            this.router.navigate(['home']);\n          },\n          error: (error:any)=>{\n            this.logger.error('Error in login details, user trying to login with invalid credentials');\n            this.status=`Error: ${error.status}`;\n            this.statusStyle='text-danger';\n          }\n        });\n\n        this.status='please wait...';\n        this.statusStyle='text-primary';\n\n\n  }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n   \n  }\n\n}\n\n\n\n\n    \n\n    \n        \n\n    \n    \n\n        User Login\n\n        \n      \n            \n                \n\n                \n            \n\n            \n\n                Email Field is Required\n\n                Email Field is Invalid\n              \n\n            \n\n\n            \n                \n                    \n                \n                \n\n            \n                            \n                \n                Required\n                Password should be min {{passwordField.errors!['minlength']!.requiredLength}} characters. You entered {{passwordField.errors!['minlength']!.actualLength}} chars\n\n            \n            \n                 Login\n            \n             {{status}}\n        \n        \n            \n        \n\n    \n\n\n\n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                .login-form\n\n{\n\n    border: 1px solid black;\n\n    border-radius: 5px;\n\n    background-color:honeydew;\n\n    margin: 15px;\n\n    padding: 10px;\n\n}\n\nh3,button{\n\n    text-align: center;\n\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                User Login                                                                                                  Email Field is Required                Email Field is Invalid                                                                                                                                                                                  Required                Password should be min {{passwordField.errors![\\'minlength\\']!.requiredLength}} characters. You entered {{passwordField.errors![\\'minlength\\']!.actualLength}} chars                                         Login                         {{status}}                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'footer'},{'name': 'GalleryComponent', 'selector': 'gallery'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'MembershipComponent', 'selector': 'membership'},{'name': 'PopUpComponent', 'selector': 'pop-up'},{'name': 'RegisterComponent', 'selector': 'register'},{'name': 'RoomBookingComponent', 'selector': 'room-booking'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [{'name': 'CompareDirective', 'selector': '[compareTo]'},{'name': 'UniqueEmailDirective', 'selector': '[uniqueEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginInfo.html":{"url":"interfaces/LoginInfo.html","title":"interface - LoginInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/users/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                LoginInfo interface with email and password fields\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    email property of type string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    password property of type string\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface LoginInfo\n{\n    /**\n     * email property of type string\n     */\n    email:string;\n    /**\n     * password property of type string\n     */\n    password:string;\n}\n/**\n * User interface with necessary fields\n */\nexport interface User extends LoginInfo\n{\n    /**\n     * name property of type string\n     */\n    name:string;\n    /**\n     * profilePic property of type string\n     */\n    profilePic?:string;\n    /**\n     * phone Number property of type string\n     */\n    phoneNumber:string;\n    /**\n     * aadhaarId property of type string\n     */\n    aadhaarId:string;\n    /**\n     * userBookings property of any type which can be nullable\n     */\n    userBookings?:any;\n}\n\n/**\n * LoggedInDetails interface with user and token for authentication\n */\nexport interface LoggedInDetails\n{\n    /**\n     * user property of type User\n     */\n    user:User;\n    /**\n     * token property of type string\n     */\n    token:string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MembershipComponent.html":{"url":"components/MembershipComponent.html","title":"component - MembershipComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MembershipComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/users/components/membership/membership.component.ts\n\n\n\n    \n        Description\n    \n    \n        Membership component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                membership\n            \n\n            \n                styleUrls\n                ./membership.component.css\n            \n\n\n\n            \n                templateUrl\n                ./membership.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleLogout\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateUserStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/users/components/membership/membership.component.ts:18\n                            \n                        \n\n                \n                    \n                            constructor with dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleLogout\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/components/membership/membership.component.ts:65\n                \n            \n\n\n            \n                \n                    This method handle logOut method and navigate to the login page\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/components/membership/membership.component.ts:56\n                \n            \n\n\n            \n                \n                    This method unsubscribe the getUserStatusAnnouncement\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/components/membership/membership.component.ts:40\n                \n            \n\n\n            \n                \n                    This method intializes the membership component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserStatus\n                        \n                    \n                \n            \n            \n                \nupdateUserStatus(details: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/components/membership/membership.component.ts:29\n                \n            \n\n\n            \n                \n                    This is helper method sets the logged-in user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    details\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/membership/membership.component.ts:18\n                        \n                    \n\n            \n                \n                    user variable declaration\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/modules/users/services/user.service';\n\n/**\n * Membership component\n */\n@Component({\n  selector: 'membership',\n  templateUrl: './membership.component.html',\n  styleUrls: ['./membership.component.css']\n})\nexport class MembershipComponent implements OnInit {\n\n  /**\n   * user variable declaration\n   */\n  user?:any;  \n  /**\n   * constructor with dependency injection\n   * @param userService \n   * @param router \n   */\n  constructor(@Inject(\"UserService\")private userService: UserService, private router:Router) { }  \n  /**\n   * This is helper method sets the logged-in user\n   * @param details \n   */\n  updateUserStatus(details:any): void {\n    \n    if(details)\n      this.user=details.user;\n    else\n      this.user=undefined;\n\n  }\n  /**\n   * This method intializes the membership component\n   */\n  ngOnInit(): void {\n      \n      console.log('membership component initialized');\n      var details= this.userService.getLoggedInUser();\n      if(details)\n        this.user=details.user;\n      this\n        .userService\n        .getUserStatusAnnouncement()\n        .subscribe(details=>this.updateUserStatus(details))      \n      \n  }\n\n  /**\n   * This method unsubscribe the getUserStatusAnnouncement\n   */\n  ngOnDestroy(): void {\n   \n    this.userService.getUserStatusAnnouncement().unsubscribe();\n  }\n\n \n  /**\n   * This method handle logOut method and navigate to the login page\n   */\n  async handleLogout(){\n    await this.userService.logOut();\n    this.router.navigate(['user/login'])\n  }\n\n  \n}\n\n    \n\n    \n                    \n    \n      \n          \n          {{user?user.name:'Guest'}}\n      \n      \n     \n        Login\n        Register\n        \n        My Bookings\n      \n        \n        Logout\n      \n      \n    \n   \n\n\n    \n\n    \n                \n                    ./membership.component.css\n                \n                .navbar-nav{\n    padding-right: 50px;\n}\n\nimg{\n    width: 40px;\n    margin-right: 5px;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{user?user.name:\\'Guest\\'}}                         Login        Register                My Bookings                      Logout                   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'footer'},{'name': 'GalleryComponent', 'selector': 'gallery'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'MembershipComponent', 'selector': 'membership'},{'name': 'PopUpComponent', 'selector': 'pop-up'},{'name': 'RegisterComponent', 'selector': 'register'},{'name': 'RoomBookingComponent', 'selector': 'room-booking'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [{'name': 'CompareDirective', 'selector': '[compareTo]'},{'name': 'UniqueEmailDirective', 'selector': '[uniqueEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'MembershipComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PopUpComponent.html":{"url":"components/PopUpComponent.html","title":"component - PopUpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PopUpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/shared/components/pop-up/pop-up.component.ts\n\n\n\n    \n        Description\n    \n    \n        popup component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                pop-up\n            \n\n            \n                styleUrls\n                ./pop-up.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pop-up.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleCancel\n                            \n                            \n                                handleConfirm\n                            \n                            \n                                handleDone\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancelText\n                            \n                            \n                                confirmText\n                            \n                            \n                                preventDefault\n                            \n                            \n                                title\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                done\n                            \n                            \n                                visibleChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/shared/components/pop-up/pop-up.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cancelText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"pop-up cancel text\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/pop-up/pop-up.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        confirmText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"pop-up confirm text\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/pop-up/pop-up.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        preventDefault\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/pop-up/pop-up.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"pop-up title\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/pop-up/pop-up.component.ts:22\n                            \n                        \n                \n                    \n                        Input properties for title, confirmText, cancelText, preventDefault\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/pop-up/pop-up.component.ts:30\n                            \n                        \n                \n                    \n                        Input and output property variable for visible and visibleChange\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        done\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/pop-up/pop-up.component.ts:36\n                            \n                        \n                \n                    \n                        output property for done\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visibleChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/pop-up/pop-up.component.ts:31\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleCancel\n                        \n                    \n                \n            \n            \n                \nhandleCancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/components/pop-up/pop-up.component.ts:60\n                \n            \n\n\n            \n                \n                    This method sends false value for the handleDone method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleConfirm\n                        \n                    \n                \n            \n            \n                \nhandleConfirm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/components/pop-up/pop-up.component.ts:53\n                \n            \n\n\n            \n                \n                    This method sends true value for the handleDone method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDone\n                        \n                    \n                \n            \n            \n                \nhandleDone(response: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/components/pop-up/pop-up.component.ts:42\n                \n            \n\n\n            \n                \n                    handleDone method for handling pop up comment visibility\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/components/pop-up/pop-up.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n/**\n * popup component\n */\n@Component({\n  selector: 'pop-up',\n  templateUrl: './pop-up.component.html',\n  styleUrls: ['./pop-up.component.css']\n})\nexport class PopUpComponent implements OnInit {\n\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Input properties for title, confirmText, cancelText, preventDefault\n   */\n  @Input() title:string=\"pop-up title\";\n  @Input() confirmText:string=\"pop-up confirm text\";\n  @Input() cancelText:string=\"pop-up cancel text\";\n  @Input() preventDefault:boolean=false;\n\n  /**\n   * Input and output property variable for visible and visibleChange \n   */\n  @Input() visible:boolean = false;\n  @Output() visibleChange = new EventEmitter();\n\n  /**\n   * output property for done\n   */\n  @Output() done=new EventEmitter();\n  \n  /**\n   * handleDone method for handling pop up comment visibility\n   * @param response \n   */\n  handleDone(response:boolean){\n    this.done.emit(response);\n    if(!this.preventDefault){\n      this.visible=false;\n      this.visibleChange.emit(false);\n    }\n  }\n\n  /**\n   * This method sends true value for the handleDone method\n   */\n  handleConfirm(){\n    this.handleDone(true);\n  }\n\n  /**\n   * This method sends false value for the handleDone method\n   */\n  handleCancel(){\n    this.handleDone(false);\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n    \n        \n        \n            {{title}}\n            \n        \n        \n           \n           \n        \n        \n            {{cancelText}}\n            {{confirmText}}\n        \n        \n    \n    \n\n    \n\n    \n                \n                    ./pop-up.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{title}}                                                                              {{cancelText}}            {{confirmText}}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'footer'},{'name': 'GalleryComponent', 'selector': 'gallery'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'MembershipComponent', 'selector': 'membership'},{'name': 'PopUpComponent', 'selector': 'pop-up'},{'name': 'RegisterComponent', 'selector': 'register'},{'name': 'RoomBookingComponent', 'selector': 'room-booking'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [{'name': 'CompareDirective', 'selector': '[compareTo]'},{'name': 'UniqueEmailDirective', 'selector': '[uniqueEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'PopUpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/users/components/register/register.component.ts\n\n\n\n    \n        Description\n    \n    \n        Register component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                status\n                            \n                            \n                                statusStyle\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleRegistration\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(builder: FormBuilder, userService: UserService, router: Router, logger: NGXLogger)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/users/components/register/register.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        builder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleRegistration\n                        \n                    \n                \n            \n            \n                \nhandleRegistration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/components/register/register.component.ts:108\n                \n            \n\n\n            \n                \n                     handleRegistration method\ntakes: form values\ninvokes: register method of user service which requires user object\nredirect: navigate to login upon successful registration\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/components/register/register.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/register/register.component.ts:38\n                        \n                    \n\n            \n                \n                    form of type Formgroup\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/register/register.component.ts:30\n                        \n                    \n\n            \n                \n                    status variable initialized with empty string\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text-primary'\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/register/register.component.ts:34\n                        \n                    \n\n            \n                \n                    statusStyle initialized with text-primary\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/register/register.component.ts:26\n                        \n                    \n\n            \n                \n                    user variable of type User\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Inject } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NGXLogger } from 'ngx-logger';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { compare } from 'src/app/modules/shared/directives/compare.directive';\nimport { uniqueEmailValidator } from 'src/app/modules/shared/directives/unique-email.directive';\n\nimport { User } from '../../models/user';\nimport { UserService } from '../../services/user.service';\n\n/**\n * Register component\n */\n@Component({\n  selector: 'register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  /**\n   * user variable of type User\n   */\n  user?:User\n  /**\n   * status variable initialized with empty string \n   */\n  status=''; \n  /**\n   * statusStyle initialized with text-primary\n   */\n  statusStyle='text-primary';\n  /**\n   * form of type Formgroup\n   */\n  form:FormGroup;\n  /*\n  * Constructor for Registration Component used to inject dependencies \n  */\n  constructor(private builder :FormBuilder,\n             @Inject(\"UserService\") private userService:UserService,\n              private router:Router, private logger:NGXLogger\n              ) {\n\n    /**\n     * Declaring password validators\n     *  \n     * */ \n    const passwordValidators=[\n      Validators.required, \n      Validators.minLength(4),\n      Validators.maxLength(15)\n    ];\n    /**\n     * Declaring phone number validators\n     */\n    const phoneNumberValidators=[\n      Validators.required, \n      Validators.minLength(10),\n      Validators.maxLength(10)\n    ];\n    /**\n     *  Declaring aadhaar id validators\n     */\n    const aadhaarIdValidators=[\n      Validators.required, \n      Validators.minLength(12),\n      Validators.maxLength(12)\n    ];\n\n    /**\n     * Creating form with builder\n     */\n    this.form=this.builder.group({\n      name: ['', [Validators.required]],\n      email:['', [\n                  Validators.required,\n                  Validators.email, \n                ],\n                [\n                  uniqueEmailValidator(this.userService)\n                ]\n            ],\n      profileUrl:['',[\n                  Validators.required\n      ]],\n      password:['',passwordValidators],\n      confirmPassword:['',passwordValidators],\n      phoneNumber:['',phoneNumberValidators],\n      aadhaarId:['',aadhaarIdValidators]\n    \n    },\n    {validator: compare('password','confirmPassword')}\n    );\n  }\n  /**\n   *  handleRegistration method \n   * \n   * takes: form values \n   * \n   * invokes: register method of user service which requires user object\n   * \n   * redirect: navigate to login upon successful registration\n\n  */\n  handleRegistration(){\n    console.log(this.form);\n    if(this.form.invalid)\n      {\n        console.log(\"Form is invalid\");\n        this.logger.warn('Form is invalid');\n        return;\n      }\n    \n    this.user={\n      ...this.form.value,\n    \n    };\n    console.log('registering', this.user);\n      (>(this\n        .userService\n        .register(this.user!)\n        ))\n        .pipe(\n          tap((response:any)=>console.log('response',response)),\n        )\n        .subscribe({\n          next:(user:any)=>{\n          console.log('registered', user);\n          this.router.navigate(['/user/login']);\n        },\n        error:error=> console.log('error',error)\n      })   \n  }\n\n  /**\n   * @internal\n   */\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n        \n    \n    \n\n        User Registration\n        \n        \n            \n            \n                \n                    \n                \n                \n            \n            \n            \n                Required\n             \n            \n            \n                \n                \n            \n            \n            \n                Required\n                Invalid Email\n                \n                    {{form.controls!['email'].errors!['uniqueEmail'].message}}\n                \n            \n    \n            \n            \n                \n                    \n                \n                \n            \n            \n            \n                Required\n                \n                    Min {{form.controls!['password'].errors!['minlength']!.requiredLength}} chars required. Current is {{form.controls!['password'].errors!['minlength']!.actualLength}}\n                \n                \n                    Max {{form.controls!['password'].errors!['maxlength']!.requiredLength}} chars required. Current is {{form.controls!['password'].errors!['maxlength']!.actualLength}}\n                \n             \n            \n            \n                \n                    \n                \n                \n            \n            \n            \n                Required\n                \n                    Min {{form.controls!['confirmPassword'].errors!['minlength']!.requiredLength}} chars required. Current is {{form.controls!['confirmPassword'].errors!['minlength']!.actualLength}}\n                \n                \n                    Max {{form.controls!['confirmPassword'].errors!['maxlength']!.requiredLength}} chars required. Current is {{form.controls!['confirmPassword'].errors!['maxlength']!.actualLength}}\n                \n            \n            \n                {{form.errors!['compare'].message}}\n            \n\n            \n            \n                \n                    \n                \n                \n            \n            \n            \n                Required\n                Invalid url\n            \n\n             \n            \n                \n                    \n                \n                \n            \n            \n            \n                Required\n                \n                    Min {{form.controls!['phoneNumber'].errors!['minlength']!.requiredLength}} chars required. Current is {{form.controls!['phoneNumber'].errors!['minlength']!.actualLength}}\n                \n                \n                    Max {{form.controls!['phoneNumber'].errors!['maxlength']!.requiredLength}} chars required. Current is {{form.controls!['phoneNumber'].errors!['maxlength']!.actualLength}}\n                \n            \n             \n            \n                \n                    \n                \n                \n            \n             \n             \n                Required\n                \n                    Min {{form.controls!['aadhaarId'].errors!['minlength']!.requiredLength}} chars required. Current is {{form.controls!['aadhaarId'].errors!['minlength']!.actualLength}}\n                \n                \n                    Max {{form.controls!['aadhaarId'].errors!['maxlength']!.requiredLength}} chars required. Current is {{form.controls!['aadhaarId'].errors!['maxlength']!.actualLength}}\n                \n            \n            \n            \n                 Register\n            \n\n              {{status}}\n        \n        \n        \n    \n    \n    \n\n    \n        \n    \n\n        \n    \n\n\n\n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                img{\n    margin:50px;\n    border-radius: 50%;\n    border: 5px solid black;\n    padding: 3px;\n}\n\n.registration-form\n{\n    border: 1px solid black;\n    border-radius: 5px;\n    background-color:honeydew;\n    margin: 15px;\n    padding: 10px;\n}\nh3,button{\n    text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            User Registration                                                                                                                                                                Required                                                                                                                         Required                Invalid Email                                    {{form.controls![\\'email\\'].errors![\\'uniqueEmail\\'].message}}                                                                                                                                                                                Required                                    Min {{form.controls![\\'password\\'].errors![\\'minlength\\']!.requiredLength}} chars required. Current is {{form.controls![\\'password\\'].errors![\\'minlength\\']!.actualLength}}                                                    Max {{form.controls![\\'password\\'].errors![\\'maxlength\\']!.requiredLength}} chars required. Current is {{form.controls![\\'password\\'].errors![\\'maxlength\\']!.actualLength}}                                                                                                                                                                             Required                                    Min {{form.controls![\\'confirmPassword\\'].errors![\\'minlength\\']!.requiredLength}} chars required. Current is {{form.controls![\\'confirmPassword\\'].errors![\\'minlength\\']!.actualLength}}                                                    Max {{form.controls![\\'confirmPassword\\'].errors![\\'maxlength\\']!.requiredLength}} chars required. Current is {{form.controls![\\'confirmPassword\\'].errors![\\'maxlength\\']!.actualLength}}                                                        {{form.errors![\\'compare\\'].message}}                                                                                                                                                            Required                Invalid url                                                                                                                                                             Required                                    Min {{form.controls![\\'phoneNumber\\'].errors![\\'minlength\\']!.requiredLength}} chars required. Current is {{form.controls![\\'phoneNumber\\'].errors![\\'minlength\\']!.actualLength}}                                                    Max {{form.controls![\\'phoneNumber\\'].errors![\\'maxlength\\']!.requiredLength}} chars required. Current is {{form.controls![\\'phoneNumber\\'].errors![\\'maxlength\\']!.actualLength}}                                                                                                                                                                               Required                                    Min {{form.controls![\\'aadhaarId\\'].errors![\\'minlength\\']!.requiredLength}} chars required. Current is {{form.controls![\\'aadhaarId\\'].errors![\\'minlength\\']!.actualLength}}                                                    Max {{form.controls![\\'aadhaarId\\'].errors![\\'maxlength\\']!.requiredLength}} chars required. Current is {{form.controls![\\'aadhaarId\\'].errors![\\'maxlength\\']!.actualLength}}                                                                     Register                          {{status}}                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'footer'},{'name': 'GalleryComponent', 'selector': 'gallery'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'MembershipComponent', 'selector': 'membership'},{'name': 'PopUpComponent', 'selector': 'pop-up'},{'name': 'RegisterComponent', 'selector': 'register'},{'name': 'RoomBookingComponent', 'selector': 'room-booking'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [{'name': 'CompareDirective', 'selector': '[compareTo]'},{'name': 'UniqueEmailDirective', 'selector': '[uniqueEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RoomBookingComponent.html":{"url":"components/RoomBookingComponent.html","title":"component - RoomBookingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RoomBookingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/booking/components/room-booking/room-booking.component.ts\n\n\n\n    \n        Description\n    \n    \n        The Room booking component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                room-booking\n            \n\n            \n                styleUrls\n                ./room-booking.component.css\n            \n\n\n\n            \n                templateUrl\n                ./room-booking.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                booking\n                            \n                            \n                                subsciption\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bookRoom\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateUserStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, bookingService: BookingService, router: Router, fb: FormBuilder, logger: NGXLogger)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/booking/components/room-booking/room-booking.component.ts:29\n                            \n                        \n\n                \n                    \n                            Constructor with dependency injection of below parameters\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is userService instance paramater\n\n                                                        \n                                                \n                                                \n                                                        bookingService\n                                                  \n                                                        \n                                                                        BookingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is bookingService instance paramater\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is router instance paramater\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is form builder instance paramater\n\n                                                        \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is the logger instance paramater\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        bookRoom\n                        \n                    \n                \n            \n            \n                \nbookRoom()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/booking/components/room-booking/room-booking.component.ts:82\n                \n            \n\n\n            \n                \n                    This method adds booking of a room and redirecting to user profile page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/booking/components/room-booking/room-booking.component.ts:75\n                \n            \n\n\n            \n                \n                     Unsubscribe the subscription\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/booking/components/room-booking/room-booking.component.ts:64\n                \n            \n\n\n            \n                \n                    Initializing the component with logged in user details\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserStatus\n                        \n                    \n                \n            \n            \n                \nupdateUserStatus(details: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/booking/components/room-booking/room-booking.component.ts:52\n                \n            \n\n\n            \n                \n                    Updates the user details\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    details\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        booking\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BookingDetails\n\n                    \n                \n                \n                    \n                        Default value : {\n    userId: '',\n    numberOfDaysStay: 1,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/booking/components/room-booking/room-booking.component.ts:26\n                        \n                    \n\n            \n                \n                    Declaring booking of type BookingDetails\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subsciption\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/booking/components/room-booking/room-booking.component.ts:59\n                        \n                    \n\n            \n                \n                    Declaring subscription variable\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/booking/components/room-booking/room-booking.component.ts:22\n                        \n                    \n\n            \n                \n                    Declaring user\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NGXLogger } from 'ngx-logger';\n\nimport { UserService } from 'src/app/modules/users/services/user.service';\nimport { BookingDetails } from '../../models/booking';\nimport { BookingService } from '../../services/booking.service';\n\n/**\n * The Room booking component\n */\n@Component({\n  selector: 'room-booking',\n  templateUrl: './room-booking.component.html',\n  styleUrls: ['./room-booking.component.css'],\n})\nexport class RoomBookingComponent implements OnInit, OnDestroy {\n  /**\n   * Declaring user\n   */\n  user?: any;\n  /**\n   * Declaring booking of type BookingDetails\n   */\n  booking: BookingDetails = {\n    userId: '',\n    numberOfDaysStay: 1,\n  };\n  /**\n   * Constructor with dependency injection of below parameters\n   * @param userService This is userService instance paramater\n   * @param bookingService This is bookingService instance paramater\n   * @param router This is router instance paramater\n   * @param fb This is form builder instance paramater\n   * @param logger This is the logger instance paramater \n   */\n  constructor(\n    @Inject('UserService') private userService: UserService,\n    @Inject('BookingService') private bookingService: BookingService,\n    private router: Router,\n    private fb: FormBuilder,\n    private logger:NGXLogger\n  ) {\n    \n  }\n\n  /**\n   * Updates the user details\n   * @param details \n   */\n  updateUserStatus(details: any): void {\n    if (details) this.user = details.user;\n    else this.user = undefined;\n  }\n  /**\n   * Declaring subscription variable\n   */\n  subsciption: any;\n\n  /**\n   * Initializing the component with logged in user details\n   */\n  ngOnInit(): void {\n    console.log('getting logged in user details');\n    var details = this.userService.getLoggedInUser();\n    if (details) this.user = details.user;\n    this.subsciption = this.userService\n      .getUserStatusAnnouncement()\n      .subscribe((details) => this.updateUserStatus(details));\n  }\n  /**\n   *  Unsubscribe the subscription\n   */\n  ngOnDestroy(): void {\n    this.subsciption.unsubscribe();\n  }\n\n  /**\n   * This method adds booking of a room and redirecting to user profile page\n   */\n  bookRoom() {\n    this.logger.info(\"Entering into bookRoom method\");\n    console.log(this.booking);\n    this.booking.userId = this.user.email;\n    this.bookingService\n      .addBooking(this.booking)\n      .subscribe((x) => console.log(x));\n    this.logger.trace(\"Booking completed and user redirected to my bookings page\");  \n    this.router.navigate(['user/profile',this.user.email]);\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n    \n\n        Room booking\n\n        \n      \n            \n                @\n\n                \n            \n\n           \n\n            \n                \n                    \n                \n                \n\n            \n            \n            \n                 Book\n                        \n        \n        \n            \n        \n\n    \n\n\n\n\n\n    \n\n    \n                \n                    ./room-booking.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Room booking                                          @                                                                                                                                                                            Book                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'footer'},{'name': 'GalleryComponent', 'selector': 'gallery'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'MembershipComponent', 'selector': 'membership'},{'name': 'PopUpComponent', 'selector': 'pop-up'},{'name': 'RegisterComponent', 'selector': 'register'},{'name': 'RoomBookingComponent', 'selector': 'room-booking'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [{'name': 'CompareDirective', 'selector': '[compareTo]'},{'name': 'UniqueEmailDirective', 'selector': '[uniqueEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'RoomBookingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SearchPipe.html":{"url":"pipes/SearchPipe.html","title":"pipe - SearchPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SearchPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/shared/pipes/search.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Search pipe\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        search\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(bookings: Booking[] | undefined, search: string, ...args: [])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/pipes/search.pipe.ts:18\n                \n            \n\n\n            \n                \n                    transform method\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookings\n                                    \n                                                Booking[] | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    search\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Booking[]\n\n                    \n                    \n                        Booking array\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Booking } from '../../booking/models/booking';\n\n/**\n * Search pipe\n */\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n  /**\n   * transform method \n   * @param bookings \n   * @param search \n   * @param args \n   * @returns Booking array\n   */\n  transform(bookings: Booking[]|undefined,search:string, ...args: unknown[]): Booking[] {\n    return bookings!.filter(booking=>booking.bookingDate.includes(search));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_declarations\n\n\n\n\nPopUpComponent\n\nPopUpComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nPopUpComponent->SharedModule\n\n\n\n\n\nSearchPipe\n\nSearchPipe\n\nSharedModule -->\n\nSearchPipe->SharedModule\n\n\n\n\n\nPopUpComponent \n\nPopUpComponent \n\nPopUpComponent  -->\n\nSharedModule->PopUpComponent \n\n\n\n\n\nSearchPipe \n\nSearchPipe \n\nSearchPipe  -->\n\nSharedModule->SearchPipe \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nSharedModule -->\n\nAppRoutingModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PopUpComponent\n                        \n                        \n                            SearchPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PopUpComponent\n                        \n                        \n                            SearchPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AppRoutingModule } from 'src/app/app-routing.module';\nimport { PopUpComponent } from './components/pop-up/pop-up.component';\nimport { SearchPipe } from './pipes/search.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    PopUpComponent,\n    SearchPipe\n  ],\n  imports: [\n    CommonModule,\n    AppRoutingModule\n  ],\n  exports:[\n    PopUpComponent,\n    SearchPipe\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UniqueEmailDirective.html":{"url":"directives/UniqueEmailDirective.html","title":"directive - UniqueEmailDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  UniqueEmailDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/shared/directives/unique-email.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Unique Email directive\n\n            \n\n\n            \n                Implements\n            \n            \n                            AsyncValidator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_ASYNC_VALIDATORS, useExisting: UniqueEmailDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [uniqueEmail]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                registerOnValidatorChange\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/shared/directives/unique-email.directive.ts:19\n                            \n                        \n\n                \n                    \n                            constructor of UniqueEmailDirective with dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        registerOnValidatorChange\n                        \n                    \n                \n            \n            \n                \nregisterOnValidatorChange(fn: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/directives/unique-email.directive.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/directives/unique-email.directive.ts:31\n                \n            \n\n\n            \n                \n                    validate method\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | Observable\n\n                    \n                    \n                        Promise of type ValidationErrors or null, Observable of ValidationErrors or null\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Inject } from '@angular/core';\nimport { AbstractControl, AsyncValidator, AsyncValidatorFn, NG_ASYNC_VALIDATORS, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\nimport { map, Observable, of } from 'rxjs';\nimport { UserService } from '../../users/services/user.service';\n\n/**\n * Unique Email directive\n */\n@Directive({\n  selector: '[uniqueEmail]',\n  providers: [\n    { provide: NG_ASYNC_VALIDATORS, \n      useExisting: UniqueEmailDirective,\n      multi: true }\n  ]\n})\nexport class UniqueEmailDirective implements AsyncValidator {\n\n  /**\n   * constructor of UniqueEmailDirective with dependency injection\n   * @param userService \n   */\n  constructor(@Inject(\"UserService\") private userService: UserService) { }\n  /**\n   * validate method\n   * @param control \n   * @returns Promise of type ValidationErrors or null, Observable of ValidationErrors or null\n   */\n  validate(control: AbstractControl): Promise | Observable {\n    return uniqueEmailValidator(this.userService)(control);\n  }\n\n  registerOnValidatorChange?(fn: () => void): void {\n  }\n\n}\n\n/**\n * uniqueEmailValidator function for directive\n * @param userService \n * @returns AsyncValidatorFunction\n */\n\nexport const uniqueEmailValidator = (userService: UserService): AsyncValidatorFn => {\n\n  var actualValidator: AsyncValidatorFn = (control: AbstractControl)\n              : Promise | Observable => {\n    \n\n      return (>userService\n                .isEmailRegistered(control.value))\n                .pipe(\n                  map( (registered:boolean)=>{\n                    if(registered)\n                      return {uniqueEmail:{message:`duplicate email id`}};\n                    else\n                      return null;\n                  })\n                );\n\n\n    return of(null);\n  };\n\n  return actualValidator;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/users/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                User interface with necessary fields\n\n            \n\n            \n                Extends\n            \n            \n                        LoginInfo\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            aadhaarId\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            profilePic\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userBookings\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aadhaarId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aadhaarId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    aadhaarId property of type string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    name property of type string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    phone Number property of type string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profilePic\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profilePic:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    profilePic property of type string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userBookings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userBookings:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    userBookings property of any type which can be nullable\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface LoginInfo\n{\n    /**\n     * email property of type string\n     */\n    email:string;\n    /**\n     * password property of type string\n     */\n    password:string;\n}\n/**\n * User interface with necessary fields\n */\nexport interface User extends LoginInfo\n{\n    /**\n     * name property of type string\n     */\n    name:string;\n    /**\n     * profilePic property of type string\n     */\n    profilePic?:string;\n    /**\n     * phone Number property of type string\n     */\n    phoneNumber:string;\n    /**\n     * aadhaarId property of type string\n     */\n    aadhaarId:string;\n    /**\n     * userBookings property of any type which can be nullable\n     */\n    userBookings?:any;\n}\n\n/**\n * LoggedInDetails interface with user and token for authentication\n */\nexport interface LoggedInDetails\n{\n    /**\n     * user property of type User\n     */\n    user:User;\n    /**\n     * token property of type string\n     */\n    token:string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/users/components/user-profile/user-profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        User Profile Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-profile\n            \n\n            \n                styleUrls\n                ./user-profile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                booking\n                            \n                            \n                                bookingId\n                            \n                            \n                                    Optional\n                                details\n                            \n                            \n                                id\n                            \n                            \n                                search\n                            \n                            \n                                updateBooking\n                            \n                            \n                                updatevisible\n                            \n                            \n                                    Optional\n                                user\n                            \n                            \n                                    Optional\n                                userBookings\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                edit\n                            \n                            \n                                handleCancel\n                            \n                            \n                                handleClick\n                            \n                            \n                                handleEdit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showPopup\n                            \n                            \n                                updateBookings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, activatedRoute: ActivatedRoute, bookingService: BookingService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bookingService\n                                                  \n                                                        \n                                                                        BookingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        edit\n                        \n                    \n                \n            \n            \n                \nedit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:82\n                \n            \n\n\n            \n                \n                    This method sets the visibility of edit pop up to true.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleCancel\n                        \n                    \n                \n            \n            \n                \nhandleCancel(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:93\n                \n            \n\n\n            \n                \n                    This method gets the booking id to cancel and call popup method\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleClick\n                        \n                    \n                \n            \n            \n                \nhandleClick(confirmation: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:116\n                \n            \n\n\n            \n                \n                    This method cancel the booking based on the confirmation value passed\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    confirmation\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleEdit\n                        \n                    \n                \n            \n            \n                \nhandleEdit(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:105\n                \n            \n\n\n            \n                \n                    This method gets the booking id to edit and call edit method\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:55\n                \n            \n\n\n            \n                \n                    This method is called to initializes the component with logged in user details\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPopup\n                        \n                    \n                \n            \n            \n                \nshowPopup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBookings\n                        \n                    \n                \n            \n            \n                \nupdateBookings(confirmation: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:155\n                \n            \n\n\n            \n                \n                    This method update the booking based on the confirmation value passed\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    confirmation\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        booking\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:20\n                        \n                    \n\n            \n                \n                    Value of booking\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bookingId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:88\n                        \n                    \n\n            \n                \n                    Value of booking Id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggedInDetails\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:34\n                        \n                    \n\n            \n                \n                    Declaring details variable of type LoggedInDetails\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:42\n                        \n                    \n\n            \n                \n                    id variable of type string\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:46\n                        \n                    \n\n            \n                \n                    search variable with empty string\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBooking\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BookingDetails\n\n                    \n                \n                \n                    \n                        Default value : {\n   userId:'',\n   numberOfDaysStay:1\n\n }\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:145\n                        \n                    \n\n            \n                \n                    updateBooking value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatevisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:74\n                        \n                    \n\n            \n                \n                    updatevisible variable for popup visibility - edit booking\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:38\n                        \n                    \n\n            \n                \n                    user variable of type User\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        userBookings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Booking[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:50\n                        \n                    \n\n            \n                \n                    userBookings variable of type Booking[]\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:70\n                        \n                    \n\n            \n                \n                    visible variable for popup visibility - cancel booking\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Booking, BookingDetails } from \"src/app/modules/booking/models/booking\";\nimport { BookingService } from \"src/app/modules/booking/services/booking.service\";\nimport { LoggedInDetails, User } from \"../../models/user\";\nimport { UserService } from \"../../services/user.service\";\n\n/**\n * User Profile Component\n */\n@Component({\n  selector:\"user-profile\",\n  templateUrl:\"./user-profile.component.html\",\n  styleUrls:['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n  /**\n   * Value of booking\n   */\n  booking: any;\n  /*\n  * Constructor for User-profile Component with dependency injection\n  */\n  constructor(\n    @Inject(\"UserService\") private userService: UserService,\n    private activatedRoute: ActivatedRoute,\n    @Inject(\"BookingService\") private bookingService: BookingService,\n    private router: Router\n  ) { }\n\n  /**\n   * Declaring details variable of type LoggedInDetails\n   */\n  details?: LoggedInDetails;\n  /**\n   * user variable of type User\n   */\n  user?: User;\n  /**\n   * id variable of type string \n   */\n  id: string = '';\n  /**\n   * search variable with empty string\n   */\n  search='';\n  /**\n   * userBookings variable of type Booking[]\n   */\n  userBookings?:Booking[];\n\n  /**\n   * This method is called to initializes the component with logged in user details\n   */\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(params => {\n\n      this.id = params[\"id\"];\n\n    })\n    this.userService.getUserByEmail(this.id).subscribe(user => {\n      this.user = user;\n      console.log(this.user);\n      this.userBookings=this.user.userBookings;\n    })\n  }\n  /**\n   * visible variable for popup visibility - cancel booking\n   */\n  visible: boolean = false;\n  /**\n   * updatevisible variable for popup visibility - edit booking\n   */\n  updatevisible:boolean=false;\n  // This method sets the visibility of cancel pop up to true. \n  showPopup() {\n    this.visible = true;\n  }\n  /**\n   * This method sets the visibility of edit pop up to true. \n   */\n  edit(){\n    this.updatevisible=true;\n  }\n  /**\n   * Value of booking Id\n   */\n  bookingId:number=1;\n  /**\n   * This method gets the booking id to cancel and call popup method\n   * @param {number} id \n   */\n  handleCancel(id: number) {\n    this.showPopup();\n    console.log(\"cancel clicked\");\n    console.log(id);\n    this.bookingId =id;\n\n  }\n\n  /**\n   * This method gets the booking id to edit and call edit method\n   * @param {number} id  \n   */\n  handleEdit(id: number) {\n    this.edit();\n    this.bookingId=id;\n\n  }\n\n  /**\n   * This method cancel the booking based on the confirmation value passed\n   * @param confirmation \n   * \n   */\n  handleClick(confirmation: boolean) {\n    console.log(confirmation);\n    if (!confirmation) {\n      this.visible = false;\n      return;\n    }\n    if(confirmation == true){\n\n      this.bookingService.cancelBooking(this.bookingId).subscribe(()=>{\n\n       console.log(\"booking cancelled\")\n\n       this.userService.getUserByEmail(this.id).subscribe(user => {\n\n         this.user = user;\n\n         console.log(this.user);\n\n         this.userBookings=this.user.userBookings;\n\n       })\n     }\n      )\n   }\n\n }\n /**\n  * updateBooking value\n  */\n updateBooking:BookingDetails={\n   userId:'',\n   numberOfDaysStay:1\n\n }\n\n /**\n  * This method update the booking based on the confirmation value passed\n  * @param confirmation \n  */\n updateBookings(confirmation:boolean){\n  if(confirmation){\n      this.updateBooking.userId = this.user!.email\n      this.bookingService.updateBooking(this.updateBooking,this.bookingId).subscribe(x=>{\n        console.log(\"booking updated\" , x);\n        this.userService.getUserByEmail(this.id).subscribe(user => {\n          this.user = user;\n          console.log(this.user);\n          this.userBookings=this.user.userBookings;\n        })\n      });\n      }\n}\n\n}\n    \n\n    \n        \n    \n        \n    \n    \n        Name : {{user!.name}}\n        Email: {{user!.email}}\n        Phone number: {{user!.phoneNumber}}\n        Aadhaar Id: {{user!.aadhaarId}}\n    \n\n\n\n\n    My Bookings\n    \n    \n\n        \n\n        \n\n            Search\n\n        \n\n    \n\n    \n        \n            \n                \n                    Booking ID \n                    No. of Days of Stay\n                    Booking Date\n                    Price \n                    Action\n                \n            \n            \n                \n                    {{bookings.id}}\n                    {{bookings.numberOfDaysStay}}\n                    {{bookings.bookingDate | date : 'longDate'}} \n                    {{bookings.price | currency:'INR'}}\n\n                    \n                        cancel  &nbsp;&nbsp;\n                        edit\n                    \n\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n    \n    \n        \n        \n\n            Room booking\n            \n\n                \n                    @\n\n                    \n                \n\n                \n                    \n                        \n                    \n                    \n\n                \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./user-profile.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Name : {{user!.name}}        Email: {{user!.email}}        Phone number: {{user!.phoneNumber}}        Aadhaar Id: {{user!.aadhaarId}}        My Bookings                                    Search                                                                        Booking ID                     No. of Days of Stay                    Booking Date                    Price                     Action                                                                            {{bookings.id}}                    {{bookings.numberOfDaysStay}}                    {{bookings.bookingDate | date : \\'longDate\\'}}                     {{bookings.price | currency:\\'INR\\'}}                                            cancel                            edit                                                                                                Room booking                                                @                                                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'footer'},{'name': 'GalleryComponent', 'selector': 'gallery'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'MembershipComponent', 'selector': 'membership'},{'name': 'PopUpComponent', 'selector': 'pop-up'},{'name': 'RegisterComponent', 'selector': 'register'},{'name': 'RoomBookingComponent', 'selector': 'room-booking'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [{'name': 'CompareDirective', 'selector': '[compareTo]'},{'name': 'UniqueEmailDirective', 'selector': '[uniqueEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserService.html":{"url":"interfaces/UserService.html","title":"interface - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/users/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for User with essential methods\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getAuthenticationHeader\n                                    \n                                \n                                \n                                    \n                                        getLoggedInUser\n                                    \n                                \n                                \n                                    \n                                        getUserByEmail\n                                    \n                                \n                                \n                                    \n                                        getUserStatusAnnouncement\n                                    \n                                \n                                \n                                    \n                                        isEmailRegistered\n                                    \n                                \n                                \n                                    \n                                        login\n                                    \n                                \n                                \n                                    \n                                        logOut\n                                    \n                                \n                                \n                                    \n                                        register\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthenticationHeader\n                        \n                    \n                \n            \n            \n                \ngetAuthenticationHeader()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/user.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoggedInUser\n                        \n                    \n                \n            \n            \n                \ngetLoggedInUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/user.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LoggedInDetails | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserByEmail\n                        \n                    \n                \n            \n            \n                \ngetUserByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/user.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserStatusAnnouncement\n                        \n                    \n                \n            \n            \n                \ngetUserStatusAnnouncement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/user.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Subject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEmailRegistered\n                        \n                    \n                \n            \n            \n                \nisEmailRegistered(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/user.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginInfo: LoginInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/user.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginInfo\n                                    \n                                                LoginInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/user.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/user.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable, Subject } from \"rxjs\";\nimport { LoggedInDetails, LoginInfo, User } from \"../models/user\";\n\n/**\n * Interface for User with essential methods\n */\nexport interface UserService\n{\n    \n    login(loginInfo:LoginInfo):Observable;\n\n    register(user:User):Observable;\n\n    isEmailRegistered(email:string):Observable;\n\n    getUserStatusAnnouncement():Subject;\n\n    logOut():Observable;\n\n    getAuthenticationHeader():any;\n\n    getLoggedInUser():LoggedInDetails|undefined;\n    \n    getUserByEmail(email:string):Observable;\n\n    \n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_declarations\n\n\n\ncluster_UsersModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nLoginComponent->UsersModule\n\n\n\n\n\nMembershipComponent\n\nMembershipComponent\n\nUsersModule -->\n\nMembershipComponent->UsersModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nUsersModule -->\n\nRegisterComponent->UsersModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nUsersModule -->\n\nUserProfileComponent->UsersModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nUsersModule->LoginComponent \n\n\n\n\n\nMembershipComponent \n\nMembershipComponent \n\nMembershipComponent  -->\n\nUsersModule->MembershipComponent \n\n\n\n\n\nRegisterComponent \n\nRegisterComponent \n\nRegisterComponent  -->\n\nUsersModule->RegisterComponent \n\n\n\n\n\nUserProfileComponent \n\nUserProfileComponent \n\nUserProfileComponent  -->\n\nUsersModule->UserProfileComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nUsersModule -->\n\nSharedModule->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/users/users.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Users module with it components declarations, export and importing modules\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            MembershipComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            UserProfileComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            MembershipComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            UserProfileComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n//import { RoomBookingComponent } from './components/room-booking/room-booking.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpUserService } from './services/http-user-service';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { MembershipComponent } from './components/membership/membership.component';\nimport { RouterModule } from '@angular/router';\nimport { UserProfileComponent } from './components/user-profile/user-profile.component';\nimport { SharedModule } from '../shared/shared.module';\n\n\n/**\n * Users module with it components declarations, export and importing modules\n */\n\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RegisterComponent,\n    MembershipComponent,\n    UserProfileComponent\n \n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    ReactiveFormsModule,\n    HttpClientModule ,\n    SharedModule\n    \n  ],\n  exports:[\n    LoginComponent,\n    RegisterComponent,\n    MembershipComponent,\n    UserProfileComponent\n\n\n  ]\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                server-data/db-data.ts\n            \n            variable\n            dummybookings\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                server-data/db-data.ts\n            \n            variable\n            dummybookingsmock\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                server-data/db-data.ts\n            \n            variable\n            dummyUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                server-data/db-data.ts\n            \n            variable\n            loggedIn\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                server-data/db-data.ts\n            \n            variable\n            loggedInDetails\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                server-data/db-data.ts\n            \n            variable\n            login\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/modules/booking/components/gallery/gallery.component.ts\n            \n            component\n            GalleryComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/booking/components/room-booking/room-booking.component.ts\n            \n            component\n            RoomBookingComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/modules/booking/models/booking.ts\n            \n            interface\n            Booking\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/modules/booking/models/booking.ts\n            \n            interface\n            BookingDetails\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/modules/booking/services/booking.service.ts\n            \n            interface\n            BookingService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/modules/booking/services/http-booking-service.ts\n            \n            injectable\n            HttpBookingService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/modules/booking/services/http-booking-service.ts\n            \n            variable\n            url\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/core/components/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/modules/core/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/modules/core/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/modules/core/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/modules/core/interceptors/cache-interceptor.service.ts\n            \n            interceptor\n            CacheInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/modules/core/interceptors/interceptor.service.ts\n            \n            injectable\n            InterceptorService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/modules/core/services/http-cache.service.ts\n            \n            injectable\n            HttpCacheService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/modules/shared/components/pop-up/pop-up.component.ts\n            \n            component\n            PopUpComponent\n            \n                53 %\n                (7/13)\n            \n        \n        \n            \n                \n                src/app/modules/shared/directives/compare.directive.ts\n            \n            directive\n            CompareDirective\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/directives/compare.directive.ts\n            \n            variable\n            compare\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/directives/unique-email.directive.ts\n            \n            directive\n            UniqueEmailDirective\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/modules/shared/directives/unique-email.directive.ts\n            \n            variable\n            uniqueEmailValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/pipes/search.pipe.ts\n            \n            pipe\n            SearchPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/users/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/modules/users/components/membership/membership.component.ts\n            \n            component\n            MembershipComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/modules/users/components/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/modules/users/components/user-profile/user-profile.component.ts\n            \n            component\n            UserProfileComponent\n            \n                89 %\n                (17/19)\n            \n        \n        \n            \n                \n                src/app/modules/users/models/user.ts\n            \n            interface\n            LoggedInDetails\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/modules/users/models/user.ts\n            \n            interface\n            LoginInfo\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/modules/users/models/user.ts\n            \n            interface\n            User\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/modules/users/services/http-user-service.ts\n            \n            injectable\n            HttpUserService\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/modules/users/services/http-user-service.ts\n            \n            variable\n            baseUrl\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/users/services/user.service.ts\n            \n            interface\n            UserService\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^14.0.0\n        \n            @angular/common : ^14.0.0\n        \n            @angular/compiler : ^14.0.0\n        \n            @angular/core : ^14.0.0\n        \n            @angular/forms : ^14.0.0\n        \n            @angular/platform-browser : ^14.0.0\n        \n            @angular/platform-browser-dynamic : ^14.0.0\n        \n            @angular/router : ^14.0.0\n        \n            @fortawesome/fontawesome-free : ^6.2.0\n        \n            @fortawesome/free-solid-svg-icons : ^6.2.0\n        \n            @ngrx/store : ^14.3.2\n        \n            @popperjs/core : ^2.11.6\n        \n            bootstrap : ^5.2.2\n        \n            jquery : ^3.6.1\n        \n            lint-staged : ^13.0.4\n        \n            ngx-logger : ^5.0.11\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.4.1\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHotelManagementClient\nThis project was generated with Angular CLI version 14.2.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BookingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_BookingModule\n\n\n\ncluster_BookingModule_declarations\n\n\n\ncluster_BookingModule_imports\n\n\n\ncluster_BookingModule_exports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_declarations\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nAppRoutingModule->SharedModule\n\n\n\n\n\nBookingModule\n\nBookingModule\n\nAppModule -->\n\nBookingModule->AppModule\n\n\n\n\n\nGalleryComponent \n\nGalleryComponent \n\nGalleryComponent  -->\n\nBookingModule->GalleryComponent \n\n\n\n\n\nRoomBookingComponent \n\nRoomBookingComponent \n\nRoomBookingComponent  -->\n\nBookingModule->RoomBookingComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nCoreModule->FooterComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nCoreModule->HeaderComponent \n\n\n\n\n\nHomeComponent \n\nHomeComponent \n\nHomeComponent  -->\n\nCoreModule->HomeComponent \n\n\n\n\n\nCacheInterceptor\n\nCacheInterceptor\n\nAppModule -->\n\nCacheInterceptor->AppModule\n\n\n\n\n\nHttpCacheService\n\nHttpCacheService\n\nAppModule -->\n\nHttpCacheService->AppModule\n\n\n\n\n\nInterceptorService\n\nInterceptorService\n\nAppModule -->\n\nInterceptorService->AppModule\n\n\n\n\n\nGalleryComponent\n\nGalleryComponent\n\nBookingModule -->\n\nGalleryComponent->BookingModule\n\n\n\n\n\nRoomBookingComponent\n\nRoomBookingComponent\n\nBookingModule -->\n\nRoomBookingComponent->BookingModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nBookingModule -->\n\nUsersModule->BookingModule\n\n\n\nCoreModule -->\n\nUsersModule->CoreModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nUsersModule->LoginComponent \n\n\n\n\n\nMembershipComponent \n\nMembershipComponent \n\nMembershipComponent  -->\n\nUsersModule->MembershipComponent \n\n\n\n\n\nRegisterComponent \n\nRegisterComponent \n\nRegisterComponent  -->\n\nUsersModule->RegisterComponent \n\n\n\n\n\nUserProfileComponent \n\nUserProfileComponent \n\nUserProfileComponent  -->\n\nUsersModule->UserProfileComponent \n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nCoreModule -->\n\nFooterComponent->CoreModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nCoreModule -->\n\nHeaderComponent->CoreModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nCoreModule -->\n\nHomeComponent->CoreModule\n\n\n\nCoreModule -->\n\nSharedModule->CoreModule\n\n\n\nUsersModule -->\n\nSharedModule->UsersModule\n\n\n\n\n\nPopUpComponent \n\nPopUpComponent \n\nPopUpComponent  -->\n\nSharedModule->PopUpComponent \n\n\n\n\n\nSearchPipe \n\nSearchPipe \n\nSearchPipe  -->\n\nSharedModule->SearchPipe \n\n\n\n\n\nPopUpComponent\n\nPopUpComponent\n\nSharedModule -->\n\nPopUpComponent->SharedModule\n\n\n\n\n\nSearchPipe\n\nSearchPipe\n\nSharedModule -->\n\nSearchPipe->SharedModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nUsersModule -->\n\nLoginComponent->UsersModule\n\n\n\n\n\nMembershipComponent\n\nMembershipComponent\n\nUsersModule -->\n\nMembershipComponent->UsersModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nUsersModule -->\n\nRegisterComponent->UsersModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nUsersModule -->\n\nUserProfileComponent->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            baseUrl   (src/.../http-user-service.ts)\n                        \n                        \n                            compare   (src/.../compare.directive.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            dummybookings   (server-data/.../db-data.ts)\n                        \n                        \n                            dummybookingsmock   (server-data/.../db-data.ts)\n                        \n                        \n                            dummyUser   (server-data/.../db-data.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            loggedIn   (server-data/.../db-data.ts)\n                        \n                        \n                            loggedInDetails   (server-data/.../db-data.ts)\n                        \n                        \n                            login   (server-data/.../db-data.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            uniqueEmailValidator   (src/.../unique-email.directive.ts)\n                        \n                        \n                            url   (src/.../http-booking-service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/modules/users/services/http-user-service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://localhost:5000/api/users'\n                    \n                \n\n            \n                \n                    API url for users\n\n                \n            \n\n        \n    \n\n    src/app/modules/shared/directives/compare.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        compare\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (password:string, confirmPassword:string):ValidatorFn =>{\n\n  return control =>{\n    var c1 = control.get(password);\n    var c2 = control.get(confirmPassword);\n    var v1 = c1!.value;\n    var v2 = c2!.value;\n\n    if(v1 === v2)\n      return null;\n    else\n      return {compare:{message:`The fields ${password} and ${confirmPassword} don't match`}};\n  }\n\n}\n                    \n                \n\n            \n                \n                    compare method which can be exported\n\n                \n            \n\n        \n    \n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n            \n                \n                    context constant\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n            \n                \n                    require constant\n\n                \n            \n\n        \n    \n\n    server-data/db-data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dummybookings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\"id\":1,\"userId\":\"srilakshmi27272@gmail.com\",\"numberOfDaysStay\":2,\"price\":1000,\"bookingDate\":\"2022-11-14T00:00:00\"},\n    {\"id\":1,\"userId\":\"srilakshmi27272@gmail.com\",\"numberOfDaysStay\":3,\"price\":1500,\"bookingDate\":\"2022-11-16T00:00:00\"}\n]\n                    \n                \n\n            \n                \n                    dummybookings array for unit testing\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dummybookingsmock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : [\n     {\"id\":1,\"userId\":\"srilakshmi27272@gmail.com\",\"numberOfDaysStay\":7,\"price\":1000,\"bookingDate\":\"2022-11-14T00:00:00\"}\n ]\n                    \n                \n\n            \n                \n                    dummybookingsmock for unit testing\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dummyUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    name:\"Srilakshmi\",\n    profilePic:\"https://www.bing.com/th?id=OIP.4lvhDGxwRYkur9Z5jeia7AHaFg&w=150&h=112&c=8&rs=1&qlt=90&o=6&dpr=1.5&pid=3.1&rm=2\",\n    phoneNumber:\"9137846733\",\n    aadhaarId:\"234786345612\",\n    email:\"srilakshmi27272@gmail.com\",\n    password:\"1234\"\n    }\n                    \n                \n\n            \n                \n                    mock user details\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    user:{\n        name:\"srilakshmi\",\n        profilePic:\"https://www.bing.com/th?id=OIP.4lvhDGxwRYkur9Z5jeia7AHaFg&w=150&h=112&c=8&rs=1&qlt=90&o=6&dpr=1.5&pid=3.1&rm=2\",\n        phoneNumber:\"9137846733\",\n        aadhaarId:\"234786345612\",\n        email:\"srilakshmi27272@gmail.com\",\n        password:\"1234\"\n        }   ,\n        token:\"qwertyui\" \n }\n                    \n                \n\n            \n                \n                    mock loggedIn details\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggedInDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : [{\n   user:{\n    email:\"srilakshmi27272@gmail.com\",\n    password:\"1234\",\n   },\n    token:\"asdfghjkl\"\n }\n ]\n                    \n                \n\n            \n                \n                    loggedInDetails mock data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n     \n     email:\"srilakshmi27272@gmail.com\",\n     password:\"1234\"\n }\n                    \n                \n\n            \n                \n                    mock login details\n\n                \n            \n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  logging:{\n    level:NgxLoggerLevel.TRACE,\n    serverLogLevel:NgxLoggerLevel.TRACE,\n    serverLoggingUrl: 'https://localhost:5000/api/logs',\n    disableConsoleLogging: false\n  }\n}\n                    \n                \n\n            \n                \n                    environment object with logging settings and production mode\n\n                \n            \n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  logging:{\n    level:NgxLoggerLevel.TRACE,\n    serverLogLevel:NgxLoggerLevel.TRACE,\n    serverLoggingUrl: 'https://localhost:5000/api/logs',\n    disableConsoleLogging: false\n  }\n}\n                    \n                \n\n            \n                \n                    environment object with logging settings and production mode\n\n                \n            \n\n        \n    \n\n    src/app/modules/shared/directives/unique-email.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        uniqueEmailValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (userService: UserService): AsyncValidatorFn => {\n\n  var actualValidator: AsyncValidatorFn = (control: AbstractControl)\n              : Promise | Observable => {\n    \n\n      return (>userService\n                .isEmailRegistered(control.value))\n                .pipe(\n                  map( (registered:boolean)=>{\n                    if(registered)\n                      return {uniqueEmail:{message:`duplicate email id`}};\n                    else\n                      return null;\n                  })\n                );\n\n\n    return of(null);\n  };\n\n  return actualValidator;\n}\n                    \n                \n\n            \n                \n                    uniqueEmailValidator function for directive\n\n                \n            \n\n        \n    \n\n    src/app/modules/booking/services/http-booking-service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://localhost:5000/api/bookings\"\n                    \n                \n\n            \n                \n                    API url for bookings\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
