var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.549,1,1.016]],["body/components/AppComponent.html",[0,0.976,1,1.86,2,1.624,3,0.24,4,0.209,5,1.373,6,1.373,7,1.373,8,1.373,9,0.209,10,2.991,11,0.813,12,4.892,13,1.128,14,2.33,15,1.963,16,2.909,17,1.853,18,5.397,19,1.853,20,4.768,21,0.488,22,1.426,23,4.499,24,1.243,25,2.991,26,2.987,27,0.958,28,3.533,29,2.286,30,2.286,31,0.869,32,0.025,33,0.865,34,0.659,35,0.76,36,2.577,37,0.928,38,1.47,39,1.47,40,4.037,41,3.556,42,3.533,43,0.555,44,0.449,45,2.635,46,2.991,47,1.576,48,0.24,49,0.488,50,1.373,51,2.155,52,3.533,53,2.991,54,3.533,55,2.991,56,3.533,57,2.155,58,3.533,59,2.155,60,2.635,61,2.635,62,1.373,63,1.853,64,1.853,65,0.928,66,1.728,67,1.373,68,1.373,69,1.057,70,1.373,71,0.991,72,1.373,73,1.057,74,1.373,75,0.991,76,1.373,77,0.991,78,1.373,79,1.057,80,1.373,81,1.057,82,1.373,83,1.373,84,0.991,85,1.373,86,0.928,87,1.203,88,1.373,89,0.991,90,0.71,91,1.373,92,1.128,93,1.128,94,1.373,95,1.128,96,1.285,97,1.373,98,0.017,99,0.017]],["title/modules/AppModule.html",[100,1.756,101,2.277]],["body/modules/AppModule.html",[1,2.008,3,0.236,4,0.205,9,0.205,15,1.266,32,0.026,36,1.552,43,0.794,44,0.442,45,2.595,46,2.946,47,1.552,48,0.236,49,0.481,90,0.699,98,0.017,99,0.017,101,4.643,102,1.552,103,1.963,104,2.946,105,2.946,106,2.946,107,2.946,108,2.946,109,3.466,110,3.776,111,3.776,112,3.662,113,3.466,114,3.662,115,2.643,116,1.949,117,1.799,118,3.48,119,2.879,120,3.519,121,2.643,122,3.996,123,2.643,124,4.719,125,2.946,126,2.333,127,2.946,128,3.48,129,2.123,130,3.48,131,2.44,132,3.48,133,2.333,134,3.48,135,1.353,136,3.519,137,3.519,138,1.668,139,3.48,140,3.48,141,1.799,142,3.48,143,3.48,144,2.946,145,3.48,146,3.48,147,2.595,148,3.48,149,3.48,150,3.48,151,3.48,152,2.595,153,3.48,154,1.949,155,3.48]],["title/modules/AppRoutingModule.html",[100,1.756,109,1.902]],["body/modules/AppRoutingModule.html",[3,0.301,4,0.262,9,0.262,32,0.026,43,0.795,44,0.564,48,0.301,49,0.613,71,1.244,75,1.244,77,1.244,84,1.244,86,1.166,89,1.244,98,0.02,99,0.02,102,1.98,109,3.096,121,2.485,123,3.096,156,3.757,157,4.438,158,3.706,159,3.674,160,1.725,161,4.438,162,4.438,163,2.707,164,3.309,165,4.438,166,2.975,167,4.438,168,4.438,169,4.438,170,4.438,171,2.975,172,3.757,173,2.128,174,4.438,175,4.438,176,4.438,177,4.438,178,4.438,179,4.438,180,4.438,181,4.438,182,4.438,183,2.707,184,4.438]],["title/guards/AuthGuard.html",[166,2.277,185,2.277]],["body/guards/AuthGuard.html",[3,0.239,4,0.208,9,0.208,11,1.096,16,2.151,21,0.487,24,1.329,27,0.957,29,2.283,30,2.283,31,1.172,32,0.026,33,0.713,34,0.658,35,1.025,43,0.672,44,0.448,48,0.239,49,0.745,50,2.244,98,0.017,99,0.017,154,1.974,159,2.905,160,1.371,166,4.165,185,3.192,186,3.526,187,2.986,188,4.032,189,6.676,190,1.335,191,1.096,192,1.823,193,1.924,194,3.479,195,3.526,196,3.526,197,5.773,198,5.773,199,5.773,200,3.526,201,4.762,202,4.762,203,4.762,204,4.762,205,5.392,206,1.732,207,5.392,208,4.762,209,4.032,210,1.025,211,2.096,212,3.551,213,3.551,214,5.392,215,1.573,216,1.851,217,1.371,218,2.364,219,2.364,220,0.926,221,3.526,222,2.986,223,1.467,224,2.63,225,3.526,226,3.526,227,1.622,228,3.526,229,2.986,230,1.691,231,2.986,232,2.986,233,2.151]],["title/interfaces/Booking.html",[135,1.32,190,0.952]],["body/interfaces/Booking.html",[3,0.253,4,0.22,9,0.22,11,0.859,21,0.516,22,1.48,32,0.026,34,0.967,35,1.065,37,1.823,48,0.336,87,1.685,98,0.018,99,0.018,135,2.296,190,1.656,234,1.789,235,2.783,236,3.018,237,2.557,238,5.203,239,3.028,240,4.71,241,4.583,242,5.548,243,4.234,244,3.84,245,2.982,246,1.789,247,4.188,248,4.188,249,3.16,250,3.16,251,3.16]],["title/interfaces/BookingDetails.html",[190,0.952,246,1.629]],["body/interfaces/BookingDetails.html",[3,0.278,4,0.242,9,0.242,11,0.945,21,0.567,22,1.574,32,0.026,34,0.951,37,1.754,48,0.357,87,1.398,98,0.019,99,0.019,135,2.258,190,1.718,234,1.968,235,3.06,236,3.21,237,2.72,238,3.475,239,2.523,240,4.833,241,3.06,243,4.345,244,3.806,245,2.94,246,2.523,247,4.455,248,4.455,249,3.475,250,3.475,251,3.475,252,1.968]],["title/modules/BookingModule.html",[100,1.756,110,2.072]],["body/modules/BookingModule.html",[3,0.277,4,0.241,9,0.241,32,0.026,43,0.766,44,0.519,48,0.277,49,0.565,71,1.928,86,1.806,98,0.019,99,0.019,102,1.822,103,2.183,110,4.195,115,2.938,116,2.288,117,2.112,119,3.201,121,2.938,123,2.938,136,3.913,137,3.913,138,1.959,158,3.517,160,1.588,163,2.493,164,3.047,183,3.201,253,3.459,254,3.459,255,3.459,256,3.459,257,3.625,258,4.086,259,3.517,260,2.493,261,3.459,262,4.086,263,3.459]],["title/interfaces/BookingService.html",[190,0.952,264,1.902]],["body/interfaces/BookingService.html",[3,0.24,4,0.209,9,0.209,11,0.815,21,0.489,27,1.213,31,1.423,32,0.026,33,0.866,34,0.86,35,1.245,43,0.556,48,0.24,50,2.347,98,0.017,99,0.017,135,2.547,190,1.515,191,1.331,206,2.351,210,1.3,211,2.633,217,1.376,227,1.626,234,1.697,239,3.048,245,2.98,246,3.1,264,2.673,265,2.997,266,4.774,267,4.774,268,4.896,269,4.896,270,5.267,271,4.896,272,3.56,273,4.042,274,3.54,275,4.042,276,3.54,277,3.54,278,3.56,279,4.042,280,3.54,281,2.997,282,3.54,283,2.64,284,3.54]],["title/interceptors/CacheInterceptor.html",[112,2.072,285,2.533]],["body/interceptors/CacheInterceptor.html",[3,0.255,4,0.222,9,0.222,16,2.291,21,0.519,24,0.865,27,0.998,31,1.222,32,0.026,33,0.744,34,0.686,35,1.069,43,0.689,44,0.477,48,0.255,49,0.519,51,2.291,98,0.018,99,0.018,112,3.03,113,3.116,126,2.517,141,1.941,144,3.179,173,1.8,191,1.143,210,0.808,211,2.163,216,1.93,217,1.46,219,2.517,220,0.986,227,1.895,286,3.755,287,4.711,288,3.179,289,4.205,290,3.755,291,3.755,292,3.755,293,4.966,294,5.013,295,4.149,296,5.013,297,3.755,298,3.755,299,3.179,300,4.966,301,4.711,302,2.517,303,3.179,304,3.755,305,3.179,306,3.755,307,3.73,308,3.755,309,3.755,310,5.214,311,3.755,312,4.966,313,3.755,314,4.966,315,3.755,316,4.966,317,4.128,318,1.941,319,3.755,320,3.755,321,3.755,322,3.755,323,3.755,324,3.755,325,3.755,326,3.755,327,3.179,328,1.941,329,3.755,330,1.675,331,3.755,332,3.755,333,3.755,334,3.755,335,3.755,336,3.179]],["title/directives/CompareDirective.html",[65,0.892,93,1.084]],["body/directives/CompareDirective.html",[3,0.281,4,0.244,9,0.244,13,1.321,14,1.803,24,1.343,27,0.832,32,0.026,37,1.39,43,0.616,44,0.526,48,0.359,49,0.572,50,2.057,65,1.39,66,1.839,92,1.321,93,1.862,98,0.019,99,0.019,120,3.946,138,1.985,152,3.088,154,2.318,173,1.985,206,1.506,210,0.891,227,1.987,237,2.141,337,3.088,338,4.481,339,3.506,340,3.506,341,5.292,342,4.14,343,3.088,344,3.506,345,3.946,346,4.14,347,4.14,348,4.14,349,4.14,350,3.547,351,3.506,352,2.736,353,4.481,354,3.088,355,2.526,356,3.506,357,3.088,358,3.506,359,3.506,360,3.506,361,3.506,362,3.506,363,3.506,364,4.481,365,3.506,366,3.506,367,3.088,368,3.506,369,3.506,370,3.506]],["title/modules/CoreModule.html",[100,1.756,111,2.072]],["body/modules/CoreModule.html",[3,0.264,4,0.23,9,0.23,32,0.026,43,0.768,44,0.494,48,0.264,49,0.537,69,2.042,73,2.042,75,1.914,98,0.018,99,0.018,102,1.735,103,2.114,111,4.251,115,2.845,116,2.177,117,2.01,119,3.1,121,2.845,123,2.845,158,3.406,160,1.512,183,3.1,257,3.577,259,3.406,260,2.372,263,3.292,371,3.292,372,3.292,373,3.292,374,3.292,375,3.577,376,3.889,377,3.889,378,3.889,379,3.889,380,3.292]],["title/components/FooterComponent.html",[0,0.549,69,1.016]],["body/components/FooterComponent.html",[0,0.989,1,1.099,2,1.667,3,0.249,4,0.217,5,1.428,6,1.428,7,1.428,8,1.428,9,0.217,11,0.846,13,1.172,14,2.341,15,1.336,17,1.902,19,1.902,21,0.508,24,1.267,27,0.983,32,0.025,33,0.824,43,0.427,44,0.467,48,0.249,49,0.508,57,2.241,60,2.739,61,3.649,62,1.428,63,1.902,64,1.902,65,0.965,66,1.756,67,1.428,68,1.428,69,1.756,70,1.428,71,1.03,72,1.428,73,1.099,74,1.428,75,1.03,76,1.428,77,1.03,78,1.428,79,1.099,80,1.428,81,1.099,82,1.428,83,1.428,84,1.03,85,1.428,86,0.965,87,1.251,88,1.428,89,1.03,90,0.738,91,1.428,92,1.172,93,1.172,94,1.428,95,1.172,96,1.336,97,1.428,98,0.018,99,0.018,191,1.127,210,0.791,220,1.286,381,3.11,382,5.869,383,2.29,384,5.504,385,4.894,386,2.442,387,3.673,388,3.673,389,1.667,390,4.894,391,3.673,392,2.739,393,3.673,394,3.673,395,2.462,396,4.894,397,2.462,398,2.739,399,2.739,400,3.673,401,3.673,402,3.11,403,3.11,404,3.11,405,2.739,406,3.673,407,3.673,408,3.673,409,3.28,410,3.673,411,2.462,412,3.11,413,2.739,414,3.673]],["title/components/GalleryComponent.html",[0,0.549,71,0.952]],["body/components/GalleryComponent.html",[0,1.007,1,1.163,2,1.731,3,0.264,4,0.23,5,1.512,6,1.512,7,1.512,8,1.512,9,0.23,11,0.895,13,1.241,14,2.358,15,1.414,17,1.975,19,1.975,24,0.895,32,0.026,33,0.848,43,0.453,44,0.494,48,0.264,49,0.537,62,1.512,63,1.975,64,1.975,65,1.022,66,1.796,67,1.512,68,1.512,69,1.163,70,1.512,71,1.683,72,1.512,73,1.163,74,1.512,75,1.09,76,1.512,77,1.09,78,1.512,79,1.163,80,1.512,81,1.163,82,1.512,83,1.512,84,1.09,85,1.512,86,1.022,87,1.324,88,1.512,89,1.09,90,0.781,91,1.512,92,1.241,93,1.241,94,1.512,95,1.241,96,1.414,97,1.512,98,0.018,99,0.018,220,1.335,383,2.355,386,1.618,389,1.324,415,3.889,416,3.292,417,5.082,418,5.661,419,5.082,420,3.889,421,3.889,422,3.889,423,4.303,424,3.889]],["title/components/HeaderComponent.html",[0,0.549,73,1.016]],["body/components/HeaderComponent.html",[0,0.988,1,1.094,2,1.663,3,0.248,4,0.216,5,1.422,6,1.422,7,1.422,8,1.422,9,0.216,11,0.842,13,1.168,14,2.34,15,1.331,17,1.897,19,1.897,21,0.506,23,4.683,24,1.265,27,1.104,32,0.025,33,0.823,34,0.506,37,0.961,38,1.522,39,1.522,40,3.098,41,3.64,43,0.426,44,0.465,48,0.248,49,0.506,62,1.422,63,1.897,64,1.897,65,0.961,66,1.753,67,1.422,68,1.422,69,1.094,70,1.422,71,1.026,72,1.422,73,1.753,74,1.422,75,1.026,76,1.422,77,1.026,78,1.422,79,1.094,80,1.422,81,1.094,82,1.422,83,1.422,84,1.026,85,1.422,86,0.961,87,1.246,88,1.422,89,1.026,90,0.735,91,1.422,92,1.168,93,1.168,94,1.422,95,1.168,96,1.331,97,1.422,98,0.018,99,0.018,191,1.124,210,0.787,220,1.282,244,2.733,383,2.285,386,2.438,389,1.663,417,4.133,425,3.098,426,4.962,427,5.493,428,4.881,429,4.133,430,4.881,431,4.37,432,3.658,433,3.658,434,3.658,435,3.658]],["title/components/HomeComponent.html",[0,0.549,75,0.952]],["body/components/HomeComponent.html",[0,0.928,1,1.039,2,1.605,3,0.236,4,0.205,5,1.35,6,1.35,7,1.35,8,1.35,9,0.205,11,0.8,13,1.109,14,2.325,15,1.263,17,1.832,19,1.832,21,0.48,24,1.232,25,2.941,26,2.766,27,0.947,29,2.26,30,2.26,31,0.855,32,0.026,33,0.859,34,0.48,35,0.748,36,2.676,43,0.549,44,0.441,45,2.59,47,1.549,48,0.236,49,0.48,50,1.35,51,2.119,59,2.119,60,2.59,62,1.35,63,1.832,64,1.832,65,0.913,66,1.716,67,1.35,68,1.35,69,1.039,70,1.35,71,0.974,72,1.35,73,1.039,74,1.35,75,1.734,76,1.35,77,0.974,78,1.35,79,1.039,80,1.35,81,1.039,82,1.35,83,1.35,84,0.974,85,1.35,86,0.913,87,1.183,88,1.35,89,0.974,90,0.698,91,1.35,92,1.109,93,1.109,94,1.35,95,1.109,96,1.263,97,1.35,98,0.017,99,0.017,191,1.085,210,0.748,220,1.238,383,2.226,386,2.387,389,1.605,402,2.941,405,2.59,411,2.328,412,2.941,436,2.941,437,4.713,438,5.35,439,4.713,440,3.473,441,3.473,442,1.945,443,3.473,444,3.473,445,3.473,446,3.473,447,2.59,448,3.473,449,4.713,450,3.473,451,3.473,452,3.473,453,3.473,454,3.473,455,3.473,456,3.473,457,3.473,458,3.473]],["title/injectables/HttpBookingService.html",[133,2.277,216,1.32]],["body/injectables/HttpBookingService.html",[3,0.166,4,0.144,9,0.144,11,0.563,21,0.338,24,1.125,26,2.274,27,1.105,29,1.757,30,1.757,31,1.288,32,0.026,33,0.784,34,0.724,35,1.127,36,2.18,43,0.663,44,0.311,47,1.09,48,0.166,49,0.608,50,2.28,98,0.013,99,0.013,131,2.948,133,3.276,135,2.653,141,1.263,173,1.171,191,0.844,193,1.872,206,2.353,210,1.315,211,2.578,215,1.09,216,1.425,217,0.95,218,1.638,220,0.642,223,1.83,227,1.783,239,2.636,245,2.616,246,2.734,252,2.343,264,2.052,268,3.724,269,3.724,270,4.433,271,3.724,272,3.28,273,3.103,275,3.103,279,3.103,281,3.103,283,1.822,302,1.638,307,4.095,318,1.895,328,3.032,442,1.368,459,1.491,460,4.252,461,1.638,462,3.665,463,2.069,464,3.644,465,2.443,466,4.397,467,2.443,468,4.556,469,3.103,470,3.103,471,2.443,472,3.665,473,4.252,474,3.103,475,2.443,476,3.665,477,2.463,478,2.443,479,3.665,480,3.103,481,3.724,482,2.443,483,3.103,484,3.665,485,1.638,486,2.443,487,2.069,488,2.443,489,1.638,490,5.236,491,2.443,492,2.443,493,2.443,494,2.443,495,2.443,496,2.443]],["title/injectables/HttpCacheService.html",[113,1.902,216,1.32]],["body/injectables/HttpCacheService.html",[3,0.27,4,0.234,9,0.234,16,2.423,21,0.549,22,1.541,24,1.317,27,1.26,31,1.268,32,0.026,33,0.772,34,0.79,35,1.109,37,1.59,38,1.652,39,2.143,43,0.6,44,0.505,48,0.27,49,0.549,98,0.019,99,0.019,113,2.885,141,2.054,191,1.186,210,1.231,216,2.003,219,2.662,223,2.379,227,1.353,301,5.124,310,3.363,317,4.203,318,2.957,389,1.755,459,2.423,466,2.662,483,4.362,497,5.44,498,3.363,499,5.152,500,5.719,501,5.152,502,3.972,503,3.972,504,3.972,505,3.972,506,3.972,507,3.972,508,3.972,509,3.972,510,3.972,511,3.972,512,5.152,513,3.972,514,3.972,515,3.972,516,3.972,517,2.662,518,3.972,519,3.972]],["title/injectables/HttpUserService.html",[129,2.072,216,1.32]],["body/injectables/HttpUserService.html",[3,0.268,4,0.098,9,0.098,11,0.382,21,0.229,22,0.809,24,0.788,26,1.77,27,1.184,29,1.296,30,1.296,31,1.211,32,0.026,33,0.737,34,0.71,35,1.143,36,1.527,37,1.293,38,0.689,39,0.689,41,2.016,43,0.543,44,0.211,47,0.739,48,0.112,49,0.473,50,1.691,51,1.011,55,1.403,66,0.809,90,1.385,98,0.01,99,0.01,129,1.649,131,2.823,141,0.857,173,0.795,191,0.909,193,0.863,206,2.393,210,1.373,211,2.48,216,1.051,217,0.644,220,0.899,223,0.689,227,1.976,230,2.546,233,1.011,252,2.824,278,2.946,302,1.812,307,3.823,317,1.812,318,0.857,327,2.289,328,2.654,330,1.206,336,1.403,389,1.166,426,2.289,442,0.928,459,1.011,461,1.111,463,1.403,464,2.553,466,4.048,468,4.072,469,3.344,473,1.236,474,3.344,485,1.111,520,4.451,521,3.344,522,4.351,523,2.703,524,4.351,525,3.344,526,3.684,527,2.899,528,2.917,529,2.289,530,2.946,531,2.295,532,3.424,533,2.703,534,3.95,535,3.95,536,1.657,537,3.424,538,1.657,539,2.289,540,3.95,541,4.624,542,2.703,543,1.657,544,3.245,545,1.657,546,3.828,547,2.648,548,3.95,549,2.648,550,2.703,551,1.657,552,2.048,553,3.661,554,2.703,555,2.289,556,1.657,557,1.942,558,1.657,559,2.703,560,3.684,561,2.289,562,1.657,563,2.289,564,2.289,565,2.238,566,1.657,567,2.703,568,3.344,569,2.289,570,1.657,571,2.289,572,1.657,573,2.289,574,2.703,575,2.289,576,2.703,577,1.657,578,1.657,579,2.016,580,2.289,581,1.657,582,1.812,583,1.657,584,1.657,585,2.703,586,1.011,587,1.657,588,1.657,589,1.657,590,1.657,591,2.703,592,1.657,593,1.657,594,1.657,595,1.657,596,1.657,597,1.657,598,4.923,599,1.657,600,1.657,601,1.657,602,1.657,603,1.657,604,1.657,605,1.657,606,1.657,607,1.657,608,1.657,609,1.657,610,1.657,611,1.657,612,1.657,613,1.403,614,1.657,615,1.657,616,1.657,617,1.657,618,1.657,619,1.657,620,1.657,621,1.657,622,1.657,623,1.657,624,1.657,625,1.657,626,1.403,627,1.657,628,1.657,629,1.657,630,1.657,631,1.657,632,1.657,633,1.403,634,1.657,635,1.657]],["title/injectables/InterceptorService.html",[114,2.072,216,1.32]],["body/injectables/InterceptorService.html",[3,0.253,4,0.22,9,0.22,11,1.139,16,2.277,21,0.516,24,1.277,27,0.994,29,2.371,30,2.371,31,1.217,32,0.026,33,0.741,34,0.684,35,1.065,43,0.687,44,0.474,48,0.253,49,0.516,50,2.157,98,0.018,99,0.018,114,3.604,131,2.557,141,1.929,188,4.188,191,1.139,192,1.929,193,2.056,206,1.799,210,1.065,211,2.157,215,1.665,216,1.923,217,1.451,218,2.502,219,2.502,227,1.271,285,3.688,289,5.001,294,5.001,295,4.405,296,5.001,299,3.16,307,4.385,328,2.557,459,2.277,466,4.234,468,3.688,575,4.188,636,3.16,637,3.732,638,4.946,639,3.732,640,4.946,641,4.946,642,4.946,643,4.946,644,3.16,645,3.732,646,3.732,647,3.732,648,3.732,649,3.732,650,3.732]],["title/interfaces/LoggedInDetails.html",[190,0.952,552,1.413]],["body/interfaces/LoggedInDetails.html",[3,0.264,4,0.23,9,0.23,11,0.895,21,0.537,22,1.52,32,0.026,33,0.582,34,0.949,37,1.769,48,0.384,90,1.379,98,0.018,99,0.018,190,1.791,234,1.864,236,2.372,237,2.01,244,3.799,245,1.735,352,2.01,355,2.372,547,4.362,552,2.497,557,1.618,565,2.436,651,2.607,652,3.79,653,2.9,654,2.9,655,2.9,656,2.9,657,2.9,658,2.372,659,2.9,660,2.9,661,2.9,662,2.607,663,2.9,664,2.9,665,2.9,666,2.9]],["title/components/LoginComponent.html",[0,0.549,77,0.952]],["body/components/LoginComponent.html",[0,0.892,1,0.736,2,1.255,3,0.3,4,0.145,5,0.956,6,0.956,7,0.956,8,0.956,9,0.145,11,0.566,13,0.785,14,2.206,15,0.895,17,1.432,19,1.432,21,0.34,22,1.102,24,1.017,26,2.283,27,1.108,31,0.605,32,0.026,33,0.734,34,0.879,35,1.23,36,1.97,37,1.448,38,1.023,39,1.023,43,0.641,44,0.313,47,1.097,48,0.167,49,0.34,57,1.501,59,1.501,62,0.956,63,1.432,64,1.432,65,0.646,66,1.467,67,0.956,68,0.956,69,0.736,70,0.956,71,0.69,72,0.956,73,0.736,74,0.956,75,0.69,76,0.956,77,1.375,78,0.956,79,0.736,80,0.956,81,0.736,82,0.956,83,0.956,84,0.69,85,0.956,86,0.646,87,0.838,88,0.956,89,0.69,90,1.23,91,0.956,92,0.785,93,0.785,94,0.956,95,0.785,96,0.895,97,0.956,98,0.013,99,0.013,103,1.023,131,1.904,160,0.956,173,1.179,191,0.848,192,1.272,193,1.759,194,3.2,206,1.783,210,0.529,211,0.956,215,1.643,217,0.956,220,0.968,223,1.837,230,3.128,252,1.179,278,2.747,295,1.834,352,2.535,383,1.837,386,1.023,389,1.255,392,2.747,395,1.649,397,1.649,398,1.834,399,1.834,409,1.649,411,1.649,413,1.834,423,2.083,442,1.377,489,1.649,521,4.152,541,2.083,546,4.11,552,1.023,557,2.293,565,2.642,573,3.119,579,2.747,586,1.501,613,2.083,667,2.083,668,4.416,669,3.683,670,4.152,671,4.903,672,2.46,673,2.46,674,3.683,675,3.683,676,2.46,677,3.694,678,2.46,679,2.46,680,2.46,681,1.834,682,2.083,683,2.46,684,2.46,685,2.46,686,2.46,687,2.083,688,2.46,689,2.083,690,2.46,691,2.46,692,2.46,693,2.46,694,2.46,695,4.416,696,2.46,697,2.46,698,2.46,699,2.46,700,2.46,701,3.739,702,2.46,703,2.46,704,2.46,705,2.46,706,2.46,707,2.46,708,2.083,709,4.903,710,4.152,711,3.119,712,2.46,713,3.683,714,2.46,715,3.119,716,1.834,717,2.083,718,2.083,719,2.083,720,2.083,721,2.083,722,2.083,723,2.46,724,2.46]],["title/interfaces/LoginInfo.html",[190,0.952,565,1.629]],["body/interfaces/LoginInfo.html",[3,0.264,4,0.23,9,0.23,11,0.895,21,0.537,22,1.52,32,0.026,33,0.582,34,0.949,37,1.803,48,0.384,90,1.252,98,0.018,99,0.018,190,1.791,234,1.864,236,2.372,237,2.627,244,3.799,245,1.735,352,3.303,355,2.372,547,3.406,552,2.114,557,2.658,565,2.878,651,2.607,652,2.9,653,2.9,654,2.9,655,2.9,656,2.9,657,2.9,658,2.372,659,2.9,660,2.9,661,2.9,662,2.607,663,2.9,664,2.9,665,2.9,666,2.9]],["title/components/MembershipComponent.html",[0,0.549,79,1.016]],["body/components/MembershipComponent.html",[0,0.925,1,0.91,2,1.464,3,0.206,4,0.179,5,1.182,6,1.182,7,1.182,8,1.182,9,0.179,13,0.97,14,2.282,15,1.106,17,1.671,19,1.671,21,0.42,22,1.286,24,0.7,27,1.193,31,1.058,32,0.025,33,0.856,34,0.689,35,1.166,43,0.58,44,0.386,48,0.206,49,0.42,57,1.855,59,1.855,61,2.267,62,1.182,63,1.671,64,1.671,65,0.799,66,1.71,67,1.182,68,1.182,69,0.91,70,1.182,71,0.853,72,1.182,73,0.91,74,1.182,75,0.853,76,1.182,77,0.853,78,1.182,79,1.621,80,1.182,81,0.91,82,1.182,83,1.182,84,0.853,85,1.182,86,0.799,87,1.036,88,1.182,89,0.853,90,1.089,91,1.182,92,0.97,93,0.97,94,1.182,95,0.97,96,1.106,97,1.182,98,0.015,99,0.015,160,1.182,191,0.99,192,1.572,193,1.947,194,3.201,206,2.079,210,1.166,215,1.356,220,1.129,223,1.265,224,2.267,230,2.39,252,2.061,383,2.074,386,2.255,389,2.022,404,2.574,409,2.038,447,2.267,477,2.407,528,2.881,530,3.718,531,2.881,539,2.574,553,2.038,644,2.574,725,2.574,726,4.986,727,4.986,728,4.298,729,4.986,730,5.419,731,4.588,732,3.639,733,4.298,734,3.04,735,3.04,736,3.04,737,2.574,738,3.04,739,2.574,740,3.04,741,2.574,742,3.04,743,4.298,744,4.298,745,3.04,746,3.04,747,3.04,748,3.04,749,2.574,750,3.04,751,2.574,752,3.04,753,3.04,754,2.267,755,2.267,756,3.04,757,3.04,758,3.04,759,3.04,760,3.04,761,3.04,762,4.298,763,3.04,764,3.04]],["title/components/PopUpComponent.html",[0,0.549,81,1.016]],["body/components/PopUpComponent.html",[0,0.771,1,0.838,2,1.381,3,0.19,4,0.165,5,1.089,6,1.089,7,1.089,8,1.089,9,0.165,13,0.894,14,2.254,15,1.019,17,1.576,19,1.576,21,0.387,23,4.306,24,1.097,27,1.298,31,0.689,32,0.025,33,0.782,34,0.843,35,0.603,37,1.252,38,2.305,39,2.305,43,0.326,44,0.356,48,0.19,49,0.387,62,1.089,63,1.576,64,1.576,65,0.736,66,1.562,67,1.089,68,1.089,69,0.838,70,1.089,71,0.786,72,1.089,73,0.838,74,1.089,75,0.786,76,1.089,77,0.786,78,1.089,79,0.838,80,1.089,81,1.562,82,2.485,83,1.089,84,0.786,85,1.089,86,0.736,87,0.954,88,1.089,89,0.786,90,0.563,91,1.089,92,0.894,93,0.894,94,1.089,95,0.894,96,1.019,97,1.089,98,0.015,99,0.015,191,0.933,210,1.124,213,3.893,220,1.065,233,2.906,317,1.878,383,1.982,386,2.172,389,1.887,397,3.499,429,3.432,431,4.306,582,1.878,765,5.52,766,4.862,767,2.372,768,5.164,769,4.764,770,4.054,771,4.42,772,5.221,773,4.054,774,5.221,775,5.221,776,4.054,777,3.432,778,4.054,779,4.054,780,4.764,781,2.802,782,3.432,783,2.802,784,4.054,785,2.802,786,2.802,787,2.802,788,2.802,789,5.54,790,2.802,791,2.802,792,2.802,793,2.802,794,2.802,795,2.802,796,2.802,797,4.764,798,2.802,799,2.802,800,2.802,801,2.802,802,2.802,803,2.802,804,2.802,805,2.802,806,2.802,807,2.802,808,2.802,809,2.802,810,2.802]],["title/components/RegisterComponent.html",[0,0.549,84,0.952]],["body/components/RegisterComponent.html",[0,0.717,1,0.606,2,1.082,3,0.138,4,0.12,5,0.788,6,0.788,7,0.788,8,0.788,9,0.12,13,0.647,14,2.126,15,0.737,17,1.234,19,1.234,21,0.28,22,0.95,24,0.731,26,2.024,27,1.072,31,0.499,32,0.026,33,0.721,34,0.665,35,0.843,36,1.746,37,0.834,38,1.321,39,1.321,43,0.689,44,0.404,47,0.904,48,0.138,49,0.28,51,1.236,57,1.236,59,1.937,62,0.788,63,1.234,64,1.234,65,0.532,66,1.326,67,0.788,68,0.788,69,0.606,70,0.788,71,0.568,72,0.788,73,0.606,74,0.788,75,0.568,76,0.788,77,0.568,78,0.788,79,0.606,80,0.788,81,0.606,82,0.788,83,0.788,84,1.243,85,0.788,86,0.532,87,0.69,88,0.788,89,0.568,90,1.209,91,0.788,92,0.647,93,0.647,94,0.788,95,0.647,96,0.737,97,0.788,98,0.011,99,0.011,103,0.843,131,1.642,138,0.972,160,0.788,173,1.877,191,0.731,193,1.629,194,2.695,206,1.612,210,0.684,211,0.788,215,1.416,217,0.788,220,0.834,222,1.716,223,1.629,224,1.511,227,0.69,230,1.522,232,1.716,239,0.972,245,0.904,302,1.359,318,1.642,330,0.904,345,1.511,350,1.359,352,1.048,383,1.629,386,1.844,389,1.334,392,3.305,395,2.129,397,2.129,398,1.511,399,1.511,409,2.129,411,1.359,413,2.368,442,1.135,447,1.511,489,1.359,531,3.421,546,3.588,557,1.629,569,5.334,586,1.236,658,1.236,670,2.689,677,1.359,681,1.511,682,1.716,689,1.716,701,4.322,708,2.689,710,5.709,711,4.677,715,5.334,716,3.806,717,1.716,718,2.689,719,1.716,720,1.716,721,1.716,722,1.716,754,2.368,811,1.716,812,3.915,813,3.176,814,5.104,815,2.027,816,3.752,817,3.176,818,3.315,819,2.027,820,3.176,821,3.176,822,3.176,823,3.176,824,2.689,825,3.176,826,3.176,827,3.176,828,5.104,829,2.027,830,2.689,831,2.027,832,2.027,833,2.027,834,2.689,835,2.027,836,2.027,837,1.359,838,1.359,839,2.027,840,2.027,841,2.027,842,2.027,843,1.716,844,2.027,845,5.104,846,2.027,847,2.027,848,2.027,849,2.027,850,2.027,851,2.027,852,2.027,853,2.027,854,2.027,855,2.027,856,2.027,857,2.027,858,2.027,859,2.027,860,2.027,861,2.027,862,2.027,863,2.027,864,2.027,865,2.027,866,2.027,867,2.027,868,2.368,869,2.027,870,2.027,871,2.027,872,2.027,873,2.027,874,2.027,875,2.027,876,2.027,877,2.027,878,2.027,879,2.027,880,5.524,881,2.027,882,2.027,883,2.027,884,2.027,885,2.027,886,2.027,887,2.027,888,2.027,889,2.027,890,2.027,891,2.027,892,2.027,893,2.027,894,2.027,895,2.027,896,2.027,897,1.716,898,2.027,899,2.027,900,2.027,901,2.027,902,2.027,903,2.027,904,2.027,905,2.027,906,2.027,907,2.027,908,2.027,909,2.027,910,2.027,911,2.027,912,2.027,913,2.027,914,2.027,915,2.027,916,2.027]],["title/components/RoomBookingComponent.html",[0,0.549,86,0.892]],["body/components/RoomBookingComponent.html",[0,0.884,1,0.647,2,1.138,3,0.147,4,0.128,5,0.841,6,0.841,7,0.841,8,0.841,9,0.128,11,0.769,13,0.691,14,2.154,15,0.787,17,1.299,19,1.299,21,0.299,22,1,24,1.057,26,2.11,27,1.135,29,1.602,30,1.602,31,1.13,32,0.026,33,0.743,34,0.755,35,0.988,36,2.339,38,0.9,39,0.9,43,0.636,44,0.275,47,0.965,48,0.147,49,0.299,50,2.038,62,0.841,63,1.299,64,1.299,65,0.569,66,1.484,67,0.841,68,0.841,69,0.647,70,0.841,71,0.607,72,0.841,73,0.647,74,0.841,75,0.607,76,0.841,77,0.607,78,0.841,79,0.647,80,0.841,81,0.647,82,0.841,83,0.841,84,0.607,85,0.841,86,1.206,87,2.133,88,0.841,89,0.607,90,1.259,91,1.587,92,0.691,93,0.691,94,0.841,95,0.691,96,0.787,97,0.841,98,0.012,99,0.012,135,2.408,138,1.037,160,0.841,163,3.535,191,0.769,192,1.119,193,1.849,194,3.314,206,1.485,210,0.988,215,0.965,220,0.878,223,2.064,240,2.492,243,2.24,246,2.379,252,2.837,264,3.314,283,1.614,383,1.698,386,1.91,389,1.862,431,1.614,442,1.212,477,1.212,517,2.24,528,1.45,549,1.45,553,2.736,568,2.829,677,3.515,687,1.832,716,2.492,731,3.887,732,2.829,737,2.829,739,1.832,749,1.832,751,2.829,755,3.044,816,3.887,818,2.829,830,1.832,834,1.832,868,3.044,917,4.906,918,1.832,919,4.082,920,4.082,921,3.341,922,4.082,923,4.961,924,4.591,925,2.164,926,3.341,927,5.918,928,5.918,929,2.164,930,3.341,931,3.341,932,2.164,933,4.591,934,2.164,935,3.341,936,2.164,937,2.492,938,2.164,939,2.164,940,2.164,941,2.164,942,2.164,943,2.164,944,3.341,945,2.164,946,2.164,947,2.164,948,2.164,949,2.164,950,2.164,951,2.164,952,2.164,953,2.164,954,2.164,955,2.164,956,2.164,957,2.164,958,2.164,959,2.164,960,2.164,961,2.164,962,3.341]],["title/pipes/SearchPipe.html",[330,1.515,963,2.072]],["body/pipes/SearchPipe.html",[3,0.312,4,0.272,9,0.272,13,1.469,27,0.925,31,1.133,32,0.025,33,0.917,34,0.636,35,0.991,37,1.486,43,0.658,44,0.585,48,0.312,49,0.636,98,0.02,99,0.02,135,2.548,191,1.06,210,0.991,220,1.209,227,1.568,330,2.523,477,2.577,549,3.791,963,3.45,964,4.603,965,3.897,966,5.406,967,4.603,968,5.655,969,6.122,970,4.603,971,5.655,972,4.603,973,4.603,974,4.603,975,4.603]],["title/modules/SharedModule.html",[100,1.756,375,1.902]],["body/modules/SharedModule.html",[3,0.286,4,0.249,9,0.249,32,0.026,43,0.743,44,0.536,48,0.286,49,0.583,81,2.066,98,0.019,99,0.019,102,1.881,103,2.227,109,3.655,115,2.997,116,2.361,117,2.18,119,3.266,121,2.997,123,2.997,127,3.569,156,3.569,183,3.266,259,3.588,260,2.572,375,3.867,766,3.144,963,4.213,976,3.569,977,4.216,978,3.569,979,3.569,980,4.216,981,4.216,982,4.216,983,4.216]],["title/directives/UniqueEmailDirective.html",[65,0.892,95,1.084]],["body/directives/UniqueEmailDirective.html",[3,0.234,4,0.204,9,0.204,13,1.1,14,1.597,21,0.476,24,0.794,27,1.071,31,1.311,32,0.026,33,0.798,34,0.737,35,1.288,43,0.666,44,0.438,48,0.318,49,0.476,50,1.34,65,1.4,66,1.031,92,1.1,95,1.826,96,1.706,98,0.017,99,0.017,120,3.497,138,1.653,152,3.497,154,2.626,173,1.653,191,1.08,192,1.782,193,2.103,210,1.147,211,2.224,212,3.974,215,1.538,217,1.34,218,2.311,220,1.232,223,1.434,227,2.102,239,1.653,330,1.538,338,2.919,339,3.971,340,3.971,343,4.462,344,2.919,345,2.571,354,3.497,357,3.497,367,2.571,389,1.948,485,3.143,557,1.434,563,3.971,837,3.143,838,3.834,984,2.571,985,5.33,986,5.33,987,4.69,988,3.448,989,3.448,990,3.448,991,3.448,992,4.69,993,3.448,994,4.513,995,3.448,996,3.448,997,3.448,998,3.448,999,3.971,1000,2.919,1001,2.919,1002,2.919,1003,2.919,1004,2.919]],["title/interfaces/User.html",[90,0.683,190,0.952]],["body/interfaces/User.html",[3,0.245,4,0.213,9,0.213,11,0.831,21,0.499,22,1.447,32,0.026,33,0.91,34,0.961,35,1.254,37,1.827,48,0.37,90,1.284,98,0.017,99,0.017,190,1.754,234,1.73,236,2.951,237,2.5,244,3.823,245,2.157,352,1.866,355,2.202,547,3.242,552,2.012,557,1.501,565,2.615,651,2.419,652,2.691,653,2.691,654,3.607,655,2.691,656,4.532,657,2.691,658,2.951,659,2.691,660,4.532,661,2.691,662,4.074,663,3.607,664,2.691,665,2.691,666,2.691,1005,5.455]],["title/components/UserProfileComponent.html",[0,0.549,89,0.952]],["body/components/UserProfileComponent.html",[0,0.807,1,0.462,2,0.869,3,0.105,4,0.091,5,0.6,6,0.6,7,0.6,8,0.6,9,0.091,11,0.356,13,0.493,14,1.97,15,0.562,17,0.6,19,0.6,21,0.213,22,0.763,24,0.75,27,1.219,29,0.74,30,0.74,31,1.031,32,0.026,33,0.799,34,0.871,35,1.177,37,1.254,38,1.877,39,2.471,43,0.525,44,0.196,48,0.105,49,0.213,50,1.471,62,0.6,63,0.992,64,0.992,65,0.406,66,1.132,67,0.6,68,0.6,69,0.462,70,0.6,71,0.433,72,0.6,73,0.462,74,0.6,75,0.433,76,0.6,77,0.433,78,0.6,79,0.462,80,0.6,81,0.462,82,1.471,83,0.6,84,0.433,85,0.6,86,0.406,87,1.11,88,0.6,89,1.061,90,1.267,91,1.754,92,0.493,93,0.493,94,0.6,95,0.493,96,0.562,97,0.6,98,0.009,99,0.009,135,2.524,154,2.346,160,0.6,171,4.104,191,0.587,192,0.798,193,1.44,194,2.673,206,2.185,209,4.896,210,1.028,213,3.723,215,0.689,220,0.67,223,1.575,227,0.526,233,2.309,239,2.96,241,1.902,243,1.71,245,2.439,246,1.223,252,2.289,264,2.673,272,2.822,383,1.356,386,1.575,389,1.7,477,1.428,480,3.204,481,2.16,489,1.035,517,3.876,552,1.743,553,1.71,557,1.061,579,1.902,580,3.204,586,0.942,658,1.556,662,2.537,677,1.71,681,1.151,741,2.759,768,2.759,771,2.16,777,3.548,782,4.382,843,2.16,868,2.43,937,1.151,966,4.043,1006,5.184,1007,1.307,1008,3.259,1009,2.551,1010,3.785,1011,2.551,1012,2.551,1013,3.785,1014,2.551,1015,4.774,1016,2.551,1017,1.544,1018,4.774,1019,2.551,1020,1.544,1021,3.785,1022,3.785,1023,4.512,1024,2.551,1025,1.544,1026,5.176,1027,2.551,1028,1.544,1029,1.544,1030,2.551,1031,2.551,1032,1.544,1033,1.544,1034,1.544,1035,1.544,1036,1.544,1037,1.544,1038,1.544,1039,2.551,1040,2.551,1041,1.544,1042,1.544,1043,1.544,1044,1.544,1045,1.544,1046,1.544,1047,1.544,1048,1.544,1049,1.544,1050,1.544,1051,1.544,1052,1.544,1053,1.544,1054,1.544,1055,1.544,1056,3.259,1057,3.259,1058,3.259,1059,1.544,1060,2.551,1061,1.544,1062,1.544,1063,1.544,1064,1.544,1065,1.544,1066,1.544,1067,1.544,1068,1.544,1069,1.544,1070,1.544,1071,2.551,1072,1.544,1073,2.551,1074,1.544,1075,1.544,1076,1.544,1077,1.544,1078,1.544,1079,1.544,1080,1.544,1081,1.544,1082,2.551,1083,2.551,1084,2.551,1085,2.551,1086,2.551,1087,2.551,1088,3.785,1089,2.551,1090,2.551,1091,2.551,1092,2.551,1093,2.551,1094,2.551,1095,1.544,1096,1.544,1097,1.544]],["title/interfaces/UserService.html",[190,0.952,193,1.084]],["body/interfaces/UserService.html",[3,0.267,4,0.232,9,0.232,21,0.544,27,1.33,31,1.484,32,0.025,33,0.903,34,0.834,35,1.298,37,1.585,43,0.596,48,0.267,90,1.257,98,0.018,99,0.018,190,1.437,191,1.311,193,1.635,210,1.425,211,2.492,217,1.531,230,2.457,234,1.888,525,4.822,526,4.822,527,4.338,528,3.818,529,4.338,530,4.247,531,3.435,549,2.64,552,2.132,555,3.334,557,2.132,560,4.338,561,3.334,564,3.334,565,2.892,571,3.334,586,2.403,633,3.334,1098,3.334,1099,3.938,1100,3.938,1101,3.938,1102,3.938,1103,3.938,1104,3.938,1105,3.938,1106,3.938,1107,3.938,1108,3.938,1109,3.938,1110,3.938,1111,3.938,1112,3.938,1113,3.938,1114,3.938]],["title/modules/UsersModule.html",[100,1.756,257,1.902]],["body/modules/UsersModule.html",[2,1.603,3,0.235,4,0.205,9,0.205,11,0.798,32,0.026,43,0.781,44,0.441,48,0.363,49,0.479,77,1.881,79,2.007,84,1.881,86,0.911,89,1.881,90,0.697,98,0.017,99,0.017,100,2.434,102,2.384,103,1.958,115,2.636,116,1.941,117,1.792,119,3.498,121,2.636,123,2.636,129,2.115,131,1.792,136,3.51,137,3.51,138,1.662,141,1.792,158,3.155,160,1.348,163,2.115,164,2.585,171,2.324,172,2.935,183,2.872,257,3.866,259,3.155,260,2.115,261,2.935,303,2.935,375,3.462,380,2.935,464,2.585,544,3.51,1115,2.935,1116,2.935,1117,2.935,1118,3.467,1119,3.467,1120,4.707,1121,3.467,1122,3.467,1123,4.707,1124,3.467,1125,3.467]],["title/coverage.html",[1126,3.931]],["body/coverage.html",[0,1.048,1,0.895,9,0.177,10,2.533,32,0.025,34,0.413,65,1.116,69,0.895,71,0.839,73,0.895,75,0.839,77,0.839,79,0.895,81,0.895,84,0.839,86,0.786,89,0.839,90,0.993,93,0.955,95,0.955,98,0.015,99,0.015,112,1.825,113,1.675,114,1.825,129,1.825,133,2.005,135,1.921,147,3.169,163,1.825,166,2.005,171,2.005,185,2.005,187,2.533,190,1.703,193,0.955,216,2.091,230,1.434,235,3.169,246,1.434,264,1.675,265,2.533,285,2.231,287,2.533,288,2.533,318,1.547,328,3.052,330,1.334,337,3.169,350,2.005,381,2.533,403,5.421,405,5.155,416,2.533,425,2.533,436,2.533,460,3.169,461,3.606,497,2.533,498,2.533,517,4.453,520,3.169,552,1.768,565,1.434,582,2.005,636,2.533,651,3.312,667,2.533,725,2.533,765,2.533,766,2.231,767,2.533,811,2.533,837,2.005,838,2.848,897,2.533,917,2.533,918,2.533,963,1.825,965,2.533,984,3.169,1006,2.533,1007,2.533,1098,2.533,1126,2.533,1127,2.991,1128,2.991,1129,2.991,1130,4.999,1131,4.999,1132,2.533,1133,6.595,1134,2.533,1135,2.533,1136,2.533,1137,5.904,1138,2.991,1139,4.249,1140,2.991,1141,2.991,1142,2.991,1143,2.991,1144,2.991,1145,2.991,1146,2.991,1147,2.991,1148,2.991,1149,2.991,1150,2.991,1151,2.991,1152,4.941,1153,2.991,1154,2.991,1155,2.991,1156,2.991,1157,2.991,1158,2.991,1159,2.991,1160,2.991,1161,2.991,1162,2.533,1163,2.991,1164,2.533,1165,2.533,1166,3.598,1167,2.533,1168,2.533,1169,2.991,1170,2.991]],["title/dependencies.html",[103,1.7,1171,2.113]],["body/dependencies.html",[32,0.026,36,2.058,44,0.586,47,2.058,98,0.02,99,0.02,103,1.92,122,3.907,125,4.796,126,3.796,138,2.212,160,1.794,217,1.794,260,2.815,395,3.093,1172,4.615,1173,6.828,1174,4.615,1175,4.615,1176,4.615,1177,4.615,1178,5.664,1179,4.615,1180,3.907,1181,4.615,1182,4.615,1183,4.615,1184,4.615,1185,4.615,1186,4.615,1187,4.615,1188,4.615,1189,4.615,1190,4.615,1191,4.615,1192,4.615,1193,4.615,1194,4.615,1195,4.615,1196,4.615,1197,4.615]],["title/index.html",[21,0.392,53,2.399,1198,2.833]],["body/index.html",[0,0.954,4,0.251,12,3.594,32,0.019,33,0.636,98,0.019,99,0.019,117,2.195,220,1.115,229,3.594,231,3.594,305,3.594,328,2.78,470,3.594,582,2.845,626,3.594,754,3.165,755,3.165,1171,3.165,1199,4.245,1200,5.376,1201,4.245,1202,5.901,1203,5.901,1204,3.594,1205,4.245,1206,4.245,1207,6.4,1208,6.641,1209,4.245,1210,4.245,1211,4.245,1212,4.245,1213,4.245,1214,4.245,1215,4.245,1216,4.245,1217,4.245,1218,5.901,1219,5.901,1220,4.245,1221,6.203,1222,4.245,1223,4.245,1224,4.245,1225,4.245,1226,5.376,1227,4.552,1228,6.203,1229,4.245,1230,5.376,1231,5.376,1232,4.245,1233,6.539,1234,4.245,1235,4.245,1236,4.245,1237,5.376,1238,3.594,1239,4.245,1240,4.245,1241,5.901,1242,4.245,1243,3.165,1244,4.245]],["title/modules.html",[102,2.071]],["body/modules.html",[32,0.022,98,0.022,99,0.022,101,3.407,102,2.267,109,2.846,110,3.101,111,3.101,126,4.515,257,2.846,375,2.846,1180,5.703,1245,6.735,1246,6.827,1247,5.083,1248,5.083]],["title/overview.html",[1243,3.462]],["body/overview.html",[1,1.849,2,1.084,32,0.025,69,1.849,71,1.733,73,1.849,75,1.733,77,1.733,79,1.849,81,1.849,84,1.733,86,1.624,89,1.733,92,1.015,98,0.016,99,0.016,101,4.564,102,1.419,103,1.846,104,2.694,105,2.694,106,2.694,107,2.694,108,2.694,109,3.096,110,3.998,111,4.135,112,3.117,113,2.861,114,3.117,115,2.485,116,1.781,117,1.645,159,1.941,185,2.132,234,1.525,253,2.694,254,2.694,255,2.694,256,2.694,257,3.828,330,1.419,371,2.694,372,2.694,373,2.694,374,2.694,375,3.702,459,1.941,937,3.309,963,3.77,976,2.694,978,2.694,979,2.694,1115,2.694,1116,2.694,1117,2.694,1243,2.372,1249,3.181,1250,2.694,1251,3.181,1252,3.181,1253,4.437]],["title/properties.html",[22,1.223,1171,2.113]],["body/properties.html",[22,1.637,32,0.024,98,0.023,99,0.023,1204,4.634,1254,5.473]],["title/routes.html",[159,2.832]],["body/routes.html",[32,0.023,98,0.023,99,0.023,159,3.369]],["title/miscellaneous/variables.html",[1255,2.399,1256,3.461]],["body/miscellaneous/variables.html",[21,0.381,32,0.026,34,0.89,37,1.054,38,2.705,39,2.705,65,0.725,66,1.647,90,1.107,98,0.014,99,0.014,135,1.559,147,4.284,154,2.245,193,1.507,206,1.004,211,1.073,212,2.058,227,2.069,230,2.265,233,2.882,237,1.427,239,1.323,252,2.265,318,2.68,328,3.065,330,1.231,337,2.058,343,2.058,350,3.166,351,2.337,352,1.427,353,2.337,354,2.058,355,1.684,356,2.337,357,2.99,358,2.337,359,2.337,360,2.337,361,2.337,362,2.337,363,2.337,364,3.395,365,2.337,366,2.337,367,2.99,368,2.337,369,2.337,370,2.337,460,2.058,461,3.475,473,2.99,477,1.545,485,1.85,487,2.337,520,2.058,544,2.058,552,1.965,557,1.148,824,4.864,837,3.166,838,1.85,984,2.99,994,3.395,999,3.395,1000,2.337,1001,2.337,1002,2.337,1003,2.337,1004,2.337,1130,2.337,1131,5.019,1132,3.999,1134,3.999,1135,3.395,1136,3.999,1162,3.395,1164,2.337,1165,2.337,1166,2.337,1167,3.395,1168,3.395,1227,3.395,1238,3.395,1250,3.999,1255,2.337,1256,2.337,1257,4.01,1258,2.76,1259,4.01,1260,5.745,1261,2.76,1262,2.76,1263,2.76,1264,2.76,1265,2.76,1266,2.76,1267,2.76,1268,2.76,1269,4.01,1270,2.76,1271,2.76,1272,2.76,1273,2.76,1274,4.01,1275,4.01,1276,4.01,1277,4.01,1278,5.184,1279,5.184,1280,5.184,1281,2.76,1282,2.76,1283,2.76,1284,5.184,1285,5.184,1286,4.01,1287,4.01,1288,4.01,1289,4.01,1290,4.01,1291,4.01,1292,4.01]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"modules/BookingModule.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"modules/SharedModule.html":{},"directives/UniqueEmailDirective.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":403,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1254,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1152,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1149,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1150,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1148,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1163,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":410,"title":{},"body":{"components/FooterComponent.html":{}}}],["1",{"_index":937,"title":{},"body":{"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["1/1",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1143,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1157,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":405,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["100px",{"_index":458,"title":{},"body":{"components/HomeComponent.html":{}}}],["10px",{"_index":721,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["11",{"_index":1250,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["12",{"_index":1156,"title":{},"body":{"coverage.html":{}}}],["13.0.4",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["14.0.0",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["14.2.1",{"_index":1205,"title":{},"body":{"index.html":{}}}],["14.3.2",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["14t00:00:00",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15/15",{"_index":1161,"title":{},"body":{"coverage.html":{}}}],["15px",{"_index":720,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["16t00:00:00",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17/19",{"_index":1159,"title":{},"body":{"coverage.html":{}}}],["1px",{"_index":717,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["2",{"_index":1251,"title":{},"body":{"overview.html":{}}}],["2.11.6",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1144,"title":{},"body":{"coverage.html":{}}}],["3.6.1",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1137,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["3px",{"_index":898,"title":{},"body":{"components/RegisterComponent.html":{}}}],["4",{"_index":1252,"title":{},"body":{"overview.html":{}}}],["404",{"_index":624,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["40px",{"_index":763,"title":{},"body":{"components/MembershipComponent.html":{}}}],["5.0.11",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["5.2.2",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["5/6",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":897,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["500px",{"_index":452,"title":{},"body":{"components/HomeComponent.html":{}}}],["50px",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/MembershipComponent.html":{}}}],["5px",{"_index":409,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/RegisterComponent.html":{}}}],["6",{"_index":1249,"title":{},"body":{"overview.html":{}}}],["6.2.0",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1160,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1154,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1253,"title":{},"body":{"overview.html":{}}}],["7.5.0",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":1140,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1153,"title":{},"body":{"coverage.html":{}}}],["89",{"_index":1158,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1138,"title":{},"body":{"coverage.html":{}}}],["_handleerror",{"_index":523,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["_handleerror(error",{"_index":536,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["_handleerror(error:httperrorresponse",{"_index":622,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["aadhaar",{"_index":843,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["aadhaarid",{"_index":660,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["aadhaarid:\"234786345612",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aadhaarid:['',aadhaaridvalidators",{"_index":862,"title":{},"body":{"components/RegisterComponent.html":{}}}],["aadhaarid:string",{"_index":661,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["aadhaaridvalidators",{"_index":851,"title":{},"body":{"components/RegisterComponent.html":{}}}],["abstractcontrol",{"_index":343,"title":{},"body":{"directives/CompareDirective.html":{},"directives/UniqueEmailDirective.html":{},"miscellaneous/variables.html":{}}}],["action",{"_index":1089,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["activate",{"_index":201,"title":{},"body":{"guards/AuthGuard.html":{}}}],["activated",{"_index":205,"title":{},"body":{"guards/AuthGuard.html":{}}}],["activatedroute",{"_index":1015,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["activatedroutesnapshot",{"_index":197,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_component",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["actualvalidator",{"_index":999,"title":{},"body":{"directives/UniqueEmailDirective.html":{},"miscellaneous/variables.html":{}}}],["add",{"_index":470,"title":{},"body":{"injectables/HttpBookingService.html":{},"index.html":{}}}],["addbooking",{"_index":268,"title":{},"body":{"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{}}}],["addbooking(booking",{"_index":273,"title":{},"body":{"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{}}}],["addbooking(this.booking",{"_index":955,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["adds",{"_index":930,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["alert(\"you",{"_index":228,"title":{},"body":{"guards/AuthGuard.html":{}}}],["align",{"_index":398,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["allows",{"_index":202,"title":{},"body":{"guards/AuthGuard.html":{}}}],["along",{"_index":574,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["angular",{"_index":1202,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":260,"title":{},"body":{"modules/BookingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"interceptors/CacheInterceptor.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"modules/UsersModule.html":{}}}],["angular/compiler",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/BookingModule.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"modules/SharedModule.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"directives/CompareDirective.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/BookingModule.html":{},"modules/CoreModule.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["announcemnet",{"_index":559,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["api",{"_index":473,"title":{},"body":{"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["app.component",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["appmodule",{"_index":101,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":109,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":969,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["arguments",{"_index":641,"title":{},"body":{"injectables/InterceptorService.html":{}}}],["array",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artifacts",{"_index":1222,"title":{},"body":{"index.html":{}}}],["async",{"_index":729,"title":{},"body":{"components/MembershipComponent.html":{}}}],["asyncvalidator",{"_index":985,"title":{},"body":{"directives/UniqueEmailDirective.html":{}}}],["asyncvalidatorfn",{"_index":994,"title":{},"body":{"directives/UniqueEmailDirective.html":{},"miscellaneous/variables.html":{}}}],["asyncvalidatorfunction",{"_index":998,"title":{},"body":{"directives/UniqueEmailDirective.html":{}}}],["authentication",{"_index":652,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["authguard",{"_index":166,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authorization",{"_index":548,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["authorization:`bearer",{"_index":603,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["automatically",{"_index":1212,"title":{},"body":{"index.html":{}}}],["available",{"_index":1248,"title":{},"body":{"modules.html":{}}}],["await",{"_index":756,"title":{},"body":{"components/MembershipComponent.html":{}}}],["awesomehotel.com",{"_index":390,"title":{},"body":{"components/FooterComponent.html":{}}}],["background",{"_index":411,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["based",{"_index":580,"title":{},"body":{"injectables/HttpUserService.html":{},"components/UserProfileComponent.html":{}}}],["baseurl",{"_index":1162,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["baseurl='https://localhost:5000/api/users",{"_index":588,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["below",{"_index":926,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["black",{"_index":413,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["block",{"_index":454,"title":{},"body":{"components/HomeComponent.html":{}}}],["body",{"_index":445,"title":{},"body":{"components/HomeComponent.html":{}}}],["book",{"_index":962,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["booking",{"_index":135,"title":{"interfaces/Booking.html":{}},"body":{"modules/AppModule.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["booking's",{"_index":434,"title":{},"body":{"components/HeaderComponent.html":{}}}],["booking'},{'name",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["booking.component",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BookingModule.html":{},"modules/UsersModule.html":{}}}],["booking.component.css",{"_index":920,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["booking.component.html",{"_index":921,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["booking.component.ts",{"_index":918,"title":{},"body":{"components/RoomBookingComponent.html":{},"coverage.html":{}}}],["booking.component.ts:22",{"_index":940,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["booking.component.ts:26",{"_index":938,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["booking.component.ts:29",{"_index":925,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["booking.component.ts:52",{"_index":936,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["booking.component.ts:59",{"_index":939,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["booking.component.ts:64",{"_index":934,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["booking.component.ts:75",{"_index":932,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["booking.component.ts:82",{"_index":929,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["booking.service",{"_index":486,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["booking/models/booking",{"_index":972,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["booking/room",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BookingModule.html":{},"components/RoomBookingComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["booking[]|undefined,search:string",{"_index":973,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["booking\\'s",{"_index":435,"title":{},"body":{"components/HeaderComponent.html":{}}}],["bookingdate",{"_index":238,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{}}}],["bookingdate:string",{"_index":251,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{}}}],["bookingdetails",{"_index":246,"title":{"interfaces/BookingDetails.html":{}},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["bookingid",{"_index":481,"title":{},"body":{"injectables/HttpBookingService.html":{},"components/UserProfileComponent.html":{}}}],["bookingid:number",{"_index":495,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["bookingid:number=1",{"_index":1062,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["bookingmodule",{"_index":110,"title":{"modules/BookingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules.html":{},"overview.html":{}}}],["bookings",{"_index":477,"title":{},"body":{"injectables/HttpBookingService.html":{},"components/MembershipComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["bookings!.filter(booking=>booking.bookingdate.includes(search",{"_index":975,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["bookings.bookingdate",{"_index":1092,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["bookings.id",{"_index":1090,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["bookings.numberofdaysstay",{"_index":1091,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["bookings.price",{"_index":1094,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["bookingservice",{"_index":264,"title":{"interfaces/BookingService.html":{}},"body":{"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["bookroom",{"_index":923,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["boolean",{"_index":213,"title":{},"body":{"guards/AuthGuard.html":{},"components/PopUpComponent.html":{},"components/UserProfileComponent.html":{}}}],["bootstrap",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":392,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["bottom",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["box",{"_index":407,"title":{},"body":{"components/FooterComponent.html":{}}}],["browse",{"_index":1246,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"interceptors/CacheInterceptor.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1221,"title":{},"body":{"index.html":{}}}],["builder",{"_index":818,"title":{},"body":{"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{}}}],["burlywood",{"_index":446,"title":{},"body":{"components/HomeComponent.html":{}}}],["c1",{"_index":358,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["c1!.value",{"_index":363,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["c2",{"_index":360,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["c2!.value",{"_index":365,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["cache",{"_index":310,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/HttpCacheService.html":{}}}],["cache.service",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"interceptors/CacheInterceptor.html":{}}}],["cache.service.ts",{"_index":498,"title":{},"body":{"injectables/HttpCacheService.html":{},"coverage.html":{}}}],["cache.service.ts:12",{"_index":506,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["cache.service.ts:17",{"_index":503,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["cache.service.ts:21",{"_index":504,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["cache.service.ts:9",{"_index":501,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["cached",{"_index":316,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["cachedresponse",{"_index":319,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["cachedresponse.url",{"_index":324,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["cacheinterceptor",{"_index":112,"title":{"interceptors/CacheInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/CacheInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["cacheservice",{"_index":292,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["cacheservice:httpcacheservice",{"_index":304,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["call",{"_index":1022,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["called",{"_index":1030,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["calls",{"_index":674,"title":{},"body":{"components/LoginComponent.html":{}}}],["canactivate",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate:[authguard],component:roombookingcomponent",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["cancel",{"_index":782,"title":{},"body":{"components/PopUpComponent.html":{},"components/UserProfileComponent.html":{}}}],["cancelbooking",{"_index":269,"title":{},"body":{"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{}}}],["cancelbooking(id",{"_index":275,"title":{},"body":{"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{}}}],["cancelled",{"_index":1074,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["canceltext",{"_index":774,"title":{},"body":{"components/PopUpComponent.html":{}}}],["canceltext:string=\"pop",{"_index":800,"title":{},"body":{"components/PopUpComponent.html":{}}}],["capabilities",{"_index":1239,"title":{},"body":{"index.html":{}}}],["caption",{"_index":457,"title":{},"body":{"components/HomeComponent.html":{}}}],["carousel",{"_index":449,"title":{},"body":{"components/HomeComponent.html":{}}}],["case",{"_index":631,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["catcherror",{"_index":584,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["catcherror(this._handleerror",{"_index":630,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["center",{"_index":399,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["change",{"_index":1214,"title":{},"body":{"index.html":{}}}],["characters",{"_index":713,"title":{},"body":{"components/LoginComponent.html":{}}}],["chars",{"_index":715,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["check",{"_index":305,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"index.html":{}}}],["checks",{"_index":540,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["choice",{"_index":1236,"title":{},"body":{"index.html":{}}}],["class",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/BookingModule.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"modules/SharedModule.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"modules/UsersModule.html":{}}}],["cli",{"_index":1203,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":1065,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["client",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpUserService.html":{}}}],["cluster_appmodule",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_bookingmodule",{"_index":253,"title":{},"body":{"modules/BookingModule.html":{},"overview.html":{}}}],["cluster_bookingmodule_declarations",{"_index":254,"title":{},"body":{"modules/BookingModule.html":{},"overview.html":{}}}],["cluster_bookingmodule_exports",{"_index":255,"title":{},"body":{"modules/BookingModule.html":{},"overview.html":{}}}],["cluster_bookingmodule_imports",{"_index":256,"title":{},"body":{"modules/BookingModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":371,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declarations",{"_index":373,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":372,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":374,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":976,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":979,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":978,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":977,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_usersmodule",{"_index":1115,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_declarations",{"_index":1117,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1116,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":1118,"title":{},"body":{"modules/UsersModule.html":{}}}],["code",{"_index":1216,"title":{},"body":{"index.html":{}}}],["color",{"_index":412,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["color:honeydew",{"_index":719,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["color:white",{"_index":406,"title":{},"body":{"components/FooterComponent.html":{}}}],["coming",{"_index":550,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["command",{"_index":1237,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":259,"title":{},"body":{"modules/BookingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{}}}],["compare",{"_index":350,"title":{},"body":{"directives/CompareDirective.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["compare('password','confirmpassword",{"_index":863,"title":{},"body":{"components/RegisterComponent.html":{}}}],["compare:{message:`the",{"_index":368,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["comparedirective",{"_index":93,"title":{"directives/CompareDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/CompareDirective.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["compareto",{"_index":341,"title":{},"body":{"directives/CompareDirective.html":{}}}],["compareto]'},{'name",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["completed",{"_index":959,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["components/footer/footer.component",{"_index":378,"title":{},"body":{"modules/CoreModule.html":{}}}],["components/gallery/gallery.component",{"_index":262,"title":{},"body":{"modules/BookingModule.html":{}}}],["components/header/header.component",{"_index":377,"title":{},"body":{"modules/CoreModule.html":{}}}],["components/home/home.component",{"_index":379,"title":{},"body":{"modules/CoreModule.html":{}}}],["components/login/login.component",{"_index":1121,"title":{},"body":{"modules/UsersModule.html":{}}}],["components/membership/membership.component",{"_index":1124,"title":{},"body":{"modules/UsersModule.html":{}}}],["components/pop",{"_index":981,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/register/register.component",{"_index":1122,"title":{},"body":{"modules/UsersModule.html":{}}}],["components/room",{"_index":261,"title":{},"body":{"modules/BookingModule.html":{},"modules/UsersModule.html":{}}}],["components/user",{"_index":1125,"title":{},"body":{"modules/UsersModule.html":{}}}],["confirm",{"_index":784,"title":{},"body":{"components/PopUpComponent.html":{}}}],["confirmation",{"_index":1026,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["confirmpassword",{"_index":353,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["confirmpassword:['',passwordvalidators",{"_index":860,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword:string):validatorfn",{"_index":356,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["confirmtext",{"_index":775,"title":{},"body":{"components/PopUpComponent.html":{}}}],["confirmtext:string=\"pop",{"_index":799,"title":{},"body":{"components/PopUpComponent.html":{}}}],["console.log(\"booking",{"_index":1073,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["console.log(\"cancel",{"_index":1064,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["console.log(\"form",{"_index":866,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(\"guard",{"_index":225,"title":{},"body":{"guards/AuthGuard.html":{}}}],["console.log('error',error",{"_index":876,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log('getting",{"_index":945,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["console.log('membership",{"_index":747,"title":{},"body":{"components/MembershipComponent.html":{}}}],["console.log('registered",{"_index":874,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log('registering",{"_index":870,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log('user",{"_index":614,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["console.log('user',user",{"_index":692,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(`adding",{"_index":334,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["console.log(`invalidating",{"_index":309,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["console.log(`returning",{"_index":323,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["console.log(cachedresponse",{"_index":325,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["console.log(confirmation",{"_index":1070,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["console.log(id",{"_index":1066,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["console.log(info",{"_index":690,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(request",{"_index":645,"title":{},"body":{"injectables/InterceptorService.html":{}}}],["console.log(this.booking",{"_index":951,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["console.log(this.form",{"_index":864,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(this.user",{"_index":1057,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["console.log(x",{"_index":957,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["const",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"directives/UniqueEmailDirective.html":{}}}],["constructor",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{}}}],["constructor(@inject(\"userservice",{"_index":995,"title":{},"body":{"directives/UniqueEmailDirective.html":{}}}],["constructor(@inject(\"userservice\")private",{"_index":644,"title":{},"body":{"injectables/InterceptorService.html":{},"components/MembershipComponent.html":{}}}],["constructor(builder",{"_index":815,"title":{},"body":{"components/RegisterComponent.html":{}}}],["constructor(cacheservice",{"_index":290,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["constructor(http",{"_index":463,"title":{},"body":{"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{}}}],["constructor(logger",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["constructor(private",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"interceptors/CacheInterceptor.html":{},"components/HomeComponent.html":{},"injectables/HttpUserService.html":{},"components/RegisterComponent.html":{}}}],["constructor(userservice",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{}}}],["content",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"injectables/HttpUserService.html":{}}}],["context",{"_index":1167,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":357,"title":{},"body":{"directives/CompareDirective.html":{},"directives/UniqueEmailDirective.html":{},"miscellaneous/variables.html":{}}}],["control.get(confirmpassword",{"_index":361,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["control.get(password",{"_index":359,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["coremodule",{"_index":111,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coverage",{"_index":1126,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":208,"title":{},"body":{"guards/AuthGuard.html":{}}}],["created",{"_index":444,"title":{},"body":{"components/HomeComponent.html":{}}}],["creating",{"_index":854,"title":{},"body":{"components/RegisterComponent.html":{}}}],["credentials",{"_index":702,"title":{},"body":{"components/LoginComponent.html":{}}}],["crud",{"_index":267,"title":{},"body":{"interfaces/BookingService.html":{}}}],["currency:'inr",{"_index":1095,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["currency:\\'inr",{"_index":1097,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["current",{"_index":569,"title":{},"body":{"injectables/HttpUserService.html":{},"components/RegisterComponent.html":{}}}],["d",{"_index":453,"title":{},"body":{"components/HomeComponent.html":{}}}],["danger",{"_index":705,"title":{},"body":{"components/LoginComponent.html":{}}}],["data",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.ts",{"_index":1131,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["data/.../db",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data/db",{"_index":1130,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":1088,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["days",{"_index":1086,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["decide",{"_index":203,"title":{},"body":{"guards/AuthGuard.html":{}}}],["declaration",{"_index":278,"title":{},"body":{"interfaces/BookingService.html":{},"injectables/HttpUserService.html":{},"components/LoginComponent.html":{}}}],["declarations",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{}}}],["declaring",{"_index":677,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["default",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{}}}],["delete",{"_index":472,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["delete(`${url}/${id",{"_index":494,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["dependencies",{"_index":103,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/CoreModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"interfaces/BookingService.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/RoomBookingComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"modules/UsersModule.html":{}}}],["destroy",{"_index":516,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["details",{"_index":252,"title":{},"body":{"interfaces/BookingDetails.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["details.user",{"_index":944,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["dev",{"_index":1210,"title":{},"body":{"index.html":{}}}],["development",{"_index":1206,"title":{},"body":{"index.html":{}}}],["directive",{"_index":65,"title":{"directives/CompareDirective.html":{},"directives/UniqueEmailDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/CompareDirective.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["directives",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"directives/CompareDirective.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1220,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1225,"title":{},"body":{"index.html":{}}}],["disableconsolelogging",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist",{"_index":1224,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1127,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["don't",{"_index":369,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["done",{"_index":779,"title":{},"body":{"components/PopUpComponent.html":{}}}],["done=new",{"_index":803,"title":{},"body":{"components/PopUpComponent.html":{}}}],["dummybookings",{"_index":1132,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dummybookingsmock",{"_index":1134,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dummyuser",{"_index":1135,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1234,"title":{},"body":{"index.html":{}}}],["each",{"_index":306,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["edit",{"_index":209,"title":{},"body":{"guards/AuthGuard.html":{},"components/UserProfileComponent.html":{}}}],["element",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["email",{"_index":557,"title":{},"body":{"injectables/HttpUserService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/RegisterComponent.html":{},"directives/UniqueEmailDirective.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"miscellaneous/variables.html":{}}}],["email.directive",{"_index":839,"title":{},"body":{"components/RegisterComponent.html":{}}}],["email.directive.ts",{"_index":984,"title":{},"body":{"directives/UniqueEmailDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["email.directive.ts:17",{"_index":988,"title":{},"body":{"directives/UniqueEmailDirective.html":{}}}],["email.directive.ts:21",{"_index":993,"title":{},"body":{"directives/UniqueEmailDirective.html":{}}}],["email.directive.ts:25",{"_index":990,"title":{},"body":{"directives/UniqueEmailDirective.html":{}}}],["email:\"srilakshmi27272@gmail.com",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email:string",{"_index":653,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["empty",{"_index":1039,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["end",{"_index":1233,"title":{},"body":{"index.html":{}}}],["entered",{"_index":573,"title":{},"body":{"injectables/HttpUserService.html":{},"components/LoginComponent.html":{}}}],["environment",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":541,"title":{},"body":{"injectables/HttpUserService.html":{},"components/LoginComponent.html":{}}}],["error.status",{"_index":704,"title":{},"body":{"components/LoginComponent.html":{}}}],["error:any",{"_index":698,"title":{},"body":{"components/LoginComponent.html":{}}}],["error:error",{"_index":875,"title":{},"body":{"components/RegisterComponent.html":{}}}],["essential",{"_index":1107,"title":{},"body":{"interfaces/UserService.html":{}}}],["eventemitter",{"_index":789,"title":{},"body":{"components/PopUpComponent.html":{}}}],["example",{"_index":420,"title":{},"body":{"components/GalleryComponent.html":{}}}],["examples",{"_index":415,"title":{},"body":{"components/GalleryComponent.html":{}}}],["execute",{"_index":1230,"title":{},"body":{"index.html":{}}}],["export",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"modules/BookingModule.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"modules/SharedModule.html":{},"directives/UniqueEmailDirective.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"modules/UsersModule.html":{}}}],["exported",{"_index":351,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["exports",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BookingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{}}}],["extends",{"_index":654,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["false",{"_index":233,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/HttpUserService.html":{},"components/PopUpComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":924,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["field",{"_index":709,"title":{},"body":{"components/LoginComponent.html":{}}}],["fields",{"_index":237,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"directives/CompareDirective.html":{},"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"modules/BookingModule.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"modules/SharedModule.html":{},"directives/UniqueEmailDirective.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["files",{"_index":1215,"title":{},"body":{"index.html":{}}}],["first",{"_index":231,"title":{},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["fixed",{"_index":401,"title":{},"body":{"components/FooterComponent.html":{}}}],["fn",{"_index":991,"title":{},"body":{"directives/UniqueEmailDirective.html":{}}}],["footer",{"_index":382,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["footer.component.css",{"_index":384,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":385,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":69,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":716,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{}}}],["form.controls!['aadhaarid'].errors!['maxlength']!.actuallength",{"_index":895,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['aadhaarid'].errors!['maxlength']!.requiredlength",{"_index":894,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['aadhaarid'].errors!['minlength']!.actuallength",{"_index":893,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['aadhaarid'].errors!['minlength']!.requiredlength",{"_index":892,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['confirmpassword'].errors!['maxlength']!.actuallength",{"_index":886,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['confirmpassword'].errors!['maxlength']!.requiredlength",{"_index":885,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['confirmpassword'].errors!['minlength']!.actuallength",{"_index":884,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['confirmpassword'].errors!['minlength']!.requiredlength",{"_index":883,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['email'].errors!['uniqueemail'].message",{"_index":877,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['password'].errors!['maxlength']!.actuallength",{"_index":882,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['password'].errors!['maxlength']!.requiredlength",{"_index":881,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['password'].errors!['minlength']!.actuallength",{"_index":879,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['password'].errors!['minlength']!.requiredlength",{"_index":878,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['phonenumber'].errors!['maxlength']!.actuallength",{"_index":891,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['phonenumber'].errors!['maxlength']!.requiredlength",{"_index":890,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['phonenumber'].errors!['minlength']!.actuallength",{"_index":889,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls!['phonenumber'].errors!['minlength']!.requiredlength",{"_index":888,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'aadhaarid\\'].errors![\\'maxlength\\']!.actuallength",{"_index":916,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'aadhaarid\\'].errors![\\'maxlength\\']!.requiredlength",{"_index":915,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'aadhaarid\\'].errors![\\'minlength\\']!.actuallength",{"_index":914,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'aadhaarid\\'].errors![\\'minlength\\']!.requiredlength",{"_index":913,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'confirmpassword\\'].errors![\\'maxlength\\']!.actuallength",{"_index":907,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'confirmpassword\\'].errors![\\'maxlength\\']!.requiredlength",{"_index":906,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'confirmpassword\\'].errors![\\'minlength\\']!.actuallength",{"_index":905,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'confirmpassword\\'].errors![\\'minlength\\']!.requiredlength",{"_index":904,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'email\\'].errors![\\'uniqueemail\\'].message",{"_index":899,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'password\\'].errors![\\'maxlength\\']!.actuallength",{"_index":903,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'password\\'].errors![\\'maxlength\\']!.requiredlength",{"_index":902,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'password\\'].errors![\\'minlength\\']!.actuallength",{"_index":901,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'password\\'].errors![\\'minlength\\']!.requiredlength",{"_index":900,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'phonenumber\\'].errors![\\'maxlength\\']!.actuallength",{"_index":912,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'phonenumber\\'].errors![\\'maxlength\\']!.requiredlength",{"_index":911,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'phonenumber\\'].errors![\\'minlength\\']!.actuallength",{"_index":910,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.controls![\\'phonenumber\\'].errors![\\'minlength\\']!.requiredlength",{"_index":909,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.errors!['compare'].message",{"_index":887,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.errors![\\'compare\\'].message",{"_index":908,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form:formgroup",{"_index":842,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formbuilder",{"_index":816,"title":{},"body":{"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{}}}],["formgroup",{"_index":830,"title":{},"body":{"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{}}}],["formsmodule",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/UsersModule.html":{}}}],["fortawesome/fontawesome",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/free",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["free",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["function",{"_index":354,"title":{},"body":{"directives/CompareDirective.html":{},"directives/UniqueEmailDirective.html":{},"miscellaneous/variables.html":{}}}],["further",{"_index":1240,"title":{},"body":{"index.html":{}}}],["gallery",{"_index":417,"title":{},"body":{"components/GalleryComponent.html":{},"components/HeaderComponent.html":{}}}],["gallery'},{'name",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["gallery.component.css",{"_index":418,"title":{},"body":{"components/GalleryComponent.html":{}}}],["gallery.component.html",{"_index":419,"title":{},"body":{"components/GalleryComponent.html":{}}}],["gallerycomponent",{"_index":71,"title":{"components/GalleryComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/BookingModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["generate",{"_index":1218,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1201,"title":{},"body":{"index.html":{}}}],["get(`${baseurl}/validate/${email",{"_index":627,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["get(`${url}/${id",{"_index":492,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["get(baseurl",{"_index":602,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["get(url",{"_index":502,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["get(url:string):httpresponse",{"_index":515,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["getallbookings",{"_index":270,"title":{},"body":{"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{}}}],["getallusers",{"_index":524,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["getauthenticationheader",{"_index":525,"title":{},"body":{"injectables/HttpUserService.html":{},"interfaces/UserService.html":{}}}],["getauthenticationheader():any",{"_index":1112,"title":{},"body":{"interfaces/UserService.html":{}}}],["getbookingbyid",{"_index":271,"title":{},"body":{"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{}}}],["getbookingbyid(id",{"_index":279,"title":{},"body":{"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{}}}],["getloggedinuser",{"_index":526,"title":{},"body":{"injectables/HttpUserService.html":{},"interfaces/UserService.html":{}}}],["getloggedinuser():loggedindetails|undefined",{"_index":1113,"title":{},"body":{"interfaces/UserService.html":{}}}],["gets",{"_index":1021,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["getting",{"_index":1198,"title":{"index.html":{}},"body":{}}],["getuserbyemail",{"_index":527,"title":{},"body":{"injectables/HttpUserService.html":{},"interfaces/UserService.html":{}}}],["getuserbyemail(email",{"_index":555,"title":{},"body":{"injectables/HttpUserService.html":{},"interfaces/UserService.html":{}}}],["getuserbyemail(email:string):observable",{"_index":1114,"title":{},"body":{"interfaces/UserService.html":{}}}],["getuserstatusannouncement",{"_index":528,"title":{},"body":{"injectables/HttpUserService.html":{},"components/MembershipComponent.html":{},"components/RoomBookingComponent.html":{},"interfaces/UserService.html":{}}}],["getuserstatusannouncement():subject",{"_index":1111,"title":{},"body":{"interfaces/UserService.html":{}}}],["go",{"_index":626,"title":{},"body":{"injectables/HttpUserService.html":{},"index.html":{}}}],["graph",{"_index":1247,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":396,"title":{},"body":{"components/FooterComponent.html":{}}}],["guard",{"_index":185,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":186,"title":{},"body":{"guards/AuthGuard.html":{}}}],["h3,button",{"_index":722,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["handle",{"_index":753,"title":{},"body":{"components/MembershipComponent.html":{}}}],["handlecancel",{"_index":771,"title":{},"body":{"components/PopUpComponent.html":{},"components/UserProfileComponent.html":{}}}],["handlecancel(id",{"_index":1019,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["handleclick",{"_index":1011,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["handleclick(confirmation",{"_index":1024,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["handleconfirm",{"_index":772,"title":{},"body":{"components/PopUpComponent.html":{}}}],["handledone",{"_index":773,"title":{},"body":{"components/PopUpComponent.html":{}}}],["handledone(response",{"_index":794,"title":{},"body":{"components/PopUpComponent.html":{}}}],["handledone(response:boolean",{"_index":804,"title":{},"body":{"components/PopUpComponent.html":{}}}],["handleedit",{"_index":1012,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["handleedit(id",{"_index":1027,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["handlelogin",{"_index":671,"title":{},"body":{"components/LoginComponent.html":{}}}],["handlelogout",{"_index":730,"title":{},"body":{"components/MembershipComponent.html":{}}}],["handler",{"_index":642,"title":{},"body":{"injectables/InterceptorService.html":{}}}],["handleregistration",{"_index":814,"title":{},"body":{"components/RegisterComponent.html":{}}}],["header",{"_index":426,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/HttpUserService.html":{}}}],["header'},{'name",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["header.component.css",{"_index":427,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":428,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":73,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headers",{"_index":575,"title":{},"body":{"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{}}}],["height",{"_index":402,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["height:100px",{"_index":456,"title":{},"body":{"components/HomeComponent.html":{}}}],["help",{"_index":1241,"title":{},"body":{"index.html":{}}}],["helper",{"_index":539,"title":{},"body":{"injectables/HttpUserService.html":{},"components/MembershipComponent.html":{}}}],["home",{"_index":437,"title":{},"body":{"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["home.component.css",{"_index":438,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":439,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":75,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hotelmanagement",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["hotelmanagementclient",{"_index":1199,"title":{},"body":{"index.html":{}}}],["html",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["http",{"_index":466,"title":{},"body":{"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{}}}],["http://localhost:4200",{"_index":1211,"title":{},"body":{"index.html":{}}}],["http://localhost:4200/booking/gallery",{"_index":422,"title":{},"body":{"components/GalleryComponent.html":{}}}],["http:httpclient",{"_index":590,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["http_interceptors",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["http_interceptors,useclass:interceptorservice,multi",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["httpbookingservice",{"_index":133,"title":{"injectables/HttpBookingService.html":{}},"body":{"modules/AppModule.html":{},"injectables/HttpBookingService.html":{},"coverage.html":{}}}],["httpcacheservice",{"_index":113,"title":{"injectables/HttpCacheService.html":{}},"body":{"modules/AppModule.html":{},"interceptors/CacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"coverage.html":{},"overview.html":{}}}],["httpclient",{"_index":464,"title":{},"body":{"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"modules/UsersModule.html":{}}}],["httpclientmodule",{"_index":1123,"title":{},"body":{"modules/UsersModule.html":{}}}],["httperrorresponse",{"_index":537,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["httpevent",{"_index":299,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/InterceptorService.html":{}}}],["httphandler",{"_index":296,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/InterceptorService.html":{}}}],["httpinterceptor",{"_index":300,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["httprequest",{"_index":294,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/InterceptorService.html":{}}}],["httpresponse",{"_index":301,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/HttpCacheService.html":{}}}],["https://localhost:5000/api/bookings",{"_index":487,"title":{},"body":{"injectables/HttpBookingService.html":{},"miscellaneous/variables.html":{}}}],["https://localhost:5000/api/logs",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://localhost:5000/api/users",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpuserservice",{"_index":129,"title":{"injectables/HttpUserService.html":{}},"body":{"modules/AppModule.html":{},"injectables/HttpUserService.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["icons",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":239,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{},"components/RegisterComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["id\":1,\"userid\":\"srilakshmi27272@gmail.com\",\"numberofdaysstay\":2,\"price\":1000,\"bookingdate\":\"2022",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id\":1,\"userid\":\"srilakshmi27272@gmail.com\",\"numberofdaysstay\":3,\"price\":1500,\"bookingdate\":\"2022",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id\":1,\"userid\":\"srilakshmi27272@gmail.com\",\"numberofdaysstay\":7,\"price\":1000,\"bookingdate\":\"2022",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identifier",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["if(!this.loggedinuser",{"_index":591,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["if(!this.preventdefault",{"_index":806,"title":{},"body":{"components/PopUpComponent.html":{}}}],["if(cachedresponse",{"_index":322,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["if(confirmation",{"_index":1071,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["if(details",{"_index":743,"title":{},"body":{"components/MembershipComponent.html":{}}}],["if(error.status",{"_index":623,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["if(jsonstring",{"_index":594,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["if(registered",{"_index":1002,"title":{},"body":{"directives/UniqueEmailDirective.html":{},"miscellaneous/variables.html":{}}}],["if(req.method",{"_index":308,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["if(result",{"_index":332,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["if(this.form.invalid",{"_index":865,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.loggedinuser",{"_index":608,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["if(this.userservice.getloggedinuser",{"_index":226,"title":{},"body":{"guards/AuthGuard.html":{}}}],["if(v1",{"_index":366,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["iframes",{"_index":424,"title":{},"body":{"components/GalleryComponent.html":{}}}],["ignore",{"_index":423,"title":{},"body":{"components/GalleryComponent.html":{},"components/LoginComponent.html":{}}}],["img",{"_index":447,"title":{},"body":{"components/HomeComponent.html":{},"components/MembershipComponent.html":{},"components/RegisterComponent.html":{}}}],["implementing",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/InterceptorService.html":{}}}],["implements",{"_index":220,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/CacheInterceptor.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["import",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/BookingModule.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"modules/SharedModule.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"modules/UsersModule.html":{}}}],["importing",{"_index":1120,"title":{},"body":{"modules/UsersModule.html":{}}}],["imports",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BookingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{}}}],["incase",{"_index":629,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"modules/BookingModule.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"modules/SharedModule.html":{},"directives/UniqueEmailDirective.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"modules/UsersModule.html":{}}}],["info:loggedindetails",{"_index":613,"title":{},"body":{"injectables/HttpUserService.html":{},"components/LoginComponent.html":{}}}],["information",{"_index":576,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["initialized",{"_index":748,"title":{},"body":{"components/MembershipComponent.html":{}}}],["initializes",{"_index":1031,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["initializing",{"_index":935,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["inject",{"_index":215,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/HttpBookingService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{}}}],["inject(\"bookingservice",{"_index":1051,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["inject(\"userservice",{"_index":489,"title":{},"body":{"injectables/HttpBookingService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["inject(\"userservice\")private",{"_index":221,"title":{},"body":{"guards/AuthGuard.html":{}}}],["inject('bookingservice",{"_index":943,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["inject('userservice",{"_index":942,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["injectable",{"_index":216,"title":{"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/CacheInterceptor.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"coverage.html":{}}}],["injectables",{"_index":459,"title":{},"body":{"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"overview.html":{}}}],["injection",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["inner",{"_index":450,"title":{},"body":{"components/HomeComponent.html":{}}}],["input",{"_index":431,"title":{},"body":{"components/HeaderComponent.html":{},"components/PopUpComponent.html":{},"components/RoomBookingComponent.html":{}}}],["inputs",{"_index":429,"title":{},"body":{"components/HeaderComponent.html":{},"components/PopUpComponent.html":{}}}],["instance",{"_index":927,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["instanceof",{"_index":333,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["intercept",{"_index":289,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/InterceptorService.html":{}}}],["intercept(req",{"_index":293,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["intercept(request",{"_index":638,"title":{},"body":{"injectables/InterceptorService.html":{}}}],["interceptor",{"_index":285,"title":{"interceptors/CacheInterceptor.html":{}},"body":{"injectables/InterceptorService.html":{},"coverage.html":{}}}],["interceptor.service",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptor.service.ts",{"_index":288,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"coverage.html":{}}}],["interceptor.service.ts:13",{"_index":297,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["interceptor.service.ts:9",{"_index":291,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["interceptors",{"_index":286,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["interceptorservice",{"_index":114,"title":{"injectables/InterceptorService.html":{}},"body":{"modules/AppModule.html":{},"injectables/InterceptorService.html":{},"coverage.html":{},"overview.html":{}}}],["interface",{"_index":190,"title":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"interfaces/BookingService.html":{},"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{},"interfaces/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"interfaces/BookingService.html":{},"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{},"interfaces/UserService.html":{},"coverage.html":{}}}],["interfaces",{"_index":234,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"interfaces/BookingService.html":{},"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{},"interfaces/UserService.html":{},"overview.html":{}}}],["intializes",{"_index":746,"title":{},"body":{"components/MembershipComponent.html":{}}}],["invalid",{"_index":701,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["invalidatecache",{"_index":500,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["invalidatecache():void",{"_index":518,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["invokes",{"_index":822,"title":{},"body":{"components/RegisterComponent.html":{}}}],["isemailregistered",{"_index":529,"title":{},"body":{"injectables/HttpUserService.html":{},"interfaces/UserService.html":{}}}],["isemailregistered(control.value",{"_index":1000,"title":{},"body":{"directives/UniqueEmailDirective.html":{},"miscellaneous/variables.html":{}}}],["isemailregistered(email",{"_index":561,"title":{},"body":{"injectables/HttpUserService.html":{},"interfaces/UserService.html":{}}}],["isemailregistered(email:string):observable",{"_index":1110,"title":{},"body":{"interfaces/UserService.html":{}}}],["jquery",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["json.parse(jsonstring",{"_index":595,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["json.stringify(this.loggedinuser",{"_index":610,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["jsonstring",{"_index":592,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["karma",{"_index":1232,"title":{},"body":{"index.html":{}}}],["legend",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["level:ngxloggerlevel.trace",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lint",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["list",{"_index":476,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["literal",{"_index":1267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local",{"_index":534,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["localstorage.getitem(\"user",{"_index":593,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["localstorage.removeitem(\"user",{"_index":611,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["localstorage.setitem(\"user",{"_index":609,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["localstorage.setitem(url,json.stringify(response",{"_index":513,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["logged",{"_index":553,"title":{},"body":{"injectables/HttpUserService.html":{},"components/MembershipComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["loggedin",{"_index":1136,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loggedindetails",{"_index":552,"title":{"interfaces/LoggedInDetails.html":{}},"body":{"injectables/HttpUserService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loggedindetails|undefined",{"_index":600,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["loggedinuser",{"_index":521,"title":{},"body":{"injectables/HttpUserService.html":{},"components/LoginComponent.html":{}}}],["loggedinuser?:loggedindetails",{"_index":589,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["loggedinuser?:user",{"_index":684,"title":{},"body":{"components/LoginComponent.html":{}}}],["loggedinuserannouncement",{"_index":522,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["logger",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"dependencies.html":{}}}],["logger:ngxlogger",{"_index":442,"title":{},"body":{"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{}}}],["loggermodule",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{}}}],["loggermodule.forroot(environment.logging",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["logging",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":230,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["login(logininfo",{"_index":564,"title":{},"body":{"injectables/HttpUserService.html":{},"interfaces/UserService.html":{}}}],["login(logininfo:logininfo):observable",{"_index":1108,"title":{},"body":{"interfaces/UserService.html":{}}}],["login(this.logininfo",{"_index":688,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.css",{"_index":668,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":669,"title":{},"body":{"components/LoginComponent.html":{}}}],["login:',info",{"_index":616,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["logincomponent",{"_index":77,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["logininfo",{"_index":565,"title":{"interfaces/LoginInfo.html":{}},"body":{"injectables/HttpUserService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{},"interfaces/UserService.html":{},"coverage.html":{}}}],["logininfo:logininfo",{"_index":683,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":530,"title":{},"body":{"injectables/HttpUserService.html":{},"components/MembershipComponent.html":{},"interfaces/UserService.html":{}}}],["logout():observable",{"_index":633,"title":{},"body":{"injectables/HttpUserService.html":{},"interfaces/UserService.html":{}}}],["longdate",{"_index":1093,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["main",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["map",{"_index":485,"title":{},"body":{"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"directives/UniqueEmailDirective.html":{},"miscellaneous/variables.html":{}}}],["map(response=>true",{"_index":628,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["margin",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/RegisterComponent.html":{}}}],["margin:10px",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["margin:50px",{"_index":896,"title":{},"body":{"components/RegisterComponent.html":{}}}],["match",{"_index":370,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"modules/BookingModule.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"modules/SharedModule.html":{},"directives/UniqueEmailDirective.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":880,"title":{},"body":{"components/RegisterComponent.html":{}}}],["membership",{"_index":726,"title":{},"body":{"components/MembershipComponent.html":{}}}],["membership'},{'name",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["membership.component.css",{"_index":727,"title":{},"body":{"components/MembershipComponent.html":{}}}],["membership.component.html",{"_index":728,"title":{},"body":{"components/MembershipComponent.html":{}}}],["membershipcomponent",{"_index":79,"title":{"components/MembershipComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"directives/CompareDirective.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{}}}],["method",{"_index":206,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/BookingService.html":{},"directives/CompareDirective.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":191,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{}}}],["min",{"_index":711,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["miscellaneous",{"_index":1255,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mock",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["models/booking",{"_index":283,"title":{},"body":{"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{},"components/RoomBookingComponent.html":{}}}],["models/user",{"_index":586,"title":{},"body":{"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{}}}],["modified",{"_index":643,"title":{},"body":{"injectables/InterceptorService.html":{}}}],["modifiedrequest",{"_index":647,"title":{},"body":{"injectables/InterceptorService.html":{}}}],["module",{"_index":100,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BookingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/UsersModule.html":{}}}],["modules",{"_index":102,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BookingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/booking/booking.module",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/booking/components/gallery/gallery.component",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/booking/components/room",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/booking/services/http",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/core/components/home/home.component",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/core/core.module",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/core/guards/auth.guard",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/core/interceptors/cache",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/core/interceptors/interceptor.service",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/core/services/http",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/users/components/login/login.component",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/users/components/register/register.component",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/users/components/user",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/users/services/http",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":1242,"title":{},"body":{"index.html":{}}}],["multi",{"_index":340,"title":{},"body":{"directives/CompareDirective.html":{},"directives/UniqueEmailDirective.html":{}}}],["multi:true",{"_index":349,"title":{},"body":{"directives/CompareDirective.html":{}}}],["name",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"directives/UniqueEmailDirective.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"index.html":{}}}],["name:\"srilakshmi",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:string",{"_index":655,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["nav",{"_index":761,"title":{},"body":{"components/MembershipComponent.html":{}}}],["navbar",{"_index":760,"title":{},"body":{"components/MembershipComponent.html":{}}}],["navigate",{"_index":754,"title":{},"body":{"components/MembershipComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["nbsp;&nbsp",{"_index":1096,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["necessary",{"_index":236,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["need",{"_index":229,"title":{},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["new",{"_index":582,"title":{},"body":{"injectables/HttpUserService.html":{},"components/PopUpComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":295,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{}}}],["next.handle(modifiedrequest",{"_index":650,"title":{},"body":{"injectables/InterceptorService.html":{}}}],["next.handle(req",{"_index":314,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["next:(user:any",{"_index":873,"title":{},"body":{"components/RegisterComponent.html":{}}}],["ng",{"_index":1208,"title":{},"body":{"index.html":{}}}],["ng_async_validators",{"_index":986,"title":{},"body":{"directives/UniqueEmailDirective.html":{}}}],["ng_validators",{"_index":338,"title":{},"body":{"directives/CompareDirective.html":{},"directives/UniqueEmailDirective.html":{}}}],["ngmodule",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BookingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{}}}],["ngondestroy",{"_index":731,"title":{},"body":{"components/MembershipComponent.html":{},"components/RoomBookingComponent.html":{}}}],["ngoninit",{"_index":386,"title":{},"body":{"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["ngrx/store",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["ngx",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"dependencies.html":{}}}],["ngxlogger",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{}}}],["ngxloggerlevel",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["nothing",{"_index":474,"title":{},"body":{"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{}}}],["null",{"_index":367,"title":{},"body":{"directives/CompareDirective.html":{},"directives/UniqueEmailDirective.html":{},"miscellaneous/variables.html":{}}}],["nullable",{"_index":663,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["number",{"_index":245,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{},"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["numberofdaysstay",{"_index":240,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"components/RoomBookingComponent.html":{}}}],["numberofdaysstay:1",{"_index":1040,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["numberofdaysstay:number",{"_index":248,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{}}}],["object",{"_index":824,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":211,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"directives/UniqueEmailDirective.html":{},"interfaces/UserService.html":{},"miscellaneous/variables.html":{}}}],["of(cachedresponse",{"_index":326,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["of(false",{"_index":625,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["of(null",{"_index":1004,"title":{},"body":{"directives/UniqueEmailDirective.html":{},"miscellaneous/variables.html":{}}}],["of(undefined",{"_index":635,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["ondestroy",{"_index":919,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["oninit",{"_index":383,"title":{},"body":{"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["optional",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Booking.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"directives/UniqueEmailDirective.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{}}}],["otherwise",{"_index":554,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["out",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":797,"title":{},"body":{"components/PopUpComponent.html":{}}}],["outputs",{"_index":778,"title":{},"body":{"components/PopUpComponent.html":{}}}],["overview",{"_index":1243,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":391,"title":{},"body":{"components/FooterComponent.html":{}}}],["package",{"_index":1171,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/RegisterComponent.html":{}}}],["page",{"_index":755,"title":{},"body":{"components/MembershipComponent.html":{},"components/RoomBookingComponent.html":{},"index.html":{}}}],["param",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/BookingService.html":{},"directives/CompareDirective.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{}}}],["paramater",{"_index":928,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["parameters",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{}}}],["params[\"id",{"_index":1055,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["param{string",{"_index":597,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["particular",{"_index":479,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["passed",{"_index":480,"title":{},"body":{"injectables/HttpBookingService.html":{},"components/UserProfileComponent.html":{}}}],["password",{"_index":352,"title":{},"body":{"directives/CompareDirective.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["password:\"1234",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["password:['',passwordvalidators",{"_index":859,"title":{},"body":{"components/RegisterComponent.html":{}}}],["password:string",{"_index":355,"title":{},"body":{"directives/CompareDirective.html":{},"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["passwordfield.errors!['minlength']!.actuallength",{"_index":714,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordfield.errors!['minlength']!.requiredlength",{"_index":712,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordfield.errors![\\'minlength\\']!.actuallength",{"_index":724,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordfield.errors![\\'minlength\\']!.requiredlength",{"_index":723,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordvalidators",{"_index":844,"title":{},"body":{"components/RegisterComponent.html":{}}}],["path:\"\",component:homecomponent",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"booking/gallery\",component:gallerycomponent",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"user/login\",component:logincomponent",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"user/register\",component:registercomponent",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:'booking",{"_index":179,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:'home',component:homecomponent",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:'user/profile/:id',canactivate:[authguard],component:userprofilecomponent",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["phone",{"_index":658,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["phonenumber",{"_index":1005,"title":{},"body":{"interfaces/User.html":{}}}],["phonenumber:\"9137846733",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phonenumber:['',phonenumbervalidators",{"_index":861,"title":{},"body":{"components/RegisterComponent.html":{}}}],["phonenumber:string",{"_index":659,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["phonenumbervalidators",{"_index":848,"title":{},"body":{"components/RegisterComponent.html":{}}}],["pipe",{"_index":330,"title":{"pipes/SearchPipe.html":{}},"body":{"interceptors/CacheInterceptor.html":{},"injectables/HttpUserService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"directives/UniqueEmailDirective.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["pipes",{"_index":964,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["pipes/search.pipe",{"_index":983,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipetransform",{"_index":971,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["platform",{"_index":1235,"title":{},"body":{"index.html":{}}}],["pop",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["popperjs/core",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["popup",{"_index":1023,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["popupcomponent",{"_index":81,"title":{"components/PopUpComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"modules/SharedModule.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["position",{"_index":400,"title":{},"body":{"components/FooterComponent.html":{}}}],["post",{"_index":469,"title":{},"body":{"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{}}}],["post(`${baseurl}/login`,logininfo",{"_index":612,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["post(url,booking",{"_index":493,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["preventdefault",{"_index":776,"title":{},"body":{"components/PopUpComponent.html":{}}}],["preventdefault:boolean=false",{"_index":801,"title":{},"body":{"components/PopUpComponent.html":{}}}],["price",{"_index":241,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"components/UserProfileComponent.html":{}}}],["price:string",{"_index":250,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{}}}],["primary",{"_index":708,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["private",{"_index":223,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{}}}],["production",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["profile.component",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UsersModule.html":{}}}],["profile.component.css",{"_index":1008,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.html",{"_index":1009,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts",{"_index":1007,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:105",{"_index":1028,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:116",{"_index":1025,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:145",{"_index":1041,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:155",{"_index":1034,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:20",{"_index":1016,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:34",{"_index":1036,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:38",{"_index":1043,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:42",{"_index":1037,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:46",{"_index":1038,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:50",{"_index":1044,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:55",{"_index":1029,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:70",{"_index":1045,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:74",{"_index":1042,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:76",{"_index":1032,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:82",{"_index":1017,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:88",{"_index":1035,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:93",{"_index":1020,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile/user",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/UserProfileComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["profilepic",{"_index":656,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["profilepic:\"https://www.bing.com/th?id=oip.4lvhdgxwrykur9z5jeia7ahafg&w=150&h=112&c=8&rs=1&qlt=90&o=6&dpr=1.5&pid=3.1&rm=2",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profilepic?:string",{"_index":657,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["profileurl",{"_index":858,"title":{},"body":{"components/RegisterComponent.html":{}}}],["project",{"_index":1200,"title":{},"body":{"index.html":{}}}],["promise",{"_index":212,"title":{},"body":{"guards/AuthGuard.html":{},"directives/UniqueEmailDirective.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":22,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/MembershipComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"properties.html":{}}}],["property",{"_index":244,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"components/HeaderComponent.html":{},"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["provide",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"directives/CompareDirective.html":{},"directives/UniqueEmailDirective.html":{}}}],["provide:\"bookingservice\",useclass:httpbookingservice",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["provide:\"userservice\",useclass:httpuserservice",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["provide:http_interceptors,useclass:cacheinterceptor,multi:true",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["provide:ng_validators",{"_index":347,"title":{},"body":{"directives/CompareDirective.html":{}}}],["providedin",{"_index":219,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/CacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/InterceptorService.html":{}}}],["providedin:\"root",{"_index":488,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["providers",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"directives/CompareDirective.html":{},"directives/UniqueEmailDirective.html":{}}}],["providers:[authguard",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["put",{"_index":483,"title":{},"body":{"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{}}}],["put(`${url}/${bookingid}`,booking",{"_index":496,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["put(url",{"_index":505,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["put(url:string",{"_index":510,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["px",{"_index":394,"title":{},"body":{"components/FooterComponent.html":{}}}],["radius",{"_index":718,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["reactiveformsmodule",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/UsersModule.html":{}}}],["received",{"_index":615,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["redirect",{"_index":825,"title":{},"body":{"components/RegisterComponent.html":{}}}],["redirected",{"_index":960,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["redirecting",{"_index":931,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["reference",{"_index":1244,"title":{},"body":{"index.html":{}}}],["register",{"_index":531,"title":{},"body":{"injectables/HttpUserService.html":{},"components/MembershipComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserService.html":{}}}],["register'},{'name",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["register(this.user",{"_index":871,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register(user",{"_index":571,"title":{},"body":{"injectables/HttpUserService.html":{},"interfaces/UserService.html":{}}}],["register(user:user):observable",{"_index":1109,"title":{},"body":{"interfaces/UserService.html":{}}}],["register.component.css",{"_index":812,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":813,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":84,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":462,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["registered:boolean",{"_index":1001,"title":{},"body":{"directives/UniqueEmailDirective.html":{},"miscellaneous/variables.html":{}}}],["registeronvalidatorchange",{"_index":987,"title":{},"body":{"directives/UniqueEmailDirective.html":{}}}],["registeronvalidatorchange(fn",{"_index":989,"title":{},"body":{"directives/UniqueEmailDirective.html":{}}}],["registeronvalidatorchange?(fn",{"_index":997,"title":{},"body":{"directives/UniqueEmailDirective.html":{}}}],["registration",{"_index":828,"title":{},"body":{"components/RegisterComponent.html":{}}}],["related",{"_index":266,"title":{},"body":{"interfaces/BookingService.html":{}}}],["reload",{"_index":1213,"title":{},"body":{"index.html":{}}}],["req",{"_index":298,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["req.method",{"_index":311,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["req.url",{"_index":312,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["request",{"_index":307,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{}}}],["request.clone",{"_index":648,"title":{},"body":{"injectables/InterceptorService.html":{}}}],["requested",{"_index":509,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["requests",{"_index":499,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["requests:any",{"_index":507,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["require",{"_index":1168,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":710,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["requires",{"_index":823,"title":{},"body":{"components/RegisterComponent.html":{}}}],["reset",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":317,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"components/PopUpComponent.html":{}}}],["response:httpresponse):void",{"_index":511,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["result",{"_index":336,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/HttpUserService.html":{}}}],["results",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"modules/BookingModule.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"modules/SharedModule.html":{},"directives/UniqueEmailDirective.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":514,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["retrieving",{"_index":315,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["return",{"_index":227,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":210,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{}}}],["right",{"_index":762,"title":{},"body":{"components/MembershipComponent.html":{}}}],["room",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["roombookingcomponent",{"_index":86,"title":{"components/RoomBookingComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/BookingModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["roomno",{"_index":242,"title":{},"body":{"interfaces/Booking.html":{}}}],["roomno?:string",{"_index":249,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/CacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"injectables/InterceptorService.html":{}}}],["root'},{'name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["route",{"_index":207,"title":{},"body":{"guards/AuthGuard.html":{}}}],["router",{"_index":194,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["router:router",{"_index":224,"title":{},"body":{"guards/AuthGuard.html":{},"components/MembershipComponent.html":{},"components/RegisterComponent.html":{}}}],["routermodule",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BookingModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{}}}],["routermodule.forroot(routes",{"_index":182,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":199,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":159,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["routing.module.ts",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1207,"title":{},"body":{"index.html":{}}}],["running",{"_index":1226,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":217,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"directives/UniqueEmailDirective.html":{},"interfaces/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":835,"title":{},"body":{"components/RegisterComponent.html":{}}}],["save",{"_index":329,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["scaffolding",{"_index":1217,"title":{},"body":{"index.html":{}}}],["search",{"_index":966,"title":{},"body":{"pipes/SearchPipe.html":{},"components/UserProfileComponent.html":{}}}],["searchpipe",{"_index":963,"title":{"pipes/SearchPipe.html":{}},"body":{"pipes/SearchPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"directives/CompareDirective.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{}}}],["selector:\"user",{"_index":1048,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["send",{"_index":327,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/HttpUserService.html":{}}}],["sends",{"_index":468,"title":{},"body":{"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{}}}],["serve",{"_index":1209,"title":{},"body":{"index.html":{}}}],["server",{"_index":328,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serverloggingurl",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverloglevel:ngxloggerlevel.trace",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/UsersModule.html":{}}}],["service.ts",{"_index":461,"title":{},"body":{"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["service.ts:110",{"_index":566,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["service.ts:130",{"_index":572,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["service.ts:142",{"_index":538,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["service.ts:155",{"_index":562,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["service.ts:170",{"_index":558,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["service.ts:179",{"_index":570,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["service.ts:20",{"_index":465,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["service.ts:22",{"_index":583,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["service.ts:26",{"_index":533,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["service.ts:36",{"_index":475,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["service.ts:46",{"_index":478,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["service.ts:49",{"_index":556,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["service.ts:58",{"_index":551,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["service.ts:60",{"_index":467,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["service.ts:67",{"_index":543,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["service.ts:72",{"_index":471,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["service.ts:80",{"_index":545,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["service.ts:85",{"_index":482,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["service.ts:94",{"_index":578,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["services/booking.service",{"_index":941,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["services/http",{"_index":303,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"modules/UsersModule.html":{}}}],["services/user.service",{"_index":681,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["setheaders",{"_index":649,"title":{},"body":{"injectables/InterceptorService.html":{}}}],["sets",{"_index":741,"title":{},"body":{"components/MembershipComponent.html":{},"components/UserProfileComponent.html":{}}}],["settings",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shadow",{"_index":408,"title":{},"body":{"components/FooterComponent.html":{}}}],["shared/shared.module",{"_index":380,"title":{},"body":{"modules/CoreModule.html":{},"modules/UsersModule.html":{}}}],["sharedmodule",{"_index":375,"title":{"modules/SharedModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["showpopup",{"_index":1013,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["solid",{"_index":395,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"modules/BookingModule.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"directives/CompareDirective.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"modules/SharedModule.html":{},"directives/UniqueEmailDirective.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["spec\\.ts",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../compare.directive.ts",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../http",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../unique",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/modules/booking/booking.module.ts",{"_index":258,"title":{},"body":{"modules/BookingModule.html":{}}}],["src/app/modules/booking/components/gallery/gallery.component.ts",{"_index":416,"title":{},"body":{"components/GalleryComponent.html":{},"coverage.html":{}}}],["src/app/modules/booking/components/room",{"_index":917,"title":{},"body":{"components/RoomBookingComponent.html":{},"coverage.html":{}}}],["src/app/modules/booking/models/booking",{"_index":1046,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["src/app/modules/booking/models/booking.ts",{"_index":235,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"coverage.html":{}}}],["src/app/modules/booking/services/booking.service",{"_index":1047,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["src/app/modules/booking/services/booking.service.ts",{"_index":265,"title":{},"body":{"interfaces/BookingService.html":{},"coverage.html":{}}}],["src/app/modules/booking/services/booking.service.ts:12",{"_index":277,"title":{},"body":{"interfaces/BookingService.html":{}}}],["src/app/modules/booking/services/booking.service.ts:19",{"_index":280,"title":{},"body":{"interfaces/BookingService.html":{}}}],["src/app/modules/booking/services/booking.service.ts:25",{"_index":274,"title":{},"body":{"interfaces/BookingService.html":{}}}],["src/app/modules/booking/services/booking.service.ts:31",{"_index":276,"title":{},"body":{"interfaces/BookingService.html":{}}}],["src/app/modules/booking/services/booking.service.ts:37",{"_index":282,"title":{},"body":{"interfaces/BookingService.html":{}}}],["src/app/modules/booking/services/http",{"_index":460,"title":{},"body":{"injectables/HttpBookingService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/core/components/footer/footer.component.ts",{"_index":381,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/modules/core/components/footer/footer.component.ts:11",{"_index":387,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/modules/core/components/footer/footer.component.ts:15",{"_index":388,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/modules/core/components/header/header.component.ts",{"_index":425,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/modules/core/components/header/header.component.ts:16",{"_index":430,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/modules/core/components/header/header.component.ts:20",{"_index":432,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/modules/core/components/home/home.component.ts",{"_index":436,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/modules/core/components/home/home.component.ts:12",{"_index":440,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/modules/core/components/home/home.component.ts:22",{"_index":441,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/modules/core/core.module.ts",{"_index":376,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/modules/core/guards/auth.guard.ts",{"_index":187,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/modules/core/guards/auth.guard.ts:12",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/modules/core/guards/auth.guard.ts:31",{"_index":200,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/modules/core/interceptors/cache",{"_index":287,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"coverage.html":{}}}],["src/app/modules/core/interceptors/interceptor.service.ts",{"_index":636,"title":{},"body":{"injectables/InterceptorService.html":{},"coverage.html":{}}}],["src/app/modules/core/interceptors/interceptor.service.ts:12",{"_index":637,"title":{},"body":{"injectables/InterceptorService.html":{}}}],["src/app/modules/core/interceptors/interceptor.service.ts:24",{"_index":639,"title":{},"body":{"injectables/InterceptorService.html":{}}}],["src/app/modules/core/services/http",{"_index":497,"title":{},"body":{"injectables/HttpCacheService.html":{},"coverage.html":{}}}],["src/app/modules/shared/components/pop",{"_index":765,"title":{},"body":{"components/PopUpComponent.html":{},"coverage.html":{}}}],["src/app/modules/shared/directives/compare.directive",{"_index":836,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/shared/directives/compare.directive.ts",{"_index":337,"title":{},"body":{"directives/CompareDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/shared/directives/compare.directive.ts:15",{"_index":342,"title":{},"body":{"directives/CompareDirective.html":{}}}],["src/app/modules/shared/directives/unique",{"_index":838,"title":{},"body":{"components/RegisterComponent.html":{},"directives/UniqueEmailDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/shared/pipes/search.pipe.ts",{"_index":965,"title":{},"body":{"pipes/SearchPipe.html":{},"coverage.html":{}}}],["src/app/modules/shared/pipes/search.pipe.ts:9",{"_index":970,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["src/app/modules/shared/shared.module.ts",{"_index":980,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/modules/users/components/login/login.component.ts",{"_index":667,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/modules/users/components/login/login.component.ts:16",{"_index":672,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/users/components/login/login.component.ts:28",{"_index":678,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/users/components/login/login.component.ts:35",{"_index":676,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/users/components/login/login.component.ts:39",{"_index":679,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/users/components/login/login.component.ts:43",{"_index":680,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/users/components/login/login.component.ts:47",{"_index":673,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/users/components/membership/membership.component.ts",{"_index":725,"title":{},"body":{"components/MembershipComponent.html":{},"coverage.html":{}}}],["src/app/modules/users/components/membership/membership.component.ts:12",{"_index":733,"title":{},"body":{"components/MembershipComponent.html":{}}}],["src/app/modules/users/components/membership/membership.component.ts:15",{"_index":738,"title":{},"body":{"components/MembershipComponent.html":{}}}],["src/app/modules/users/components/membership/membership.component.ts:24",{"_index":736,"title":{},"body":{"components/MembershipComponent.html":{}}}],["src/app/modules/users/components/membership/membership.component.ts:38",{"_index":735,"title":{},"body":{"components/MembershipComponent.html":{}}}],["src/app/modules/users/components/membership/membership.component.ts:45",{"_index":734,"title":{},"body":{"components/MembershipComponent.html":{}}}],["src/app/modules/users/components/register/register.component.ts",{"_index":811,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/modules/users/components/register/register.component.ts:120",{"_index":829,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/users/components/register/register.component.ts:21",{"_index":833,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/users/components/register/register.component.ts:22",{"_index":831,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/users/components/register/register.component.ts:23",{"_index":832,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/users/components/register/register.component.ts:24",{"_index":817,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/users/components/register/register.component.ts:90",{"_index":819,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/users/components/user",{"_index":1006,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["src/app/modules/users/models/user.ts",{"_index":651,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/modules/users/services/http",{"_index":520,"title":{},"body":{"injectables/HttpUserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/users/services/user.service",{"_index":739,"title":{},"body":{"components/MembershipComponent.html":{},"components/RoomBookingComponent.html":{}}}],["src/app/modules/users/services/user.service.ts",{"_index":1098,"title":{},"body":{"interfaces/UserService.html":{},"coverage.html":{}}}],["src/app/modules/users/services/user.service.ts:11",{"_index":1103,"title":{},"body":{"interfaces/UserService.html":{}}}],["src/app/modules/users/services/user.service.ts:13",{"_index":1102,"title":{},"body":{"interfaces/UserService.html":{}}}],["src/app/modules/users/services/user.service.ts:15",{"_index":1105,"title":{},"body":{"interfaces/UserService.html":{}}}],["src/app/modules/users/services/user.service.ts:17",{"_index":1099,"title":{},"body":{"interfaces/UserService.html":{}}}],["src/app/modules/users/services/user.service.ts:19",{"_index":1100,"title":{},"body":{"interfaces/UserService.html":{}}}],["src/app/modules/users/services/user.service.ts:21",{"_index":1101,"title":{},"body":{"interfaces/UserService.html":{}}}],["src/app/modules/users/services/user.service.ts:7",{"_index":1104,"title":{},"body":{"interfaces/UserService.html":{}}}],["src/app/modules/users/services/user.service.ts:9",{"_index":1106,"title":{},"body":{"interfaces/UserService.html":{}}}],["src/app/modules/users/users.module.ts",{"_index":1119,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/environments/environment",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":1164,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1165,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1166,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["staged",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["started",{"_index":53,"title":{"index.html":{}},"body":{"components/AppComponent.html":{}}}],["state",{"_index":198,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":1129,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":546,"title":{},"body":{"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["status?:string",{"_index":685,"title":{},"body":{"components/LoginComponent.html":{}}}],["statusstyle",{"_index":670,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["statusstyle='text",{"_index":841,"title":{},"body":{"components/RegisterComponent.html":{}}}],["statusstyle?:string",{"_index":686,"title":{},"body":{"components/LoginComponent.html":{}}}],["stay",{"_index":1087,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["storage",{"_index":535,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["stored",{"_index":1223,"title":{},"body":{"index.html":{}}}],["storing",{"_index":508,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["string",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"directives/CompareDirective.html":{},"components/HeaderComponent.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["styleurls:['./user",{"_index":1050,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["subject",{"_index":560,"title":{},"body":{"injectables/HttpUserService.html":{},"interfaces/UserService.html":{}}}],["subsciption",{"_index":922,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["subscribe",{"_index":689,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe((details",{"_index":947,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["subscribe((x",{"_index":956,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["subscribe(details=>this.updateuserstatus(details",{"_index":750,"title":{},"body":{"components/MembershipComponent.html":{}}}],["subscribes",{"_index":675,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscription",{"_index":933,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["success",{"_index":696,"title":{},"body":{"components/LoginComponent.html":{}}}],["successful",{"_index":827,"title":{},"body":{"components/RegisterComponent.html":{}}}],["support",{"_index":1245,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1180,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["table",{"_index":1170,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1169,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":321,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["taken",{"_index":567,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["takes",{"_index":820,"title":{},"body":{"components/RegisterComponent.html":{}}}],["tap",{"_index":302,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"components/RegisterComponent.html":{}}}],["tap((response:any)=>console.log('response',response",{"_index":872,"title":{},"body":{"components/RegisterComponent.html":{}}}],["tap(result",{"_index":331,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["templateurl:\"./user",{"_index":1049,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["test",{"_index":1229,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1238,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["tests",{"_index":1228,"title":{},"body":{"index.html":{}}}],["text",{"_index":397,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{}}}],["this.activatedroute.params.subscribe(params",{"_index":1053,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.booking.userid",{"_index":952,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["this.bookingid",{"_index":1067,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.bookingid=id",{"_index":1069,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.bookingservice",{"_index":954,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["this.bookingservice.cancelbooking(this.bookingid).subscribe",{"_index":1072,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.bookingservice.updatebooking(this.updatebooking,this.bookingid).subscribe(x",{"_index":1079,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.cacheservice.get(req.url",{"_index":320,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.cacheservice.invalidatecache",{"_index":313,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.cacheservice.put(req.url",{"_index":335,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.done.emit(response",{"_index":805,"title":{},"body":{"components/PopUpComponent.html":{}}}],["this.edit",{"_index":1068,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.form.value",{"_index":869,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.form=this.builder.group",{"_index":855,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.handledone(false",{"_index":810,"title":{},"body":{"components/PopUpComponent.html":{}}}],["this.handledone(true",{"_index":809,"title":{},"body":{"components/PopUpComponent.html":{}}}],["this.http.get(baseurl+'/'+email",{"_index":599,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["this.http.get(url",{"_index":491,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["this.http.post(baseurl",{"_index":619,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["this.id",{"_index":1054,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.loggedinuser",{"_index":601,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["this.loggedinuser.token",{"_index":604,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["this.loggedinuser=user",{"_index":606,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["this.loggedinuserannouncement",{"_index":632,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["this.loggedinuserannouncement.next(user",{"_index":607,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["this.logger.error('error",{"_index":699,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logger.info(\"application",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["this.logger.info(\"entering",{"_index":950,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["this.logger.info(\"home",{"_index":443,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.logger.info('entering",{"_index":490,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["this.logger.trace(\"booking",{"_index":958,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["this.logger.trace('entering",{"_index":598,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["this.logger.trace('inside",{"_index":617,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["this.logger.warn('form",{"_index":867,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.requests",{"_index":519,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["this.requests[url",{"_index":512,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["this.router.navigate(['/user/login",{"_index":232,"title":{},"body":{"guards/AuthGuard.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate(['home",{"_index":697,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['user/login",{"_index":758,"title":{},"body":{"components/MembershipComponent.html":{}}}],["this.router.navigate(['user/profile',this.user.email",{"_index":961,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["this.showpopup",{"_index":1063,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.status='please",{"_index":706,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.status=`error",{"_index":703,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.status=`welcome",{"_index":693,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.statusstyle='text",{"_index":695,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.subsciption",{"_index":946,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["this.subsciption.unsubscribe",{"_index":949,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["this.updatebooking.userid",{"_index":1077,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.updatecurrentuser",{"_index":634,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["this.updatecurrentuser(info",{"_index":618,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["this.updatecurrentuser(user",{"_index":596,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["this.updateuserstatus(details",{"_index":948,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["this.updatevisible=true",{"_index":1061,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.user",{"_index":868,"title":{},"body":{"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.user!.email",{"_index":1078,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.user.email",{"_index":953,"title":{},"body":{"components/RoomBookingComponent.html":{}}}],["this.user=details.user",{"_index":744,"title":{},"body":{"components/MembershipComponent.html":{}}}],["this.user=undefined",{"_index":745,"title":{},"body":{"components/MembershipComponent.html":{}}}],["this.userbookings=this.user.userbookings",{"_index":1058,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.userservice",{"_index":687,"title":{},"body":{"components/LoginComponent.html":{},"components/RoomBookingComponent.html":{}}}],["this.userservice.getauthenticationheader",{"_index":646,"title":{},"body":{"injectables/InterceptorService.html":{}}}],["this.userservice.getloggedinuser",{"_index":749,"title":{},"body":{"components/MembershipComponent.html":{},"components/RoomBookingComponent.html":{}}}],["this.userservice.getuserbyemail(this.id).subscribe(user",{"_index":1056,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.userservice.getuserstatusannouncement().unsubscribe",{"_index":752,"title":{},"body":{"components/MembershipComponent.html":{}}}],["this.userservice.logout",{"_index":757,"title":{},"body":{"components/MembershipComponent.html":{}}}],["this.visible",{"_index":1060,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.visible=false",{"_index":807,"title":{},"body":{"components/PopUpComponent.html":{}}}],["this.visiblechange.emit(false",{"_index":808,"title":{},"body":{"components/PopUpComponent.html":{}}}],["throwerror",{"_index":585,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["throws",{"_index":542,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["title",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/PopUpComponent.html":{}}}],["title:string=\"pop",{"_index":798,"title":{},"body":{"components/PopUpComponent.html":{}}}],["title:string='hotelmanagement",{"_index":433,"title":{},"body":{"components/HeaderComponent.html":{}}}],["token",{"_index":547,"title":{},"body":{"injectables/HttpUserService.html":{},"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["token:\"asdfghjkl",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token:\"qwertyui",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token:string",{"_index":666,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["top",{"_index":414,"title":{},"body":{"components/FooterComponent.html":{}}}],["top:1",{"_index":393,"title":{},"body":{"components/FooterComponent.html":{}}}],["top:90px",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["transform",{"_index":967,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["transform(bookings",{"_index":968,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["true",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"directives/CompareDirective.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["trying",{"_index":700,"title":{},"body":{"components/LoginComponent.html":{}}}],["tslib",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":640,"title":{},"body":{"injectables/InterceptorService.html":{}}}],["type",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"interfaces/BookingService.html":{},"interceptors/CacheInterceptor.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"directives/UniqueEmailDirective.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type\":\"application/json",{"_index":621,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["undefined",{"_index":549,"title":{},"body":{"injectables/HttpUserService.html":{},"components/RoomBookingComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/UserService.html":{}}}],["uniqueemail",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{}}}],["uniqueemail:{message:`duplicate",{"_index":1003,"title":{},"body":{"directives/UniqueEmailDirective.html":{},"miscellaneous/variables.html":{}}}],["uniqueemaildirective",{"_index":95,"title":{"directives/UniqueEmailDirective.html":{}},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["uniqueemailvalidator",{"_index":837,"title":{},"body":{"components/RegisterComponent.html":{},"directives/UniqueEmailDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uniqueemailvalidator(this.userservice",{"_index":857,"title":{},"body":{"components/RegisterComponent.html":{}}}],["uniqueemailvalidator(this.userservice)(control",{"_index":996,"title":{},"body":{"directives/UniqueEmailDirective.html":{}}}],["unit",{"_index":1227,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["unknown",{"_index":974,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["unsubscribe",{"_index":751,"title":{},"body":{"components/MembershipComponent.html":{},"components/RoomBookingComponent.html":{}}}],["up",{"_index":768,"title":{},"body":{"components/PopUpComponent.html":{},"components/UserProfileComponent.html":{}}}],["up'},{'name",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["up.component",{"_index":982,"title":{},"body":{"modules/SharedModule.html":{}}}],["up.component.css",{"_index":769,"title":{},"body":{"components/PopUpComponent.html":{}}}],["up.component.html",{"_index":770,"title":{},"body":{"components/PopUpComponent.html":{}}}],["up.component.ts",{"_index":767,"title":{},"body":{"components/PopUpComponent.html":{},"coverage.html":{}}}],["up.component.ts:12",{"_index":796,"title":{},"body":{"components/PopUpComponent.html":{}}}],["up.component.ts:15",{"_index":787,"title":{},"body":{"components/PopUpComponent.html":{}}}],["up.component.ts:16",{"_index":785,"title":{},"body":{"components/PopUpComponent.html":{}}}],["up.component.ts:17",{"_index":783,"title":{},"body":{"components/PopUpComponent.html":{}}}],["up.component.ts:18",{"_index":786,"title":{},"body":{"components/PopUpComponent.html":{}}}],["up.component.ts:21",{"_index":788,"title":{},"body":{"components/PopUpComponent.html":{}}}],["up.component.ts:22",{"_index":791,"title":{},"body":{"components/PopUpComponent.html":{}}}],["up.component.ts:24",{"_index":790,"title":{},"body":{"components/PopUpComponent.html":{}}}],["up.component.ts:26",{"_index":795,"title":{},"body":{"components/PopUpComponent.html":{}}}],["up.component.ts:34",{"_index":793,"title":{},"body":{"components/PopUpComponent.html":{}}}],["up.component.ts:38",{"_index":792,"title":{},"body":{"components/PopUpComponent.html":{}}}],["up.component.ts:8",{"_index":781,"title":{},"body":{"components/PopUpComponent.html":{}}}],["up/pop",{"_index":766,"title":{},"body":{"components/PopUpComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["update",{"_index":579,"title":{},"body":{"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{}}}],["updatebooking",{"_index":272,"title":{},"body":{"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{},"components/UserProfileComponent.html":{}}}],["updatebooking(booking",{"_index":281,"title":{},"body":{"interfaces/BookingService.html":{},"injectables/HttpBookingService.html":{}}}],["updatebooking(booking:bookingdetails,id:number",{"_index":284,"title":{},"body":{"interfaces/BookingService.html":{}}}],["updatebooking:bookingdetails",{"_index":1075,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updatebookings",{"_index":1014,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updatebookings(confirmation",{"_index":1033,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updatebookings(confirmation:boolean",{"_index":1076,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updatecurrentuser",{"_index":532,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["updatecurrentuser(user",{"_index":577,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["updatecurrentuser(user?:loggedindetails",{"_index":605,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["updated",{"_index":1080,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updates",{"_index":568,"title":{},"body":{"injectables/HttpUserService.html":{},"components/RoomBookingComponent.html":{}}}],["updateuserstatus",{"_index":732,"title":{},"body":{"components/MembershipComponent.html":{},"components/RoomBookingComponent.html":{}}}],["updateuserstatus(details",{"_index":737,"title":{},"body":{"components/MembershipComponent.html":{},"components/RoomBookingComponent.html":{}}}],["updateuserstatus(details:any",{"_index":742,"title":{},"body":{"components/MembershipComponent.html":{}}}],["updatevisible",{"_index":1010,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updatevisible:boolean=false",{"_index":1059,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updating",{"_index":484,"title":{},"body":{"injectables/HttpBookingService.html":{}}}],["upon",{"_index":826,"title":{},"body":{"components/RegisterComponent.html":{}}}],["url",{"_index":318,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["urltree",{"_index":214,"title":{},"body":{"guards/AuthGuard.html":{}}}],["usage",{"_index":421,"title":{},"body":{"components/GalleryComponent.html":{}}}],["use",{"_index":1219,"title":{},"body":{"index.html":{}}}],["used",{"_index":682,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["useexisting",{"_index":339,"title":{},"body":{"directives/CompareDirective.html":{},"directives/UniqueEmailDirective.html":{}}}],["useexisting:comparedirective",{"_index":348,"title":{},"body":{"directives/CompareDirective.html":{}}}],["user",{"_index":90,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpUserService.html":{},"interfaces/LoggedInDetails.html":{},"components/LoginComponent.html":{},"interfaces/LoginInfo.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user!.aadhaarid",{"_index":1085,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user!.email",{"_index":1083,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user!.name",{"_index":1082,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user!.phonenumber",{"_index":1084,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user,{headers",{"_index":620,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["user.name",{"_index":694,"title":{},"body":{"components/LoginComponent.html":{}}}],["user.service",{"_index":587,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["user:user",{"_index":665,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["user=info.user",{"_index":691,"title":{},"body":{"components/LoginComponent.html":{}}}],["user?:any",{"_index":740,"title":{},"body":{"components/MembershipComponent.html":{}}}],["user?:user",{"_index":840,"title":{},"body":{"components/RegisterComponent.html":{}}}],["user?user.name:'guest",{"_index":759,"title":{},"body":{"components/MembershipComponent.html":{}}}],["user?user.name:\\'guest",{"_index":764,"title":{},"body":{"components/MembershipComponent.html":{}}}],["userbookings",{"_index":662,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["userbookings?:any",{"_index":664,"title":{},"body":{"interfaces/LoggedInDetails.html":{},"interfaces/LoginInfo.html":{},"interfaces/User.html":{}}}],["userbookings?:booking",{"_index":1052,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["userid",{"_index":243,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{}}}],["userid:string",{"_index":247,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingDetails.html":{}}}],["userprofilecomponent",{"_index":89,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":544,"title":{},"body":{"injectables/HttpUserService.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["users/services/user.service",{"_index":218,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/HttpBookingService.html":{},"injectables/InterceptorService.html":{},"directives/UniqueEmailDirective.html":{}}}],["users/users.module",{"_index":263,"title":{},"body":{"modules/BookingModule.html":{},"modules/CoreModule.html":{}}}],["userservice",{"_index":193,"title":{"interfaces/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/HttpBookingService.html":{},"injectables/HttpUserService.html":{},"injectables/InterceptorService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"interfaces/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice:userservice",{"_index":222,"title":{},"body":{"guards/AuthGuard.html":{},"components/RegisterComponent.html":{}}}],["usersmodule",{"_index":257,"title":{"modules/UsersModule.html":{}},"body":{"modules/BookingModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["v1",{"_index":362,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["v2",{"_index":364,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["validate",{"_index":563,"title":{},"body":{"injectables/HttpUserService.html":{},"directives/UniqueEmailDirective.html":{}}}],["validate(control",{"_index":992,"title":{},"body":{"directives/UniqueEmailDirective.html":{}}}],["validationerrors",{"_index":344,"title":{},"body":{"directives/CompareDirective.html":{},"directives/UniqueEmailDirective.html":{}}}],["validator",{"_index":345,"title":{},"body":{"directives/CompareDirective.html":{},"components/RegisterComponent.html":{},"directives/UniqueEmailDirective.html":{}}}],["validatorfn",{"_index":346,"title":{},"body":{"directives/CompareDirective.html":{}}}],["validators",{"_index":834,"title":{},"body":{"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{}}}],["validators.email",{"_index":856,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.maxlength(10",{"_index":850,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.maxlength(12",{"_index":853,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.maxlength(15",{"_index":847,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(10",{"_index":849,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(12",{"_index":852,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(4",{"_index":846,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":845,"title":{},"body":{"components/RegisterComponent.html":{}}}],["value",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":821,"title":{},"body":{"components/RegisterComponent.html":{}}}],["var",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"directives/CompareDirective.html":{},"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":517,"title":{},"body":{"injectables/HttpCacheService.html":{},"components/RoomBookingComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1256,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1204,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1231,"title":{},"body":{"index.html":{}}}],["visibility",{"_index":1018,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["visible",{"_index":777,"title":{},"body":{"components/PopUpComponent.html":{},"components/UserProfileComponent.html":{}}}],["visible:boolean",{"_index":802,"title":{},"body":{"components/PopUpComponent.html":{}}}],["visiblechange",{"_index":780,"title":{},"body":{"components/PopUpComponent.html":{}}}],["void",{"_index":389,"title":{},"body":{"components/FooterComponent.html":{},"components/GalleryComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpUserService.html":{},"components/LoginComponent.html":{},"components/MembershipComponent.html":{},"components/PopUpComponent.html":{},"components/RegisterComponent.html":{},"components/RoomBookingComponent.html":{},"directives/UniqueEmailDirective.html":{},"components/UserProfileComponent.html":{}}}],["w",{"_index":455,"title":{},"body":{"components/HomeComponent.html":{}}}],["wait",{"_index":707,"title":{},"body":{"components/LoginComponent.html":{}}}],["way",{"_index":204,"title":{},"body":{"guards/AuthGuard.html":{}}}],["width",{"_index":404,"title":{},"body":{"components/FooterComponent.html":{},"components/MembershipComponent.html":{}}}],["width:250px",{"_index":448,"title":{},"body":{"components/HomeComponent.html":{}}}],["width:auto",{"_index":451,"title":{},"body":{"components/HomeComponent.html":{}}}],["x",{"_index":1081,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["yes",{"_index":581,"title":{},"body":{"injectables/HttpUserService.html":{}}}],["zone.js",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Application component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: NGXLogger)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            constructor of AppComponent with dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'HotelManagement-Client'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:24\n                        \n                    \n\n            \n                \n                    application title\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { LoggerModule, NGXLogger, NgxLoggerLevel } from 'ngx-logger';\n\n/**\n * Application component\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  /**\n   * constructor of AppComponent with dependency injection\n   * @param logger \n   */\n  constructor(private logger: NGXLogger)\n  {\n    this.logger.info(\"Application started\");\n  }\n  /**\n   * application title\n   */\n  title = 'HotelManagement-Client';\n \n}\n\n    \n\n    \n        \n\n\n\n\n    \n\n\n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .main-content{\n\n\n    margin:10px;\n\n    margin-top:90px;\n\n    padding-bottom: 50px;\n\n\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'footer'},{'name': 'GalleryComponent', 'selector': 'gallery'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'MembershipComponent', 'selector': 'membership'},{'name': 'PopUpComponent', 'selector': 'pop-up'},{'name': 'RegisterComponent', 'selector': 'register'},{'name': 'RoomBookingComponent', 'selector': 'room-booking'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [{'name': 'CompareDirective', 'selector': '[compareTo]'},{'name': 'UniqueEmailDirective', 'selector': '[uniqueEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nBookingModule\n\nBookingModule\n\nAppModule -->\n\nBookingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nCacheInterceptor\n\nCacheInterceptor\n\nAppModule -->\n\nCacheInterceptor->AppModule\n\n\n\n\n\nHttpCacheService\n\nHttpCacheService\n\nAppModule -->\n\nHttpCacheService->AppModule\n\n\n\n\n\nInterceptorService\n\nInterceptorService\n\nAppModule -->\n\nInterceptorService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            CacheInterceptor\n                        \n                        \n                            HttpCacheService\n                        \n                        \n                            InterceptorService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            BookingModule\n                        \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpUserService } from './modules/users/services/http-user-service';\nimport { CoreModule } from './modules/core/core.module';\nimport { HttpBookingService } from './modules/booking/services/http-booking-service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {BookingModule } from './modules/booking/booking.module'\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { InterceptorService } from './modules/core/interceptors/interceptor.service';\nimport { LoggerModule, NgxLoggerLevel } from 'ngx-logger';\nimport { HttpCacheService } from './modules/core/services/http-cache.service';\nimport { CacheInterceptor } from './modules/core/interceptors/cache-interceptor.service';\nimport { environment } from 'src/environments/environment';\n@NgModule({\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CoreModule ,\n    FormsModule,\n    ReactiveFormsModule,\n    BookingModule,\n    LoggerModule.forRoot(environment.logging) \n  ],\n  declarations: [\n    AppComponent,\n],\n  providers: [\n    {provide:\"UserService\",useClass:HttpUserService},\n    {provide:\"BookingService\",useClass:HttpBookingService},\n    {provide: HTTP_INTERCEPTORS,useClass:InterceptorService,multi: true},\n    {provide:HTTP_INTERCEPTORS,useClass:CacheInterceptor,multi:true},\n    HttpCacheService\n\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        \nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GalleryComponent } from './modules/booking/components/gallery/gallery.component';\nimport { RoomBookingComponent } from './modules/booking/components/room-booking/room-booking.component';\n\nimport { HomeComponent } from './modules/core/components/home/home.component';\nimport { AuthGuard } from './modules/core/guards/auth.guard';\n\nimport { LoginComponent } from './modules/users/components/login/login.component';\nimport { RegisterComponent } from './modules/users/components/register/register.component';\nimport { UserProfileComponent } from './modules/users/components/user-profile/user-profile.component';\n\nconst routes: Routes = [\n  {path:\"user/register\",component:RegisterComponent},\n  {path:\"user/login\",component:LoginComponent},\n  {path:\"\",component:HomeComponent},\n  {path:\"booking/gallery\",component:GalleryComponent},\n\n  {path:'home',component:HomeComponent},\n  {path:'booking', canActivate:[AuthGuard],component:RoomBookingComponent},\n  {path:'user/profile/:id',canActivate:[AuthGuard],component:UserProfileComponent}\n\n]\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers:[AuthGuard]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/core/guards/auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Authguard class implementing CanActivate Interface\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/core/guards/auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            constructor of Authguard with dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/core/guards/auth.guard.ts:31\n                \n            \n\n\n            \n                \n                    Activate allows the guard to decide if a way can be activated with the “CanActivate ()” method or not.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        canActivate to “create” and “edit” routes\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Inject, Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../../users/services/user.service';\n\n/**\n * Authguard class implementing CanActivate Interface\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  /**\n   * constructor of Authguard with dependency injection\n   * @param userService \n   * @param router \n   */\n  constructor( @Inject(\"UserService\")private userService:UserService,\n     private router:Router,\n    )\n  {\n\n  }\n  /**\n   * Activate allows the guard to decide if a way can be activated with the “CanActivate ()” method or not.\n   * @param route canActivate to “create” and “edit” routes\n   * @param state \n   * @returns \n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n  \n    console.log(\"guard activated\");\n\n      if(this.userService.getLoggedInUser()){\n        return true;\n      }else{\n        alert(\"you need to login first\");\n        this.router.navigate(['/user/login']);\n\n        return false;\n      }\n\n  \n  }\n  \n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Booking.html":{"url":"interfaces/Booking.html","title":"interface - Booking","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Booking\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/booking/models/booking.ts\n        \n\n\n            \n                Description\n            \n            \n                Booking interface with necessary fields\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bookingDate\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            numberOfDaysStay\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roomNo\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bookingDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bookingDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    bookingDate property of type string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    id property of type number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfDaysStay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfDaysStay:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    numberOfDaysStay property of type number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    price property of type string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roomNo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roomNo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    room No property of type string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    userId property of type string\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface BookingDetails{\n    /**\n     * userId property of type string\n     */\n    userId:string;\n    /**\n     * numberOfDaysStay property of type number \n     */\n    numberOfDaysStay:number;\n}\n/**\n * Booking interface with necessary fields\n */\nexport interface Booking{\n    /**\n     * id property of type number \n     */\n    id: number;\n    /**\n     * room No property of type string\n     */\n    roomNo?:string;\n    /**\n     * price property of type string\n     */\n    price:string;\n    /**\n     * bookingDate property of type string\n     */\n    bookingDate:string;\n    /**\n     * numberOfDaysStay property of type number \n     */\n    numberOfDaysStay:number;\n    /**\n     * userId property of type string\n     */\n    userId:string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BookingDetails.html":{"url":"interfaces/BookingDetails.html","title":"interface - BookingDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BookingDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/booking/models/booking.ts\n        \n\n\n            \n                Description\n            \n            \n                Booking Details interface with necessary fields\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            numberOfDaysStay\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfDaysStay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfDaysStay:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    numberOfDaysStay property of type number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    userId property of type string\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface BookingDetails{\n    /**\n     * userId property of type string\n     */\n    userId:string;\n    /**\n     * numberOfDaysStay property of type number \n     */\n    numberOfDaysStay:number;\n}\n/**\n * Booking interface with necessary fields\n */\nexport interface Booking{\n    /**\n     * id property of type number \n     */\n    id: number;\n    /**\n     * room No property of type string\n     */\n    roomNo?:string;\n    /**\n     * price property of type string\n     */\n    price:string;\n    /**\n     * bookingDate property of type string\n     */\n    bookingDate:string;\n    /**\n     * numberOfDaysStay property of type number \n     */\n    numberOfDaysStay:number;\n    /**\n     * userId property of type string\n     */\n    userId:string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BookingModule.html":{"url":"modules/BookingModule.html","title":"module - BookingModule","body":"\n                   \n\n\n\n\n    Modules\n    BookingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BookingModule\n\n\n\ncluster_BookingModule_declarations\n\n\n\ncluster_BookingModule_exports\n\n\n\ncluster_BookingModule_imports\n\n\n\n\nGalleryComponent\n\nGalleryComponent\n\n\n\nBookingModule\n\nBookingModule\n\nBookingModule -->\n\nGalleryComponent->BookingModule\n\n\n\n\n\nRoomBookingComponent\n\nRoomBookingComponent\n\nBookingModule -->\n\nRoomBookingComponent->BookingModule\n\n\n\n\n\nGalleryComponent \n\nGalleryComponent \n\nGalleryComponent  -->\n\nBookingModule->GalleryComponent \n\n\n\n\n\nRoomBookingComponent \n\nRoomBookingComponent \n\nRoomBookingComponent  -->\n\nBookingModule->RoomBookingComponent \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nBookingModule -->\n\nUsersModule->BookingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/booking/booking.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GalleryComponent\n                        \n                        \n                            RoomBookingComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GalleryComponent\n                        \n                        \n                            RoomBookingComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RoomBookingComponent } from './components/room-booking/room-booking.component';\nimport { GalleryComponent } from './components/gallery/gallery.component';\nimport { UsersModule } from '../users/users.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    UsersModule,\n    ReactiveFormsModule,\n    RouterModule,\n    FormsModule\n  ],\n  declarations: [\n    RoomBookingComponent,\n    GalleryComponent\n  ],\n  exports:[\n   GalleryComponent ,\n   RoomBookingComponent\n  ]\n})\nexport class BookingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BookingService.html":{"url":"interfaces/BookingService.html","title":"interface - BookingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BookingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/booking/services/booking.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface with booking related CRUD methods\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        addBooking\n                                    \n                                \n                                \n                                    \n                                        cancelBooking\n                                    \n                                \n                                \n                                    \n                                        getAllBookings\n                                    \n                                \n                                \n                                    \n                                        getBookingById\n                                    \n                                \n                                \n                                    \n                                        updateBooking\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addBooking\n                        \n                    \n                \n            \n            \n                \naddBooking(booking: BookingDetails)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/booking/services/booking.service.ts:25\n                \n            \n\n\n            \n                \n                    addBooking method\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    booking\n                                    \n                                                BookingDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancelBooking\n                        \n                    \n                \n            \n            \n                \ncancelBooking(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/booking/services/booking.service.ts:31\n                \n            \n\n\n            \n                \n                    cancelBooking method\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllBookings\n                        \n                    \n                \n            \n            \n                \ngetAllBookings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/booking/services/booking.service.ts:12\n                \n            \n\n\n            \n                \n                    getAllBookings method declaration with return type of Booking[] Observable\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBookingById\n                        \n                    \n                \n            \n            \n                \ngetBookingById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/booking/services/booking.service.ts:19\n                \n            \n\n\n            \n                \n                    getBookingById method\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBooking\n                        \n                    \n                \n            \n            \n                \nupdateBooking(booking: BookingDetails, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/booking/services/booking.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    booking\n                                    \n                                                BookingDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\nimport { Booking, BookingDetails } from \"../models/booking\";\n\n/**\n * Interface with booking related CRUD methods \n */\nexport interface BookingService\n{\n    /**\n     * getAllBookings method declaration with return type of Booking[] Observable \n     */\n    getAllBookings(): Observable;\n\n    /**\n     * getBookingById method \n     * @param {number} id \n     */\n\n    getBookingById(id: number): Observable;\n\n    /**\n     * addBooking method\n     * @param {BookingDetails} booking \n     */\n    addBooking(booking: BookingDetails): Observable;\n\n    /**\n     * cancelBooking method\n     * @param {number} id \n     */\n    cancelBooking(id: number): Observable;\n    /**\n     * \n     * @param {BookingDetails} booking \n     * @param {number} id \n     */\n    updateBooking(booking:BookingDetails,id:number): Observable;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/CacheInterceptor.html":{"url":"interceptors/CacheInterceptor.html","title":"interceptor - CacheInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  CacheInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/core/interceptors/cache-interceptor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cacheService: HttpCacheService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/core/interceptors/cache-interceptor.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        HttpCacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/core/interceptors/cache-interceptor.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of, tap } from 'rxjs';\nimport { HttpCacheService } from '../services/http-cache.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CacheInterceptor implements HttpInterceptor {\n\n  constructor(private cacheService:HttpCacheService){}\n  // check each request from browser\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    if(req.method !== 'GET')\n    {\n      console.log(`Invalidating cache : ${req.method} ${req.url}`);\n      this.cacheService.invalidateCache();\n      return next.handle(req);\n    }\n    // Retrieving cached response for the request url\n    const cachedResponse: HttpResponse = this.cacheService.get(req.url);\n    // If cache has response then take cached response \n    if(cachedResponse)\n    {\n      console.log(`Returning from cache : ${cachedResponse.url}`);\n      console.log(cachedResponse);\n      return of(cachedResponse);\n    }\n    // send request to the server and save the response in cache\n    return next.handle(req)\n      .pipe(\n        tap(result =>{\n          if(result instanceof HttpResponse)\n          {\n            console.log(`Adding response to cache: ${req.url}`);\n            this.cacheService.put(req.url, result);\n          }\n        })\n      );\n    \n  }\n\n     \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/CompareDirective.html":{"url":"directives/CompareDirective.html","title":"directive - CompareDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  CompareDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/shared/directives/compare.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                {\n    provide: NG_VALIDATORS, useExisting: CompareDirective, multi: true\n}\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [compareTo]\n                    \n\n                \n            \n        \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/shared/directives/compare.directive.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn } \nfrom '@angular/forms';\n\n@Directive({\n  selector: '[compareTo]',\n  providers:[\n    {\n      provide:NG_VALIDATORS,\n      useExisting:CompareDirective,\n      multi:true\n    }\n  ]\n})\nexport class CompareDirective  {\n\n  constructor() { }\n \n\n}\n/**\n * compare method which can be exported\n * @param {string} password \n * @param {string} confirmPassword \n * @returns Validator function\n */\nexport const compare = (password:string, confirmPassword:string):ValidatorFn =>{\n\n  return control =>{\n    var c1 = control.get(password);\n    var c2 = control.get(confirmPassword);\n    var v1 = c1!.value;\n    var v2 = c2!.value;\n\n    if(v1 === v2)\n      return null;\n    else\n      return {compare:{message:`The fields ${password} and ${confirmPassword} don't match`}};\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nFooterComponent->CoreModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nCoreModule -->\n\nHeaderComponent->CoreModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nCoreModule -->\n\nHomeComponent->CoreModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nCoreModule->FooterComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nCoreModule->HeaderComponent \n\n\n\n\n\nHomeComponent \n\nHomeComponent \n\nHomeComponent  -->\n\nCoreModule->HomeComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nCoreModule -->\n\nSharedModule->CoreModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nCoreModule -->\n\nUsersModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            HomeComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\n\nimport { HomeComponent } from './components/home/home.component';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { UsersModule } from '../users/users.module';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  declarations: [\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    UsersModule,\n    RouterModule\n  \n  ],\n  exports:[\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n  ]\n})\nexport class CoreModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/core/components/footer/footer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Footer Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                footer\n            \n\n            \n                styleUrls\n                ./footer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/core/components/footer/footer.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/core/components/footer/footer.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Footer Component\n */\n@Component({\n  selector: 'footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        @Awesomehotel.com\n\n    \n\n    \n                \n                    ./footer.component.css\n                \n                p{\n    border-top:1 px solid gray;\n    text-align: center;\n    position: fixed;\n    height: 50px;\n    bottom: 0;\n    width: 100%;\n    color:white;\n    box-shadow: -5px 0px 5px gray;\n    background-color: black;\n    margin-top: 50px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@Awesomehotel.com'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'footer'},{'name': 'GalleryComponent', 'selector': 'gallery'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'MembershipComponent', 'selector': 'membership'},{'name': 'PopUpComponent', 'selector': 'pop-up'},{'name': 'RegisterComponent', 'selector': 'register'},{'name': 'RoomBookingComponent', 'selector': 'room-booking'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [{'name': 'CompareDirective', 'selector': '[compareTo]'},{'name': 'UniqueEmailDirective', 'selector': '[uniqueEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GalleryComponent.html":{"url":"components/GalleryComponent.html","title":"component - GalleryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GalleryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/booking/components/gallery/gallery.component.ts\n\n\n\n    \n        Description\n    \n    \n        Gallery component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                gallery\n            \n\n            \n                styleUrls\n                ./gallery.component.css\n            \n\n\n\n            \n                templateUrl\n                ./gallery.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Gallery component\n */\n@Component({\n  selector: 'gallery',\n  templateUrl: './gallery.component.html',\n  styleUrls: ['./gallery.component.css']\n})\nexport class GalleryComponent implements OnInit {\n  /**\n  * Example of usage:\n  * http://localhost:4200/booking/gallery\n  * \n  */\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n      \n  \n      \n    \n  \n    \n      \n  \n      \n    \n  \n    \n      \n  \n      \n    \n\n  \n\n\n\n\n\n    \n\n    \n                \n                    ./gallery.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'footer'},{'name': 'GalleryComponent', 'selector': 'gallery'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'MembershipComponent', 'selector': 'membership'},{'name': 'PopUpComponent', 'selector': 'pop-up'},{'name': 'RegisterComponent', 'selector': 'register'},{'name': 'RoomBookingComponent', 'selector': 'room-booking'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [{'name': 'CompareDirective', 'selector': '[compareTo]'},{'name': 'UniqueEmailDirective', 'selector': '[uniqueEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'GalleryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/core/components/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        Header component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                header\n            \n\n            \n                styleUrls\n                ./header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/core/components/header/header.component.ts:16\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'HotelManagement-Client'\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/core/components/header/header.component.ts:16\n                            \n                        \n                \n                    \n                        title input property\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/core/components/header/header.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\n/**\n * Header component\n */\n@Component({\n  selector: 'header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  /**\n   * title input property\n   */\n  @Input() title:string='HotelManagement-Client';\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n      {{title}}\n      \n        \n      \n      \n        \n          \n             Gallery\n          \n          \n            Booking's\n          \n          \n        \n        \n\n      \n   \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./header.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{title}}                                                         Gallery                                Booking\\'s                                                     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'footer'},{'name': 'GalleryComponent', 'selector': 'gallery'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'MembershipComponent', 'selector': 'membership'},{'name': 'PopUpComponent', 'selector': 'pop-up'},{'name': 'RegisterComponent', 'selector': 'register'},{'name': 'RoomBookingComponent', 'selector': 'room-booking'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [{'name': 'CompareDirective', 'selector': '[compareTo]'},{'name': 'UniqueEmailDirective', 'selector': '[uniqueEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/core/components/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        HomeComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: NGXLogger)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/core/components/home/home.component.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor with logger dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/core/components/home/home.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { LoggerModule, NGXLogger } from 'ngx-logger';\n\n/**\n * HomeComponent\n */\n@Component({\n  selector: 'home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  /**\n   * Constructor with logger dependency injection\n   * @param logger \n   */\n  constructor(private logger:NGXLogger) { \n    this.logger.info(\"Home component created\")\n  }\n\n  ngOnInit(): void {\n \n  }\n\n}\n\n    \n\n    \n        \n\n    \n      \n        \n       \n    \n      \n        \n        \n    \n       \n        \n         \n    \n    \n   \n  \n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                \n\nbody {\n    background-color: burlywood;\n}\nimg{\n    width:250px;\n}\n\n.carousel-inner\n{\n    width:auto;\n    height: 500px;\n}\n\n.d-block w-100\n{\n height:100px;\n}\n.carousel-caption{\n    padding-bottom: 100px;\n\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'footer'},{'name': 'GalleryComponent', 'selector': 'gallery'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'MembershipComponent', 'selector': 'membership'},{'name': 'PopUpComponent', 'selector': 'pop-up'},{'name': 'RegisterComponent', 'selector': 'register'},{'name': 'RoomBookingComponent', 'selector': 'room-booking'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [{'name': 'CompareDirective', 'selector': '[compareTo]'},{'name': 'UniqueEmailDirective', 'selector': '[uniqueEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpBookingService.html":{"url":"injectables/HttpBookingService.html","title":"injectable - HttpBookingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpBookingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/booking/services/http-booking-service.ts\n        \n\n\n            \n                Description\n            \n            \n                HttpBookingService class registered as a service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addBooking\n                            \n                            \n                                cancelBooking\n                            \n                            \n                                getAllBookings\n                            \n                            \n                                getBookingById\n                            \n                            \n                                updateBooking\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logger: NGXLogger, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/booking/services/http-booking-service.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor with dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addBooking\n                        \n                    \n                \n            \n            \n                \naddBooking(booking: BookingDetails)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/booking/services/http-booking-service.ts:60\n                \n            \n\n\n            \n                \n                    This method sends the http post request to server to add booking details\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    booking\n                                    \n                                                BookingDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Observable of booking\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancelBooking\n                        \n                    \n                \n            \n            \n                \ncancelBooking(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/booking/services/http-booking-service.ts:72\n                \n            \n\n\n            \n                \n                    This method sends http delete request to api server\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        nothing\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllBookings\n                        \n                    \n                \n            \n            \n                \ngetAllBookings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/booking/services/http-booking-service.ts:36\n                \n            \n\n\n            \n                \n                    This method sends the http get request to the api server\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Observable of list of bookings\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBookingById\n                        \n                    \n                \n            \n            \n                \ngetBookingById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/booking/services/http-booking-service.ts:46\n                \n            \n\n\n            \n                \n                    This method sends the http get request for particular id passed\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        booking observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBooking\n                        \n                    \n                \n            \n            \n                \nupdateBooking(booking: BookingDetails, bookingId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/booking/services/http-booking-service.ts:85\n                \n            \n\n\n            \n                \n                    This method sends the http put request to api server for updating booking details\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    booking\n                                    \n                                                BookingDetails\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bookingId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Observable of booking\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { NGXLogger } from \"ngx-logger\";\nimport { from, map, Observable, tap } from \"rxjs\";\nimport { UserService } from \"../../users/services/user.service\";\nimport { Booking, BookingDetails } from \"../models/booking\";\nimport { BookingService } from \"./booking.service\";\n\n/**\n * API url for bookings\n */\nconst url = \"https://localhost:5000/api/bookings\";\n\n/**\n * HttpBookingService class registered as a service \n */\n@Injectable({\n    providedIn:\"root\"    \n})\nexport class HttpBookingService implements BookingService {\n    /**\n     * Constructor with dependency injection\n     * @param http \n     * @param logger \n     * @param userService \n     */\n    constructor(\n        private http: HttpClient, private logger:NGXLogger,\n        @Inject(\"UserService\") private userService: UserService,\n    ){  }\n   \n    /**\n     * This method sends the http get request to the api server \n     * @returns Observable of list of bookings\n     */\n    getAllBookings(): Observable {\n       this.logger.info('Entering into getAllBookings method of booking service');\n        return this.http.get(url);\n    }\n    \n    /**\n     * This method sends the http get request for particular id passed\n     * @param id \n     * @returns booking observable\n     */\n    getBookingById(id: number): Observable {\n        this.logger.info('Entering into getBookingById method of booking service');\n        return this\n                    .http\n                    .get(`${url}/${id}`);\n    }\n\n    \n\n    /**\n     * This method sends the http post request to server to add booking details\n     * @param booking \n     * @returns Observable of booking\n     */\n    addBooking(booking: BookingDetails): Observable {\n        this.logger.info('Entering into addBooking method of booking service');\n        return this\n        .http\n        .post(url,booking);\n    }\n\n    /**\n     * This method sends http delete request to api server\n     * @param id \n     * @returns nothing\n     */\n    cancelBooking(id: number): Observable {\n        this.logger.info('Entering into cancelBooking method of booking service');\n        return this\n        .http\n        .delete(`${url}/${id}`);\n    }\n\n    /**\n     * This method sends the http put request to api server for updating booking details\n     * @param booking \n     * @param bookingId \n     * @returns Observable of booking\n     */\n    updateBooking(booking: BookingDetails , bookingId:number): Observable {\n        this.logger.info('Entering into updateBooking method of booking service');\n        return this\n        .http\n        .put(`${url}/${bookingId}`,booking);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpCacheService.html":{"url":"injectables/HttpCacheService.html","title":"injectable - HttpCacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpCacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/core/services/http-cache.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                requests\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                invalidateCache\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/core/services/http-cache.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/core/services/http-cache.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidateCache\n                        \n                    \n                \n            \n            \n                \ninvalidateCache()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/core/services/http-cache.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(url: string, response: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/core/services/http-cache.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        requests\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/core/services/http-cache.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpCacheService  {\n\n  private requests:any = {};\n  constructor() { }\n  // Storing the http response for the requested url\n  put(url:string, response:HttpResponse):void{\n    this.requests[url] = response;\n    localStorage.setItem(url,JSON.stringify(response));\n  }\n  // Retrieve the response \n  get(url:string):HttpResponse{\n    return this.requests[url];    \n  }\n  // Destroy the cache value from variable\n  invalidateCache():void{\n    this.requests = { };\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpUserService.html":{"url":"injectables/HttpUserService.html","title":"injectable - HttpUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/users/services/http-user-service.ts\n        \n\n\n            \n                Description\n            \n            \n                This class implements the User Service methods\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                loggedInUser\n                            \n                            \n                                loggedInUserAnnouncement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _handleError\n                            \n                            \n                                getAllUsers\n                            \n                            \n                                getAuthenticationHeader\n                            \n                            \n                                getLoggedInUser\n                            \n                            \n                                getUserByEmail\n                            \n                            \n                                getUserStatusAnnouncement\n                            \n                            \n                                isEmailRegistered\n                            \n                            \n                                login\n                            \n                            \n                                logOut\n                            \n                            \n                                register\n                            \n                            \n                                updateCurrentUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logger: NGXLogger)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/users/services/http-user-service.ts:26\n                            \n                        \n\n                \n                    \n                            The constructor with dependency injection and get the user details from local storage\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        _handleError\n                        \n                    \n                \n            \n            \n                \n_handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/http-user-service.ts:142\n                \n            \n\n\n            \n                \n                    This helper method checks the http error response and throws error\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \ngetAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/http-user-service.ts:67\n                \n            \n\n\n            \n                \n                    This method sends the http get request to get all users\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        all users\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthenticationHeader\n                        \n                    \n                \n            \n            \n                \ngetAuthenticationHeader()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/http-user-service.ts:80\n                \n            \n\n\n            \n                \n                    This method checks the user login status and send token as a request header\n\n\n                    \n                    \n                    \n                        Returns :     { Authorization?: undefined; } | { Authorization: string; }\n\n                    \n                    \n                        Authorization token coming from server\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoggedInUser\n                        \n                    \n                \n            \n            \n                \ngetLoggedInUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/http-user-service.ts:58\n                \n            \n\n\n            \n                \n                    This method\n\n\n                    \n                    \n                    \n                        Returns :         LoggedInDetails | undefined\n\n                    \n                    \n                        logged in user details if logged in otherwise nothing.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserByEmail\n                        \n                    \n                \n            \n            \n                \ngetUserByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/http-user-service.ts:49\n                \n            \n\n\n            \n                \n                    This method sends http get request to the server\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Observable of user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserStatusAnnouncement\n                        \n                    \n                \n            \n            \n                \ngetUserStatusAnnouncement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/http-user-service.ts:170\n                \n            \n\n\n            \n                \n                    This method returns the logged in user announcemnet details\n\n\n                    \n                    \n                    \n                        Returns :         Subject\n\n                    \n                    \n                        Logged in details if user logged in or nothing\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEmailRegistered\n                        \n                    \n                \n            \n            \n                \nisEmailRegistered(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/http-user-service.ts:155\n                \n            \n\n\n            \n                \n                    This method sends the http get request to the server to validate email\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginInfo: LoginInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/http-user-service.ts:110\n                \n            \n\n\n            \n                \n                    This method sends http post request to the server with login Info taken from client\nand updates the current user status\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginInfo\n                                    \n                                                LoginInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Observable of LoggedInDetails\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/http-user-service.ts:179\n                \n            \n\n\n            \n                \n                    This method updates the user status as undefined\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        observable of void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/http-user-service.ts:130\n                \n            \n\n\n            \n                \n                    This method sends the http post request with the entered details along with headers information\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Observable of user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCurrentUser\n                        \n                    \n                \n            \n            \n                \nupdateCurrentUser(user?: LoggedInDetails)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/http-user-service.ts:94\n                \n            \n\n\n            \n                \n                    This method update the details of user in local storage based on login status\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                LoggedInDetails\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        loggedInUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggedInDetails\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/services/http-user-service.ts:26\n                        \n                    \n\n            \n                \n                    Declaration of loggedInUser details\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggedInUserAnnouncement\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/services/http-user-service.ts:22\n                        \n                    \n\n            \n                \n                    Declaration of loggedInUserAnnouncement\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { NGXLogger } from \"ngx-logger\";\nimport { catchError, map, Observable, of, Subject, tap, throwError } from \"rxjs\";\nimport { LoggedInDetails, LoginInfo, User } from \"../models/user\";\nimport { UserService } from \"./user.service\";\n\n/**\n * API url for users\n */\nconst baseUrl='https://localhost:5000/api/users';\n\n/**\n * This class implements the User Service methods\n */\n@Injectable()\nexport class HttpUserService implements UserService{\n\n    /**\n     * Declaration of loggedInUserAnnouncement\n     */\n    loggedInUserAnnouncement = new Subject();\n    /**\n     * Declaration of loggedInUser details\n     */\n    loggedInUser?:LoggedInDetails;\n    /**\n     * \n     * The constructor with dependency injection and get the user details from local storage \n     *\n     */\n    constructor(private http:HttpClient, private logger:NGXLogger){\n        if(!this.loggedInUser)\n        {\n            var jsonString = localStorage.getItem(\"user\");\n            if(jsonString)\n            {\n                var user = JSON.parse(jsonString);\n                this.updateCurrentUser(user);\n            }\n        }\n    }\n\n    /**\n     * This method sends http get request to the server\n     * @param{string} email \n     * @returns Observable of user\n     */\n    getUserByEmail(email: string): Observable {\n        this.logger.trace('Entering into getUserByEmail method of user service');\n        return this.http.get(baseUrl+'/'+email);\n    }\n\n    /**\n     * This method\n     * @returns logged in user details if logged in otherwise nothing.\n     */\n    getLoggedInUser(): LoggedInDetails|undefined {\n        this.logger.trace('Entering into getLoggedInUser method of user service');\n        return this.loggedInUser;\n    }\n\n     /**\n     * This method sends the http get request to get all users\n     * @returns all users\n     */\n    getAllUsers(): Observable {\n        this.logger.trace('Entering into getAllUsers method of user service');\n        return this\n                    .http\n                    .get(baseUrl);\n    }\n   \n   \n    /**\n     * This method checks the user login status and send token as a request header\n     * \n     * @returns Authorization token coming from server\n     */\n    getAuthenticationHeader()\n    {\n        if(!this.loggedInUser)\n            return {};\n        else\n            return{\n                Authorization:`BEARER ${this.loggedInUser.token}`\n            }\n    }\n\n    /**\n     * This method update the details of user in local storage based on login status\n     * @param user \n     */\n    updateCurrentUser(user?:LoggedInDetails){\n        this.logger.trace('Entering into updateCurrentUser method of user service');\n        this.loggedInUser=user;\n        this.loggedInUserAnnouncement.next(user);\n        if(this.loggedInUser)\n            localStorage.setItem(\"user\", JSON.stringify(this.loggedInUser));\n        else    \n            localStorage.removeItem(\"user\");\n    }\n\n    /**\n     * This method sends http post request to the server with login Info taken from client\n     * and updates the current user status \n     * @param loginInfo \n     * @returns Observable of LoggedInDetails \n     */\n    login(loginInfo: LoginInfo): Observable {\n        return this\n                    .http\n                    .post(`${baseUrl}/login`,loginInfo)\n                    .pipe(\n                        tap( (info:LoggedInDetails)=>{\n                            console.log('user info received on login:',info);\n                            this.logger.trace('Inside login method of user service');\n                            this.updateCurrentUser(info);\n                        })\n                    );\n\n\n    }\n\n    /**\n     * This method sends the http post request with the entered details along with headers information\n     * @param user \n     * @returns Observable of user\n     */\n    register(user: User):  Observable {\n        this.logger.trace('Entering into register method of user service');\n        return this.http.post(baseUrl , user,{headers:{\n            \"content-type\":\"application/json\"\n        }});\n    }\n\n    /**\n     * This helper method checks the http error response and throws error\n     * @param error \n     * @returns observable\n     */\n    _handleError(error:HttpErrorResponse){\n        if(error.status === 404){\n            return of(false);  //return false as an observable result\n        } else{\n            return throwError(()=> error); //else let the error go\n        }\n    }\n\n    /**\n     * This method sends the http get request to the server to validate email\n     * @param email \n     * @returns \n     */\n    isEmailRegistered(email: string): Observable {\n\n        return this\n                    .http\n                    .get(`${baseUrl}/validate/${email}`)\n                    .pipe(\n                        map(response=>true), //incase of no error\n                        catchError(this._handleError) //in case of error\n                    );\n       \n    }\n    /**\n     * This method returns the logged in user announcemnet details\n     * @returns Logged in details if user logged in or nothing\n     */\n    getUserStatusAnnouncement(): Subject {\n    this.logger.trace('Entering into getUserStatusAnnouncement method of user service');\n    return this.loggedInUserAnnouncement;\n    }\n\n    /**\n     * This method updates the user status as undefined \n     * @returns observable of void\n     */\n    logOut():Observable {\n        this.logger.trace('Entering into logOut method of user service');\n        this.updateCurrentUser();\n        return of(undefined);\n    }\n    \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InterceptorService.html":{"url":"injectables/InterceptorService.html","title":"injectable - InterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/core/interceptors/interceptor.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interceptor Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/core/interceptors/interceptor.service.ts:12\n                            \n                        \n\n                \n                    \n                            constructor of InterceptorService for dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/core/interceptors/interceptor.service.ts:24\n                \n            \n\n\n            \n                \n                    Implementing intercept method with two arguments the HTTP request and the HTTP handler\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        sends the HTTP request to the server\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        modified request\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../../users/services/user.service';\n\n/**\n * Interceptor Service \n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterceptorService {\n    /**\n     * constructor of InterceptorService for dependency injection\n     * @param userService \n     */\n    constructor(@Inject(\"UserService\")private userService: UserService) { }\n    /**\n     * Implementing intercept method with two arguments the HTTP request and the HTTP handler\n     * @param request sends the HTTP request to the server\n     * @param next \n     * @returns modified request\n     */\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n  \n      console.log(request);\n\n      let headers = this.userService.getAuthenticationHeader();\n      let modifiedRequest = request.clone({\n        setHeaders:{\n          ...headers\n        }\n      })\n      \n      return next.handle(modifiedRequest);\n    }\n    }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoggedInDetails.html":{"url":"interfaces/LoggedInDetails.html","title":"interface - LoggedInDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoggedInDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/users/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                LoggedInDetails interface with user and token for authentication\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    token property of type string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    user property of type User\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface LoginInfo\n{\n    /**\n     * email property of type string\n     */\n    email:string;\n    /**\n     * password property of type string\n     */\n    password:string;\n}\n/**\n * User interface with necessary fields\n */\nexport interface User extends LoginInfo\n{\n    /**\n     * name property of type string\n     */\n    name:string;\n    /**\n     * profilePic property of type string\n     */\n    profilePic?:string;\n    /**\n     * phone Number property of type string\n     */\n    phoneNumber:string;\n    /**\n     * aadhaarId property of type string\n     */\n    aadhaarId:string;\n    /**\n     * userBookings property of any type which can be nullable\n     */\n    userBookings?:any;\n}\n\n/**\n * LoggedInDetails interface with user and token for authentication\n */\nexport interface LoggedInDetails\n{\n    /**\n     * user property of type User\n     */\n    user:User;\n    /**\n     * token property of type string\n     */\n    token:string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/users/components/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Login component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                loggedInUser\n                            \n                            \n                                loginInfo\n                            \n                            \n                                    Optional\n                                status\n                            \n                            \n                                    Optional\n                                statusStyle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router, logger: NGXLogger)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/users/components/login/login.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleLogin\n                        \n                    \n                \n            \n            \n                \nhandleLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/components/login/login.component.ts:47\n                \n            \n\n\n            \n                \n                    This method calls the login method of user service and subscribes to the update\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        loggedInUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/login/login.component.ts:35\n                        \n                    \n\n            \n                \n                    Declaring loggedInUser of type User\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoginInfo\n\n                    \n                \n                \n                    \n                        Default value : {\n    email: '',\n    password:''\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/login/login.component.ts:28\n                        \n                    \n\n            \n                \n                    Declaration of login info of type LoginInfo\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/login/login.component.ts:39\n                        \n                    \n\n            \n                \n                    Declaring status of type string\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        statusStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/login/login.component.ts:43\n                        \n                    \n\n            \n                \n                    Declaring statusStyle of type string\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NGXLogger } from 'ngx-logger';\nimport { Observable } from 'rxjs';\nimport { LoggedInDetails, LoginInfo, User } from '../../models/user';\nimport { UserService } from '../../services/user.service';\n\n/**\n * Login component\n */\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n \n  /*\n  * Constructor for Login Component used to inject dependencies \n  */\n  constructor(\n    @Inject(\"UserService\") private userService: UserService,\n    private router: Router, private logger:NGXLogger\n  ) { }\n  /**\n   * Declaration of login info of type LoginInfo \n   */\n  loginInfo:LoginInfo={\n    email: '',\n    password:''\n  };  \n  /**\n   * Declaring loggedInUser of type User \n   */\n  loggedInUser?:User;\n  /**\n   * Declaring status of type string\n   */\n  status?:string;\n  /**\n   * Declaring statusStyle of type string\n   */\n  statusStyle?:string;\n  /**\n   * This method calls the login method of user service and subscribes to the update\n   */\n   handleLogin(){\n        (>(this.userService\n        .login(this.loginInfo)))\n        .subscribe({\n          next: (info:LoggedInDetails)=>{ \n            console.log(info);\n            const user=info.user;\n            console.log('user',user);\n            this.status=`Welcome ${user.name}`;\n            this.statusStyle='text-success';\n            this.router.navigate(['home']);\n          },\n          error: (error:any)=>{\n            this.logger.error('Error in login details, user trying to login with invalid credentials');\n            this.status=`Error: ${error.status}`;\n            this.statusStyle='text-danger';\n          }\n        });\n\n        this.status='please wait...';\n        this.statusStyle='text-primary';\n\n\n  }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n   \n  }\n\n}\n\n\n\n\n    \n\n    \n        \n\n    \n    \n\n        User Login\n\n        \n      \n            \n                \n\n                \n            \n\n            \n\n                Email Field is Required\n\n                Email Field is Invalid\n              \n\n            \n\n\n            \n                \n                    \n                \n                \n\n            \n                            \n                \n                Required\n                Password should be min {{passwordField.errors!['minlength']!.requiredLength}} characters. You entered {{passwordField.errors!['minlength']!.actualLength}} chars\n\n            \n            \n                 Login\n            \n             {{status}}\n        \n        \n            \n        \n\n    \n\n\n\n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                .login-form\n\n{\n\n    border: 1px solid black;\n\n    border-radius: 5px;\n\n    background-color:honeydew;\n\n    margin: 15px;\n\n    padding: 10px;\n\n}\n\nh3,button{\n\n    text-align: center;\n\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                User Login                                                                                                  Email Field is Required                Email Field is Invalid                                                                                                                                                                                  Required                Password should be min {{passwordField.errors![\\'minlength\\']!.requiredLength}} characters. You entered {{passwordField.errors![\\'minlength\\']!.actualLength}} chars                                         Login                         {{status}}                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'footer'},{'name': 'GalleryComponent', 'selector': 'gallery'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'MembershipComponent', 'selector': 'membership'},{'name': 'PopUpComponent', 'selector': 'pop-up'},{'name': 'RegisterComponent', 'selector': 'register'},{'name': 'RoomBookingComponent', 'selector': 'room-booking'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [{'name': 'CompareDirective', 'selector': '[compareTo]'},{'name': 'UniqueEmailDirective', 'selector': '[uniqueEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginInfo.html":{"url":"interfaces/LoginInfo.html","title":"interface - LoginInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/users/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                LoginInfo interface with email and password fields\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    email property of type string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    password property of type string\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface LoginInfo\n{\n    /**\n     * email property of type string\n     */\n    email:string;\n    /**\n     * password property of type string\n     */\n    password:string;\n}\n/**\n * User interface with necessary fields\n */\nexport interface User extends LoginInfo\n{\n    /**\n     * name property of type string\n     */\n    name:string;\n    /**\n     * profilePic property of type string\n     */\n    profilePic?:string;\n    /**\n     * phone Number property of type string\n     */\n    phoneNumber:string;\n    /**\n     * aadhaarId property of type string\n     */\n    aadhaarId:string;\n    /**\n     * userBookings property of any type which can be nullable\n     */\n    userBookings?:any;\n}\n\n/**\n * LoggedInDetails interface with user and token for authentication\n */\nexport interface LoggedInDetails\n{\n    /**\n     * user property of type User\n     */\n    user:User;\n    /**\n     * token property of type string\n     */\n    token:string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MembershipComponent.html":{"url":"components/MembershipComponent.html","title":"component - MembershipComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MembershipComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/users/components/membership/membership.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                membership\n            \n\n            \n                styleUrls\n                ./membership.component.css\n            \n\n\n\n            \n                templateUrl\n                ./membership.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleLogout\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateUserStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/users/components/membership/membership.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleLogout\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/components/membership/membership.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/components/membership/membership.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/components/membership/membership.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserStatus\n                        \n                    \n                \n            \n            \n                \nupdateUserStatus(details: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/components/membership/membership.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    details\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/membership/membership.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/modules/users/services/user.service';\n\n@Component({\n  selector: 'membership',\n  templateUrl: './membership.component.html',\n  styleUrls: ['./membership.component.css']\n})\nexport class MembershipComponent implements OnInit {\n\n  user?:any;  \n  constructor(@Inject(\"UserService\")private userService: UserService, private router:Router) { }  \n // This is helper method sets the logged-in user\n  updateUserStatus(details:any): void {\n    \n    if(details)\n      this.user=details.user;\n    else\n      this.user=undefined;\n\n  }\n  // This method intializes the membership component\n  ngOnInit(): void {\n      \n      console.log('membership component initialized');\n      var details= this.userService.getLoggedInUser();\n      if(details)\n        this.user=details.user;\n      this\n        .userService\n        .getUserStatusAnnouncement()\n        .subscribe(details=>this.updateUserStatus(details))      \n      \n  }\n\n  // This method unsubscribe the getUserStatusAnnouncement\n  ngOnDestroy(): void {\n   \n    this.userService.getUserStatusAnnouncement().unsubscribe();\n  }\n\n \n  // This method handle logOut method and navigate to the login page\n  async handleLogout(){\n    await this.userService.logOut();\n    this.router.navigate(['user/login'])\n  }\n\n  \n}\n\n    \n\n    \n                    \n    \n      \n          \n          {{user?user.name:'Guest'}}\n      \n      \n     \n        Login\n        Register\n        \n        My Bookings\n      \n        \n        Logout\n      \n      \n    \n   \n\n\n    \n\n    \n                \n                    ./membership.component.css\n                \n                .navbar-nav{\n    padding-right: 50px;\n}\n\nimg{\n    width: 40px;\n    margin-right: 5px;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{user?user.name:\\'Guest\\'}}                         Login        Register                My Bookings                      Logout                   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'footer'},{'name': 'GalleryComponent', 'selector': 'gallery'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'MembershipComponent', 'selector': 'membership'},{'name': 'PopUpComponent', 'selector': 'pop-up'},{'name': 'RegisterComponent', 'selector': 'register'},{'name': 'RoomBookingComponent', 'selector': 'room-booking'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [{'name': 'CompareDirective', 'selector': '[compareTo]'},{'name': 'UniqueEmailDirective', 'selector': '[uniqueEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'MembershipComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PopUpComponent.html":{"url":"components/PopUpComponent.html","title":"component - PopUpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PopUpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/shared/components/pop-up/pop-up.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                pop-up\n            \n\n            \n                styleUrls\n                ./pop-up.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pop-up.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleCancel\n                            \n                            \n                                handleConfirm\n                            \n                            \n                                handleDone\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancelText\n                            \n                            \n                                confirmText\n                            \n                            \n                                preventDefault\n                            \n                            \n                                title\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                done\n                            \n                            \n                                visibleChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/shared/components/pop-up/pop-up.component.ts:8\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cancelText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"pop-up cancel text\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/pop-up/pop-up.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        confirmText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"pop-up confirm text\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/pop-up/pop-up.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        preventDefault\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/pop-up/pop-up.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"pop-up title\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/pop-up/pop-up.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/pop-up/pop-up.component.ts:21\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        done\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/pop-up/pop-up.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        visibleChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/pop-up/pop-up.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleCancel\n                        \n                    \n                \n            \n            \n                \nhandleCancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/components/pop-up/pop-up.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleConfirm\n                        \n                    \n                \n            \n            \n                \nhandleConfirm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/components/pop-up/pop-up.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDone\n                        \n                    \n                \n            \n            \n                \nhandleDone(response: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/components/pop-up/pop-up.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/components/pop-up/pop-up.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'pop-up',\n  templateUrl: './pop-up.component.html',\n  styleUrls: ['./pop-up.component.css']\n})\nexport class PopUpComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  @Input() title:string=\"pop-up title\";\n  @Input() confirmText:string=\"pop-up confirm text\";\n  @Input() cancelText:string=\"pop-up cancel text\";\n  @Input() preventDefault:boolean=false;\n\n\n  @Input() visible:boolean = false;\n  @Output() visibleChange = new EventEmitter();\n\n  @Output() done=new EventEmitter();\n  \n  handleDone(response:boolean){\n    this.done.emit(response);\n    if(!this.preventDefault){\n      this.visible=false;\n      this.visibleChange.emit(false);\n    }\n  }\n\n  handleConfirm(){\n    this.handleDone(true);\n  }\n\n  handleCancel(){\n    this.handleDone(false);\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n    \n        \n        \n            {{title}}\n            \n        \n        \n           \n           \n        \n        \n            {{cancelText}}\n            {{confirmText}}\n        \n        \n    \n    \n\n    \n\n    \n                \n                    ./pop-up.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{title}}                                                                              {{cancelText}}            {{confirmText}}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'footer'},{'name': 'GalleryComponent', 'selector': 'gallery'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'MembershipComponent', 'selector': 'membership'},{'name': 'PopUpComponent', 'selector': 'pop-up'},{'name': 'RegisterComponent', 'selector': 'register'},{'name': 'RoomBookingComponent', 'selector': 'room-booking'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [{'name': 'CompareDirective', 'selector': '[compareTo]'},{'name': 'UniqueEmailDirective', 'selector': '[uniqueEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'PopUpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/users/components/register/register.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                status\n                            \n                            \n                                statusStyle\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleRegistration\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(builder: FormBuilder, userService: UserService, router: Router, logger: NGXLogger)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/users/components/register/register.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        builder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleRegistration\n                        \n                    \n                \n            \n            \n                \nhandleRegistration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/components/register/register.component.ts:90\n                \n            \n\n\n            \n                \n                     handleRegistration method\ntakes: form values\ninvokes: register method of user service which requires user object\nredirect: navigate to login upon successful registration\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/components/register/register.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/register/register.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/register/register.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text-primary'\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/register/register.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/register/register.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Inject } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NGXLogger } from 'ngx-logger';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { compare } from 'src/app/modules/shared/directives/compare.directive';\nimport { uniqueEmailValidator } from 'src/app/modules/shared/directives/unique-email.directive';\n\nimport { User } from '../../models/user';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  user?:User\n  status=''; \n  statusStyle='text-primary';\n  form:FormGroup;\n  /*\n  * Constructor for Registration Component used to inject dependencies \n  */\n  constructor(private builder :FormBuilder,\n             @Inject(\"UserService\") private userService:UserService,\n              private router:Router, private logger:NGXLogger\n              ) {\n\n    /**\n     * Declaring password, phone number and aadhaar id validators\n     *  \n     * */ \n    const passwordValidators=[\n      Validators.required, \n      Validators.minLength(4),\n      Validators.maxLength(15)\n    ];\n\n    const phoneNumberValidators=[\n      Validators.required, \n      Validators.minLength(10),\n      Validators.maxLength(10)\n    ];\n\n    const aadhaarIdValidators=[\n      Validators.required, \n      Validators.minLength(12),\n      Validators.maxLength(12)\n    ];\n\n    /**\n     * Creating form with builder\n     */\n    this.form=this.builder.group({\n      name: ['', [Validators.required]],\n      email:['', [\n                  Validators.required,\n                  Validators.email, \n                ],\n                [\n                  uniqueEmailValidator(this.userService)\n                ]\n            ],\n      profileUrl:['',[\n                  Validators.required\n      ]],\n      password:['',passwordValidators],\n      confirmPassword:['',passwordValidators],\n      phoneNumber:['',phoneNumberValidators],\n      aadhaarId:['',aadhaarIdValidators]\n    \n    },\n    {validator: compare('password','confirmPassword')}\n    );\n  }\n  /**\n   *  handleRegistration method \n   * \n   * takes: form values \n   * \n   * invokes: register method of user service which requires user object\n   * \n   * redirect: navigate to login upon successful registration\n\n  */\n  handleRegistration(){\n    console.log(this.form);\n    if(this.form.invalid)\n      {\n        console.log(\"Form is invalid\");\n        this.logger.warn('Form is invalid');\n        return;\n      }\n    \n    this.user={\n      ...this.form.value,\n    \n    };\n    console.log('registering', this.user);\n      (>(this\n        .userService\n        .register(this.user!)\n        ))\n        .pipe(\n          tap((response:any)=>console.log('response',response)),\n        )\n        .subscribe({\n          next:(user:any)=>{\n          console.log('registered', user);\n          this.router.navigate(['/user/login']);\n        },\n        error:error=> console.log('error',error)\n      })   \n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n        \n    \n    \n\n        User Registration\n        \n        \n            \n            \n                \n                    \n                \n                \n            \n            \n            \n                Required\n             \n            \n            \n                \n                \n            \n            \n            \n                Required\n                Invalid Email\n                \n                    {{form.controls!['email'].errors!['uniqueEmail'].message}}\n                \n            \n    \n            \n            \n                \n                    \n                \n                \n            \n            \n            \n                Required\n                \n                    Min {{form.controls!['password'].errors!['minlength']!.requiredLength}} chars required. Current is {{form.controls!['password'].errors!['minlength']!.actualLength}}\n                \n                \n                    Max {{form.controls!['password'].errors!['maxlength']!.requiredLength}} chars required. Current is {{form.controls!['password'].errors!['maxlength']!.actualLength}}\n                \n             \n            \n            \n                \n                    \n                \n                \n            \n            \n            \n                Required\n                \n                    Min {{form.controls!['confirmPassword'].errors!['minlength']!.requiredLength}} chars required. Current is {{form.controls!['confirmPassword'].errors!['minlength']!.actualLength}}\n                \n                \n                    Max {{form.controls!['confirmPassword'].errors!['maxlength']!.requiredLength}} chars required. Current is {{form.controls!['confirmPassword'].errors!['maxlength']!.actualLength}}\n                \n            \n            \n                {{form.errors!['compare'].message}}\n            \n\n            \n            \n                \n                    \n                \n                \n            \n            \n            \n                Required\n                Invalid url\n            \n\n             \n            \n                \n                    \n                \n                \n            \n            \n            \n                Required\n                \n                    Min {{form.controls!['phoneNumber'].errors!['minlength']!.requiredLength}} chars required. Current is {{form.controls!['phoneNumber'].errors!['minlength']!.actualLength}}\n                \n                \n                    Max {{form.controls!['phoneNumber'].errors!['maxlength']!.requiredLength}} chars required. Current is {{form.controls!['phoneNumber'].errors!['maxlength']!.actualLength}}\n                \n            \n             \n            \n                \n                    \n                \n                \n            \n             \n             \n                Required\n                \n                    Min {{form.controls!['aadhaarId'].errors!['minlength']!.requiredLength}} chars required. Current is {{form.controls!['aadhaarId'].errors!['minlength']!.actualLength}}\n                \n                \n                    Max {{form.controls!['aadhaarId'].errors!['maxlength']!.requiredLength}} chars required. Current is {{form.controls!['aadhaarId'].errors!['maxlength']!.actualLength}}\n                \n            \n            \n            \n                 Register\n            \n\n              {{status}}\n        \n        \n        \n    \n    \n    \n\n    \n        \n    \n\n        \n    \n\n\n\n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                img{\n    margin:50px;\n    border-radius: 50%;\n    border: 5px solid black;\n    padding: 3px;\n}\n\n.registration-form\n{\n    border: 1px solid black;\n    border-radius: 5px;\n    background-color:honeydew;\n    margin: 15px;\n    padding: 10px;\n}\nh3,button{\n    text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            User Registration                                                                                                                                                                Required                                                                                                                         Required                Invalid Email                                    {{form.controls![\\'email\\'].errors![\\'uniqueEmail\\'].message}}                                                                                                                                                                                Required                                    Min {{form.controls![\\'password\\'].errors![\\'minlength\\']!.requiredLength}} chars required. Current is {{form.controls![\\'password\\'].errors![\\'minlength\\']!.actualLength}}                                                    Max {{form.controls![\\'password\\'].errors![\\'maxlength\\']!.requiredLength}} chars required. Current is {{form.controls![\\'password\\'].errors![\\'maxlength\\']!.actualLength}}                                                                                                                                                                             Required                                    Min {{form.controls![\\'confirmPassword\\'].errors![\\'minlength\\']!.requiredLength}} chars required. Current is {{form.controls![\\'confirmPassword\\'].errors![\\'minlength\\']!.actualLength}}                                                    Max {{form.controls![\\'confirmPassword\\'].errors![\\'maxlength\\']!.requiredLength}} chars required. Current is {{form.controls![\\'confirmPassword\\'].errors![\\'maxlength\\']!.actualLength}}                                                        {{form.errors![\\'compare\\'].message}}                                                                                                                                                            Required                Invalid url                                                                                                                                                             Required                                    Min {{form.controls![\\'phoneNumber\\'].errors![\\'minlength\\']!.requiredLength}} chars required. Current is {{form.controls![\\'phoneNumber\\'].errors![\\'minlength\\']!.actualLength}}                                                    Max {{form.controls![\\'phoneNumber\\'].errors![\\'maxlength\\']!.requiredLength}} chars required. Current is {{form.controls![\\'phoneNumber\\'].errors![\\'maxlength\\']!.actualLength}}                                                                                                                                                                               Required                                    Min {{form.controls![\\'aadhaarId\\'].errors![\\'minlength\\']!.requiredLength}} chars required. Current is {{form.controls![\\'aadhaarId\\'].errors![\\'minlength\\']!.actualLength}}                                                    Max {{form.controls![\\'aadhaarId\\'].errors![\\'maxlength\\']!.requiredLength}} chars required. Current is {{form.controls![\\'aadhaarId\\'].errors![\\'maxlength\\']!.actualLength}}                                                                     Register                          {{status}}                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'footer'},{'name': 'GalleryComponent', 'selector': 'gallery'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'MembershipComponent', 'selector': 'membership'},{'name': 'PopUpComponent', 'selector': 'pop-up'},{'name': 'RegisterComponent', 'selector': 'register'},{'name': 'RoomBookingComponent', 'selector': 'room-booking'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [{'name': 'CompareDirective', 'selector': '[compareTo]'},{'name': 'UniqueEmailDirective', 'selector': '[uniqueEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RoomBookingComponent.html":{"url":"components/RoomBookingComponent.html","title":"component - RoomBookingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RoomBookingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/booking/components/room-booking/room-booking.component.ts\n\n\n\n    \n        Description\n    \n    \n        The Room booking component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                room-booking\n            \n\n            \n                styleUrls\n                ./room-booking.component.css\n            \n\n\n\n            \n                templateUrl\n                ./room-booking.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                booking\n                            \n                            \n                                subsciption\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bookRoom\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateUserStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, bookingService: BookingService, router: Router, fb: FormBuilder, logger: NGXLogger)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/booking/components/room-booking/room-booking.component.ts:29\n                            \n                        \n\n                \n                    \n                            Constructor with dependency injection of below parameters\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is userService instance paramater\n\n                                                        \n                                                \n                                                \n                                                        bookingService\n                                                  \n                                                        \n                                                                        BookingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is bookingService instance paramater\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is router instance paramater\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is form builder instance paramater\n\n                                                        \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This is the logger instance paramater\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        bookRoom\n                        \n                    \n                \n            \n            \n                \nbookRoom()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/booking/components/room-booking/room-booking.component.ts:82\n                \n            \n\n\n            \n                \n                    This method adds booking of a room and redirecting to user profile page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/booking/components/room-booking/room-booking.component.ts:75\n                \n            \n\n\n            \n                \n                     Unsubscribe the subscription\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/booking/components/room-booking/room-booking.component.ts:64\n                \n            \n\n\n            \n                \n                    Initializing the component with logged in user details\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserStatus\n                        \n                    \n                \n            \n            \n                \nupdateUserStatus(details: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/booking/components/room-booking/room-booking.component.ts:52\n                \n            \n\n\n            \n                \n                    Updates the user details\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    details\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        booking\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BookingDetails\n\n                    \n                \n                \n                    \n                        Default value : {\n    userId: '',\n    numberOfDaysStay: 1,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/booking/components/room-booking/room-booking.component.ts:26\n                        \n                    \n\n            \n                \n                    Declaring booking of type BookingDetails\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subsciption\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/booking/components/room-booking/room-booking.component.ts:59\n                        \n                    \n\n            \n                \n                    Declaring subscription variable\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/booking/components/room-booking/room-booking.component.ts:22\n                        \n                    \n\n            \n                \n                    Declaring user\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NGXLogger } from 'ngx-logger';\n\nimport { UserService } from 'src/app/modules/users/services/user.service';\nimport { BookingDetails } from '../../models/booking';\nimport { BookingService } from '../../services/booking.service';\n\n/**\n * The Room booking component\n */\n@Component({\n  selector: 'room-booking',\n  templateUrl: './room-booking.component.html',\n  styleUrls: ['./room-booking.component.css'],\n})\nexport class RoomBookingComponent implements OnInit, OnDestroy {\n  /**\n   * Declaring user\n   */\n  user?: any;\n  /**\n   * Declaring booking of type BookingDetails\n   */\n  booking: BookingDetails = {\n    userId: '',\n    numberOfDaysStay: 1,\n  };\n  /**\n   * Constructor with dependency injection of below parameters\n   * @param userService This is userService instance paramater\n   * @param bookingService This is bookingService instance paramater\n   * @param router This is router instance paramater\n   * @param fb This is form builder instance paramater\n   * @param logger This is the logger instance paramater \n   */\n  constructor(\n    @Inject('UserService') private userService: UserService,\n    @Inject('BookingService') private bookingService: BookingService,\n    private router: Router,\n    private fb: FormBuilder,\n    private logger:NGXLogger\n  ) {\n    \n  }\n\n  /**\n   * Updates the user details\n   * @param details \n   */\n  updateUserStatus(details: any): void {\n    if (details) this.user = details.user;\n    else this.user = undefined;\n  }\n  /**\n   * Declaring subscription variable\n   */\n  subsciption: any;\n\n  /**\n   * Initializing the component with logged in user details\n   */\n  ngOnInit(): void {\n    console.log('getting logged in user details');\n    var details = this.userService.getLoggedInUser();\n    if (details) this.user = details.user;\n    this.subsciption = this.userService\n      .getUserStatusAnnouncement()\n      .subscribe((details) => this.updateUserStatus(details));\n  }\n  /**\n   *  Unsubscribe the subscription\n   */\n  ngOnDestroy(): void {\n    this.subsciption.unsubscribe();\n  }\n\n  /**\n   * This method adds booking of a room and redirecting to user profile page\n   */\n  bookRoom() {\n    this.logger.info(\"Entering into bookRoom method\");\n    console.log(this.booking);\n    this.booking.userId = this.user.email;\n    this.bookingService\n      .addBooking(this.booking)\n      .subscribe((x) => console.log(x));\n    this.logger.trace(\"Booking completed and user redirected to my bookings page\");  \n    this.router.navigate(['user/profile',this.user.email]);\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n    \n\n        Room booking\n\n        \n      \n            \n                @\n\n                \n            \n\n           \n\n            \n                \n                    \n                \n                \n\n            \n            \n            \n                 Book\n                        \n        \n        \n            \n        \n\n    \n\n\n\n\n\n    \n\n    \n                \n                    ./room-booking.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Room booking                                          @                                                                                                                                                                            Book                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'footer'},{'name': 'GalleryComponent', 'selector': 'gallery'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'MembershipComponent', 'selector': 'membership'},{'name': 'PopUpComponent', 'selector': 'pop-up'},{'name': 'RegisterComponent', 'selector': 'register'},{'name': 'RoomBookingComponent', 'selector': 'room-booking'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [{'name': 'CompareDirective', 'selector': '[compareTo]'},{'name': 'UniqueEmailDirective', 'selector': '[uniqueEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'RoomBookingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SearchPipe.html":{"url":"pipes/SearchPipe.html","title":"pipe - SearchPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SearchPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/shared/pipes/search.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        search\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(bookings: Booking[] | undefined, search: string, ...args: [])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/pipes/search.pipe.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookings\n                                    \n                                                Booking[] | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    search\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Booking[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Booking } from '../../booking/models/booking';\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n\n  transform(bookings: Booking[]|undefined,search:string, ...args: unknown[]): Booking[] {\n    return bookings!.filter(booking=>booking.bookingDate.includes(search));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_declarations\n\n\n\n\nPopUpComponent\n\nPopUpComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nPopUpComponent->SharedModule\n\n\n\n\n\nSearchPipe\n\nSearchPipe\n\nSharedModule -->\n\nSearchPipe->SharedModule\n\n\n\n\n\nPopUpComponent \n\nPopUpComponent \n\nPopUpComponent  -->\n\nSharedModule->PopUpComponent \n\n\n\n\n\nSearchPipe \n\nSearchPipe \n\nSearchPipe  -->\n\nSharedModule->SearchPipe \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nSharedModule -->\n\nAppRoutingModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PopUpComponent\n                        \n                        \n                            SearchPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PopUpComponent\n                        \n                        \n                            SearchPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AppRoutingModule } from 'src/app/app-routing.module';\nimport { PopUpComponent } from './components/pop-up/pop-up.component';\nimport { SearchPipe } from './pipes/search.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    PopUpComponent,\n    SearchPipe\n  ],\n  imports: [\n    CommonModule,\n    AppRoutingModule\n  ],\n  exports:[\n    PopUpComponent,\n    SearchPipe\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/UniqueEmailDirective.html":{"url":"directives/UniqueEmailDirective.html","title":"directive - UniqueEmailDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  UniqueEmailDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/shared/directives/unique-email.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            AsyncValidator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_ASYNC_VALIDATORS, useExisting: UniqueEmailDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [uniqueEmail]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                registerOnValidatorChange\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/shared/directives/unique-email.directive.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        registerOnValidatorChange\n                        \n                    \n                \n            \n            \n                \nregisterOnValidatorChange(fn: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/directives/unique-email.directive.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/directives/unique-email.directive.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Inject } from '@angular/core';\nimport { AbstractControl, AsyncValidator, AsyncValidatorFn, NG_ASYNC_VALIDATORS, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\nimport { map, Observable, of } from 'rxjs';\nimport { UserService } from '../../users/services/user.service';\n\n\n@Directive({\n  selector: '[uniqueEmail]',\n  providers: [\n    { provide: NG_ASYNC_VALIDATORS, \n      useExisting: UniqueEmailDirective,\n      multi: true }\n  ]\n})\nexport class UniqueEmailDirective implements AsyncValidator {\n\n  constructor(@Inject(\"UserService\") private userService: UserService) { }\n\n  validate(control: AbstractControl): Promise | Observable {\n    return uniqueEmailValidator(this.userService)(control);\n  }\n\n  registerOnValidatorChange?(fn: () => void): void {\n  }\n\n}\n\n/**\n * uniqueEmailValidator function for directive\n * @param userService \n * @returns AsyncValidatorFunction\n */\n\nexport const uniqueEmailValidator = (userService: UserService): AsyncValidatorFn => {\n\n  var actualValidator: AsyncValidatorFn = (control: AbstractControl)\n              : Promise | Observable => {\n    \n\n      return (>userService\n                .isEmailRegistered(control.value))\n                .pipe(\n                  map( (registered:boolean)=>{\n                    if(registered)\n                      return {uniqueEmail:{message:`duplicate email id`}};\n                    else\n                      return null;\n                  })\n                );\n\n\n    return of(null);\n  };\n\n  return actualValidator;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/users/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                User interface with necessary fields\n\n            \n\n            \n                Extends\n            \n            \n                        LoginInfo\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            aadhaarId\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            profilePic\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userBookings\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aadhaarId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aadhaarId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    aadhaarId property of type string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    name property of type string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    phone Number property of type string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profilePic\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profilePic:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    profilePic property of type string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userBookings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userBookings:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    userBookings property of any type which can be nullable\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface LoginInfo\n{\n    /**\n     * email property of type string\n     */\n    email:string;\n    /**\n     * password property of type string\n     */\n    password:string;\n}\n/**\n * User interface with necessary fields\n */\nexport interface User extends LoginInfo\n{\n    /**\n     * name property of type string\n     */\n    name:string;\n    /**\n     * profilePic property of type string\n     */\n    profilePic?:string;\n    /**\n     * phone Number property of type string\n     */\n    phoneNumber:string;\n    /**\n     * aadhaarId property of type string\n     */\n    aadhaarId:string;\n    /**\n     * userBookings property of any type which can be nullable\n     */\n    userBookings?:any;\n}\n\n/**\n * LoggedInDetails interface with user and token for authentication\n */\nexport interface LoggedInDetails\n{\n    /**\n     * user property of type User\n     */\n    user:User;\n    /**\n     * token property of type string\n     */\n    token:string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/users/components/user-profile/user-profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        User Profile Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-profile\n            \n\n            \n                styleUrls\n                ./user-profile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                booking\n                            \n                            \n                                bookingId\n                            \n                            \n                                    Optional\n                                details\n                            \n                            \n                                id\n                            \n                            \n                                search\n                            \n                            \n                                updateBooking\n                            \n                            \n                                updatevisible\n                            \n                            \n                                    Optional\n                                user\n                            \n                            \n                                    Optional\n                                userBookings\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                edit\n                            \n                            \n                                handleCancel\n                            \n                            \n                                handleClick\n                            \n                            \n                                handleEdit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showPopup\n                            \n                            \n                                updateBookings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, activatedRoute: ActivatedRoute, bookingService: BookingService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bookingService\n                                                  \n                                                        \n                                                                        BookingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        edit\n                        \n                    \n                \n            \n            \n                \nedit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:82\n                \n            \n\n\n            \n                \n                    This method sets the visibility of edit pop up to true.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleCancel\n                        \n                    \n                \n            \n            \n                \nhandleCancel(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:93\n                \n            \n\n\n            \n                \n                    This method gets the booking id to cancel and call popup method\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleClick\n                        \n                    \n                \n            \n            \n                \nhandleClick(confirmation: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:116\n                \n            \n\n\n            \n                \n                    This method cancel the booking based on the confirmation value passed\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    confirmation\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleEdit\n                        \n                    \n                \n            \n            \n                \nhandleEdit(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:105\n                \n            \n\n\n            \n                \n                    This method gets the booking id to edit and call edit method\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:55\n                \n            \n\n\n            \n                \n                    This method is called to initializes the component with logged in user details\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPopup\n                        \n                    \n                \n            \n            \n                \nshowPopup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBookings\n                        \n                    \n                \n            \n            \n                \nupdateBookings(confirmation: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:155\n                \n            \n\n\n            \n                \n                    This method update the booking based on the confirmation value passed\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    confirmation\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        booking\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:20\n                        \n                    \n\n            \n                \n                    Value of booking\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bookingId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:88\n                        \n                    \n\n            \n                \n                    Value of booking Id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggedInDetails\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:34\n                        \n                    \n\n            \n                \n                    Declaring details variable of type LoggedInDetails\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:42\n                        \n                    \n\n            \n                \n                    id variable of type string\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:46\n                        \n                    \n\n            \n                \n                    search variable with empty string\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBooking\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BookingDetails\n\n                    \n                \n                \n                    \n                        Default value : {\n   userId:'',\n   numberOfDaysStay:1\n\n }\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:145\n                        \n                    \n\n            \n                \n                    updateBooking value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatevisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:74\n                        \n                    \n\n            \n                \n                    updatevisible variable for popup visibility - edit booking\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:38\n                        \n                    \n\n            \n                \n                    user variable of type User\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        userBookings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Booking[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:50\n                        \n                    \n\n            \n                \n                    userBookings variable of type Booking[]\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/components/user-profile/user-profile.component.ts:70\n                        \n                    \n\n            \n                \n                    visible variable for popup visibility - cancel booking\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Booking, BookingDetails } from \"src/app/modules/booking/models/booking\";\nimport { BookingService } from \"src/app/modules/booking/services/booking.service\";\nimport { LoggedInDetails, User } from \"../../models/user\";\nimport { UserService } from \"../../services/user.service\";\n\n/**\n * User Profile Component\n */\n@Component({\n  selector:\"user-profile\",\n  templateUrl:\"./user-profile.component.html\",\n  styleUrls:['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n  /**\n   * Value of booking\n   */\n  booking: any;\n  /*\n  * Constructor for User-profile Component with dependency injection\n  */\n  constructor(\n    @Inject(\"UserService\") private userService: UserService,\n    private activatedRoute: ActivatedRoute,\n    @Inject(\"BookingService\") private bookingService: BookingService,\n    private router: Router\n  ) { }\n\n  /**\n   * Declaring details variable of type LoggedInDetails\n   */\n  details?: LoggedInDetails;\n  /**\n   * user variable of type User\n   */\n  user?: User;\n  /**\n   * id variable of type string \n   */\n  id: string = '';\n  /**\n   * search variable with empty string\n   */\n  search='';\n  /**\n   * userBookings variable of type Booking[]\n   */\n  userBookings?:Booking[];\n\n  /**\n   * This method is called to initializes the component with logged in user details\n   */\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(params => {\n\n      this.id = params[\"id\"];\n\n    })\n    this.userService.getUserByEmail(this.id).subscribe(user => {\n      this.user = user;\n      console.log(this.user);\n      this.userBookings=this.user.userBookings;\n    })\n  }\n  /**\n   * visible variable for popup visibility - cancel booking\n   */\n  visible: boolean = false;\n  /**\n   * updatevisible variable for popup visibility - edit booking\n   */\n  updatevisible:boolean=false;\n  // This method sets the visibility of cancel pop up to true. \n  showPopup() {\n    this.visible = true;\n  }\n  /**\n   * This method sets the visibility of edit pop up to true. \n   */\n  edit(){\n    this.updatevisible=true;\n  }\n  /**\n   * Value of booking Id\n   */\n  bookingId:number=1;\n  /**\n   * This method gets the booking id to cancel and call popup method\n   * @param {number} id \n   */\n  handleCancel(id: number) {\n    this.showPopup();\n    console.log(\"cancel clicked\");\n    console.log(id);\n    this.bookingId =id;\n\n  }\n\n  /**\n   * This method gets the booking id to edit and call edit method\n   * @param {number} id  \n   */\n  handleEdit(id: number) {\n    this.edit();\n    this.bookingId=id;\n\n  }\n\n  /**\n   * This method cancel the booking based on the confirmation value passed\n   * @param confirmation \n   * \n   */\n  handleClick(confirmation: boolean) {\n    console.log(confirmation);\n    if (!confirmation) {\n      this.visible = false;\n      return;\n    }\n    if(confirmation == true){\n\n      this.bookingService.cancelBooking(this.bookingId).subscribe(()=>{\n\n       console.log(\"booking cancelled\")\n\n       this.userService.getUserByEmail(this.id).subscribe(user => {\n\n         this.user = user;\n\n         console.log(this.user);\n\n         this.userBookings=this.user.userBookings;\n\n       })\n     }\n      )\n   }\n\n }\n /**\n  * updateBooking value\n  */\n updateBooking:BookingDetails={\n   userId:'',\n   numberOfDaysStay:1\n\n }\n\n /**\n  * This method update the booking based on the confirmation value passed\n  * @param confirmation \n  */\n updateBookings(confirmation:boolean){\n  if(confirmation){\n      this.updateBooking.userId = this.user!.email\n      this.bookingService.updateBooking(this.updateBooking,this.bookingId).subscribe(x=>{\n        console.log(\"booking updated\" , x);\n        this.userService.getUserByEmail(this.id).subscribe(user => {\n          this.user = user;\n          console.log(this.user);\n          this.userBookings=this.user.userBookings;\n        })\n      });\n      }\n}\n\n}\n    \n\n    \n        \n    \n        \n    \n    \n        Name : {{user!.name}}\n        Email: {{user!.email}}\n        Phone number: {{user!.phoneNumber}}\n        Aadhaar Id: {{user!.aadhaarId}}\n    \n\n\n\n\n    My Bookings\n    \n    \n\n        \n\n        \n\n            Search\n\n        \n\n    \n\n    \n        \n            \n                \n                    Booking ID \n                    No. of Days of Stay\n                    Booking Date\n                    Price \n                    Action\n                \n            \n            \n                \n                    {{bookings.id}}\n                    {{bookings.numberOfDaysStay}}\n                    {{bookings.bookingDate | date : 'longDate'}} \n                    {{bookings.price | currency:'INR'}}\n\n                    \n                        cancel  &nbsp;&nbsp;\n                        edit\n                    \n\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n    \n    \n        \n        \n\n            Room booking\n            \n\n                \n                    @\n\n                    \n                \n\n                \n                    \n                        \n                    \n                    \n\n                \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./user-profile.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Name : {{user!.name}}        Email: {{user!.email}}        Phone number: {{user!.phoneNumber}}        Aadhaar Id: {{user!.aadhaarId}}        My Bookings                                    Search                                                                        Booking ID                     No. of Days of Stay                    Booking Date                    Price                     Action                                                                            {{bookings.id}}                    {{bookings.numberOfDaysStay}}                    {{bookings.bookingDate | date : \\'longDate\\'}}                     {{bookings.price | currency:\\'INR\\'}}                                            cancel                            edit                                                                                                Room booking                                                @                                                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'footer'},{'name': 'GalleryComponent', 'selector': 'gallery'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'MembershipComponent', 'selector': 'membership'},{'name': 'PopUpComponent', 'selector': 'pop-up'},{'name': 'RegisterComponent', 'selector': 'register'},{'name': 'RoomBookingComponent', 'selector': 'room-booking'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [{'name': 'CompareDirective', 'selector': '[compareTo]'},{'name': 'UniqueEmailDirective', 'selector': '[uniqueEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserService.html":{"url":"interfaces/UserService.html","title":"interface - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/users/services/user.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getAuthenticationHeader\n                                    \n                                \n                                \n                                    \n                                        getLoggedInUser\n                                    \n                                \n                                \n                                    \n                                        getUserByEmail\n                                    \n                                \n                                \n                                    \n                                        getUserStatusAnnouncement\n                                    \n                                \n                                \n                                    \n                                        isEmailRegistered\n                                    \n                                \n                                \n                                    \n                                        login\n                                    \n                                \n                                \n                                    \n                                        logOut\n                                    \n                                \n                                \n                                    \n                                        register\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthenticationHeader\n                        \n                    \n                \n            \n            \n                \ngetAuthenticationHeader()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/user.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoggedInUser\n                        \n                    \n                \n            \n            \n                \ngetLoggedInUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/user.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LoggedInDetails | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserByEmail\n                        \n                    \n                \n            \n            \n                \ngetUserByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/user.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserStatusAnnouncement\n                        \n                    \n                \n            \n            \n                \ngetUserStatusAnnouncement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/user.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Subject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEmailRegistered\n                        \n                    \n                \n            \n            \n                \nisEmailRegistered(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/user.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginInfo: LoginInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/user.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginInfo\n                                    \n                                                LoginInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/user.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/services/user.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable, Subject } from \"rxjs\";\nimport { LoggedInDetails, LoginInfo, User } from \"../models/user\";\n\n//Interface for User with essential methods\nexport interface UserService\n{\n    login(loginInfo:LoginInfo):Observable;\n\n    register(user:User):Observable;\n\n    isEmailRegistered(email:string):Observable;\n\n    getUserStatusAnnouncement():Subject;\n\n    logOut():Observable;\n    \n    getAuthenticationHeader():any;\n\n    getLoggedInUser():LoggedInDetails|undefined;\n\n    getUserByEmail(email:string):Observable;\n\n    \n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_declarations\n\n\n\ncluster_UsersModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nLoginComponent->UsersModule\n\n\n\n\n\nMembershipComponent\n\nMembershipComponent\n\nUsersModule -->\n\nMembershipComponent->UsersModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nUsersModule -->\n\nRegisterComponent->UsersModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nUsersModule -->\n\nUserProfileComponent->UsersModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nUsersModule->LoginComponent \n\n\n\n\n\nMembershipComponent \n\nMembershipComponent \n\nMembershipComponent  -->\n\nUsersModule->MembershipComponent \n\n\n\n\n\nRegisterComponent \n\nRegisterComponent \n\nRegisterComponent  -->\n\nUsersModule->RegisterComponent \n\n\n\n\n\nUserProfileComponent \n\nUserProfileComponent \n\nUserProfileComponent  -->\n\nUsersModule->UserProfileComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nUsersModule -->\n\nSharedModule->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/users/users.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Users module with it components declarations, export and importing modules\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            MembershipComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            UserProfileComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            MembershipComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            UserProfileComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n//import { RoomBookingComponent } from './components/room-booking/room-booking.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpUserService } from './services/http-user-service';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { MembershipComponent } from './components/membership/membership.component';\nimport { RouterModule } from '@angular/router';\nimport { UserProfileComponent } from './components/user-profile/user-profile.component';\nimport { SharedModule } from '../shared/shared.module';\n\n\n/**\n * Users module with it components declarations, export and importing modules\n */\n\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RegisterComponent,\n    MembershipComponent,\n    UserProfileComponent\n \n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    ReactiveFormsModule,\n    HttpClientModule ,\n    SharedModule\n    \n  ],\n  exports:[\n    LoginComponent,\n    RegisterComponent,\n    MembershipComponent,\n    UserProfileComponent\n\n\n  ]\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                server-data/db-data.ts\n            \n            variable\n            dummybookings\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                server-data/db-data.ts\n            \n            variable\n            dummybookingsmock\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                server-data/db-data.ts\n            \n            variable\n            dummyUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                server-data/db-data.ts\n            \n            variable\n            loggedIn\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                server-data/db-data.ts\n            \n            variable\n            loggedInDetails\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                server-data/db-data.ts\n            \n            variable\n            login\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/modules/booking/components/gallery/gallery.component.ts\n            \n            component\n            GalleryComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/booking/components/room-booking/room-booking.component.ts\n            \n            component\n            RoomBookingComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/modules/booking/models/booking.ts\n            \n            interface\n            Booking\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/modules/booking/models/booking.ts\n            \n            interface\n            BookingDetails\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/modules/booking/services/booking.service.ts\n            \n            interface\n            BookingService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/modules/booking/services/http-booking-service.ts\n            \n            injectable\n            HttpBookingService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/modules/booking/services/http-booking-service.ts\n            \n            variable\n            url\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/core/components/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/modules/core/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/modules/core/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/modules/core/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/modules/core/interceptors/cache-interceptor.service.ts\n            \n            interceptor\n            CacheInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/core/interceptors/interceptor.service.ts\n            \n            injectable\n            InterceptorService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/modules/core/services/http-cache.service.ts\n            \n            injectable\n            HttpCacheService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/modules/shared/components/pop-up/pop-up.component.ts\n            \n            component\n            PopUpComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/modules/shared/directives/compare.directive.ts\n            \n            directive\n            CompareDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/shared/directives/compare.directive.ts\n            \n            variable\n            compare\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/directives/unique-email.directive.ts\n            \n            directive\n            UniqueEmailDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/shared/directives/unique-email.directive.ts\n            \n            variable\n            uniqueEmailValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/pipes/search.pipe.ts\n            \n            pipe\n            SearchPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/users/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/modules/users/components/membership/membership.component.ts\n            \n            component\n            MembershipComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/users/components/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/modules/users/components/user-profile/user-profile.component.ts\n            \n            component\n            UserProfileComponent\n            \n                89 %\n                (17/19)\n            \n        \n        \n            \n                \n                src/app/modules/users/models/user.ts\n            \n            interface\n            LoggedInDetails\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/modules/users/models/user.ts\n            \n            interface\n            LoginInfo\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/modules/users/models/user.ts\n            \n            interface\n            User\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/modules/users/services/http-user-service.ts\n            \n            injectable\n            HttpUserService\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/modules/users/services/http-user-service.ts\n            \n            variable\n            baseUrl\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/users/services/user.service.ts\n            \n            interface\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^14.0.0\n        \n            @angular/common : ^14.0.0\n        \n            @angular/compiler : ^14.0.0\n        \n            @angular/core : ^14.0.0\n        \n            @angular/forms : ^14.0.0\n        \n            @angular/platform-browser : ^14.0.0\n        \n            @angular/platform-browser-dynamic : ^14.0.0\n        \n            @angular/router : ^14.0.0\n        \n            @fortawesome/fontawesome-free : ^6.2.0\n        \n            @fortawesome/free-solid-svg-icons : ^6.2.0\n        \n            @ngrx/store : ^14.3.2\n        \n            @popperjs/core : ^2.11.6\n        \n            bootstrap : ^5.2.2\n        \n            jquery : ^3.6.1\n        \n            lint-staged : ^13.0.4\n        \n            ngx-logger : ^5.0.11\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.4.1\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHotelManagementClient\nThis project was generated with Angular CLI version 14.2.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BookingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_BookingModule\n\n\n\ncluster_BookingModule_declarations\n\n\n\ncluster_BookingModule_imports\n\n\n\ncluster_BookingModule_exports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_declarations\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nAppRoutingModule->SharedModule\n\n\n\n\n\nBookingModule\n\nBookingModule\n\nAppModule -->\n\nBookingModule->AppModule\n\n\n\n\n\nGalleryComponent \n\nGalleryComponent \n\nGalleryComponent  -->\n\nBookingModule->GalleryComponent \n\n\n\n\n\nRoomBookingComponent \n\nRoomBookingComponent \n\nRoomBookingComponent  -->\n\nBookingModule->RoomBookingComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nCoreModule->FooterComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nCoreModule->HeaderComponent \n\n\n\n\n\nHomeComponent \n\nHomeComponent \n\nHomeComponent  -->\n\nCoreModule->HomeComponent \n\n\n\n\n\nCacheInterceptor\n\nCacheInterceptor\n\nAppModule -->\n\nCacheInterceptor->AppModule\n\n\n\n\n\nHttpCacheService\n\nHttpCacheService\n\nAppModule -->\n\nHttpCacheService->AppModule\n\n\n\n\n\nInterceptorService\n\nInterceptorService\n\nAppModule -->\n\nInterceptorService->AppModule\n\n\n\n\n\nGalleryComponent\n\nGalleryComponent\n\nBookingModule -->\n\nGalleryComponent->BookingModule\n\n\n\n\n\nRoomBookingComponent\n\nRoomBookingComponent\n\nBookingModule -->\n\nRoomBookingComponent->BookingModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nBookingModule -->\n\nUsersModule->BookingModule\n\n\n\nCoreModule -->\n\nUsersModule->CoreModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nUsersModule->LoginComponent \n\n\n\n\n\nMembershipComponent \n\nMembershipComponent \n\nMembershipComponent  -->\n\nUsersModule->MembershipComponent \n\n\n\n\n\nRegisterComponent \n\nRegisterComponent \n\nRegisterComponent  -->\n\nUsersModule->RegisterComponent \n\n\n\n\n\nUserProfileComponent \n\nUserProfileComponent \n\nUserProfileComponent  -->\n\nUsersModule->UserProfileComponent \n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nCoreModule -->\n\nFooterComponent->CoreModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nCoreModule -->\n\nHeaderComponent->CoreModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nCoreModule -->\n\nHomeComponent->CoreModule\n\n\n\nCoreModule -->\n\nSharedModule->CoreModule\n\n\n\nUsersModule -->\n\nSharedModule->UsersModule\n\n\n\n\n\nPopUpComponent \n\nPopUpComponent \n\nPopUpComponent  -->\n\nSharedModule->PopUpComponent \n\n\n\n\n\nSearchPipe \n\nSearchPipe \n\nSearchPipe  -->\n\nSharedModule->SearchPipe \n\n\n\n\n\nPopUpComponent\n\nPopUpComponent\n\nSharedModule -->\n\nPopUpComponent->SharedModule\n\n\n\n\n\nSearchPipe\n\nSearchPipe\n\nSharedModule -->\n\nSearchPipe->SharedModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nUsersModule -->\n\nLoginComponent->UsersModule\n\n\n\n\n\nMembershipComponent\n\nMembershipComponent\n\nUsersModule -->\n\nMembershipComponent->UsersModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nUsersModule -->\n\nRegisterComponent->UsersModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nUsersModule -->\n\nUserProfileComponent->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            baseUrl   (src/.../http-user-service.ts)\n                        \n                        \n                            compare   (src/.../compare.directive.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            dummybookings   (server-data/.../db-data.ts)\n                        \n                        \n                            dummybookingsmock   (server-data/.../db-data.ts)\n                        \n                        \n                            dummyUser   (server-data/.../db-data.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            loggedIn   (server-data/.../db-data.ts)\n                        \n                        \n                            loggedInDetails   (server-data/.../db-data.ts)\n                        \n                        \n                            login   (server-data/.../db-data.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            uniqueEmailValidator   (src/.../unique-email.directive.ts)\n                        \n                        \n                            url   (src/.../http-booking-service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/modules/users/services/http-user-service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://localhost:5000/api/users'\n                    \n                \n\n            \n                \n                    API url for users\n\n                \n            \n\n        \n    \n\n    src/app/modules/shared/directives/compare.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        compare\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (password:string, confirmPassword:string):ValidatorFn =>{\n\n  return control =>{\n    var c1 = control.get(password);\n    var c2 = control.get(confirmPassword);\n    var v1 = c1!.value;\n    var v2 = c2!.value;\n\n    if(v1 === v2)\n      return null;\n    else\n      return {compare:{message:`The fields ${password} and ${confirmPassword} don't match`}};\n  }\n\n}\n                    \n                \n\n            \n                \n                    compare method which can be exported\n\n                \n            \n\n        \n    \n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    server-data/db-data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dummybookings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\"id\":1,\"userId\":\"srilakshmi27272@gmail.com\",\"numberOfDaysStay\":2,\"price\":1000,\"bookingDate\":\"2022-11-14T00:00:00\"},\n    {\"id\":1,\"userId\":\"srilakshmi27272@gmail.com\",\"numberOfDaysStay\":3,\"price\":1500,\"bookingDate\":\"2022-11-16T00:00:00\"}\n]\n                    \n                \n\n            \n                \n                    dummybookings array for unit testing\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dummybookingsmock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : [\n     {\"id\":1,\"userId\":\"srilakshmi27272@gmail.com\",\"numberOfDaysStay\":7,\"price\":1000,\"bookingDate\":\"2022-11-14T00:00:00\"}\n ]\n                    \n                \n\n            \n                \n                    dummybookingsmock for unit testing\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dummyUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    name:\"Srilakshmi\",\n    profilePic:\"https://www.bing.com/th?id=OIP.4lvhDGxwRYkur9Z5jeia7AHaFg&w=150&h=112&c=8&rs=1&qlt=90&o=6&dpr=1.5&pid=3.1&rm=2\",\n    phoneNumber:\"9137846733\",\n    aadhaarId:\"234786345612\",\n    email:\"srilakshmi27272@gmail.com\",\n    password:\"1234\"\n    }\n                    \n                \n\n            \n                \n                    mock user details\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    user:{\n        name:\"srilakshmi\",\n        profilePic:\"https://www.bing.com/th?id=OIP.4lvhDGxwRYkur9Z5jeia7AHaFg&w=150&h=112&c=8&rs=1&qlt=90&o=6&dpr=1.5&pid=3.1&rm=2\",\n        phoneNumber:\"9137846733\",\n        aadhaarId:\"234786345612\",\n        email:\"srilakshmi27272@gmail.com\",\n        password:\"1234\"\n        }   ,\n        token:\"qwertyui\" \n }\n                    \n                \n\n            \n                \n                    mock loggedIn details\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggedInDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : [{\n   user:{\n    email:\"srilakshmi27272@gmail.com\",\n    password:\"1234\",\n   },\n    token:\"asdfghjkl\"\n }\n ]\n                    \n                \n\n            \n                \n                    loggedInDetails mock data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n     \n     email:\"srilakshmi27272@gmail.com\",\n     password:\"1234\"\n }\n                    \n                \n\n            \n                \n                    mock login details\n\n                \n            \n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  logging:{\n    level:NgxLoggerLevel.TRACE,\n    serverLogLevel:NgxLoggerLevel.TRACE,\n    serverLoggingUrl: 'https://localhost:5000/api/logs',\n    disableConsoleLogging: false\n  }\n}\n                    \n                \n\n            \n                \n                    environment object with logging settings and production mode\n\n                \n            \n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  logging:{\n    level:NgxLoggerLevel.TRACE,\n    serverLogLevel:NgxLoggerLevel.TRACE,\n    serverLoggingUrl: 'https://localhost:5000/api/logs',\n    disableConsoleLogging: false\n  }\n}\n                    \n                \n\n            \n                \n                    environment object with logging settings and production mode\n\n                \n            \n\n        \n    \n\n    src/app/modules/shared/directives/unique-email.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        uniqueEmailValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (userService: UserService): AsyncValidatorFn => {\n\n  var actualValidator: AsyncValidatorFn = (control: AbstractControl)\n              : Promise | Observable => {\n    \n\n      return (>userService\n                .isEmailRegistered(control.value))\n                .pipe(\n                  map( (registered:boolean)=>{\n                    if(registered)\n                      return {uniqueEmail:{message:`duplicate email id`}};\n                    else\n                      return null;\n                  })\n                );\n\n\n    return of(null);\n  };\n\n  return actualValidator;\n}\n                    \n                \n\n            \n                \n                    uniqueEmailValidator function for directive\n\n                \n            \n\n        \n    \n\n    src/app/modules/booking/services/http-booking-service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://localhost:5000/api/bookings\"\n                    \n                \n\n            \n                \n                    API url for bookings\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
